# Language pt-BR translations for Introduction_to_Web_Beans package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: Introduction_to_Web_Beans VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-12-14T13:35:17\n"
"PO-Revision-Date: 2010-10-21 01:13-0300\n"
"Last-Translator: Bruno Leonardo Gonçalves <brunolmfg@gmail.com>\n"
"Language-Team: none\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Getting started with Weld"
msgstr "Iniciando com o Weld"

#. Tag: para
#, no-c-format
msgid "Weld comes with a number of examples. We recommend you start with <literal>examples/jsf/numberguess</literal> and <literal>examples/jsf/translator</literal>. Numberguess is a web (war) example containing only non-transactional managed beans. This example can be run on a wide range of servers, including JBoss AS, GlassFish, Apache Tomcat, Jetty, Google App Engine, and any compliant Java EE 6 container. Translator is an enterprise (ear) example that contains session beans. This example must be run on JBoss AS 6.0, Glassfish 3.0 or any compliant Java EE 6 container."
msgstr "O Weld vem com vários exemplos. Nós recomendamos que você inicie com <literal>examples/jsf/numberguess</literal> e <literal>examples/jsf/translator</literal>. O numberguess é um exemplo web (war) contendo somente managed beans não-transacionais. Este exemplo pode ser executado em uma ampla variedade de servidores, incluindo JBoss AS, GlassFish, Apache Tomcat, Jetty, Google App Engine, e qualquer contêiner Java EE 6 compatível. O translator é um exemplo corporativo (ear) que contém sessions beans. Este exemplo deve executar no JBoss AS 6.0, GlassFish 3.0 ou qualquer contêiner Java EE 6 compatível."

#. Tag: para
#, no-c-format
msgid "Both examples use JSF 2.0 as the web framework and, as such, can be found in the <literal>examples/jsf</literal> directory of the Weld distribution."
msgstr "Ambos exemplos usam JSF 2.0 como framework web e podem ser encontrados no diretório <literal>examples/jsf</literal> da distribuição do Weld."

#. Tag: title
#, no-c-format
msgid "Prerequisites"
msgstr "Pré-requisitos"

#. Tag: para
#, fuzzy, no-c-format
msgid "To run the examples with the provided build scripts, you&#39;ll need the following:"
msgstr "Para executar os exemplos com os scripts de construção fornecidos, você precisará dos seguintes itens:"

#. Tag: para
#, no-c-format
msgid "the latest release of Weld, which contains the examples"
msgstr "a última versão do Weld, a qual contém os exemplos"

#. Tag: para
#, no-c-format
msgid "Ant 1.7.0, to build and deploy the examples"
msgstr "Ant 1.7.0, para construir e implantar os exemplos"

#. Tag: para
#, no-c-format
msgid "a supported runtime environment (minimum versions shown)"
msgstr "um ambiente de execução suportado (versões mínimas requeridas)"

#. Tag: para
#, no-c-format
msgid "JBoss AS 6.0.0,"
msgstr "JBoss AS 6.0.0,"

#. Tag: para
#, no-c-format
msgid "GlassFish 3.0,"
msgstr "GlassFish 3.0,"

#. Tag: para
#, no-c-format
msgid "Apache Tomcat 6.0.x (war example only), or"
msgstr "Apache Tomcat 6.0.x (somente com o exemplo war), ou"

#. Tag: para
#, no-c-format
msgid "Jetty 6.1.x (war example only)"
msgstr "Jetty 6.1.x (somente com o exemplo war)"

#. Tag: para
#, no-c-format
msgid "(optionally) Maven 2.x, to run the examples in an embedded servlet container"
msgstr "(opcionalmente) Maven 2.x, para executar os exemplos em um contêiner servlet embutido"

#. Tag: para
#, fuzzy, no-c-format
msgid "You&#39;ll need a full install of Ant 1.7.0. Some linux distributions only supply a partial installation of Ant which cause the build to fail. If you encounter problems, verify that ant-nodeps.jar is on the classpath."
msgstr "Você precisará de uma instalação completa do Ant 1.7.0. Algumas distribuições Linux fornecem apenas uma instalação parcial do Ant que faz com que a construção falhe. Se você tiver problemas, verifique se ant-nodeps.jar está no classpath."

#. Tag: para
#, fuzzy, no-c-format
msgid "In the next few sections, you&#39;ll be using the Ant command (<literal>ant</literal>) to invoke the Ant build script in each example to compile, assemble and deploy the example to JBoss AS and, for the war example, Apache Tomcat. You can also deploy the generated artifact (war or ear) to any other container that supports Java EE 6, such as GlassFish 3."
msgstr "Nas próximas seções, você usará o comando do Ant (<literal>ant</literal>) para invocar o script de construção do Ant em cada exemplo para compilar, montar e implantar o exemplo no JBoss AS e, para o exemplo war, no Apache Tomcat. Você também pode implantar o artefato produzido (war ou ear) em qualquer outro contêiner que suporte Java EE 6, como o GlassFish 3."

#. Tag: para
#, no-c-format
msgid "If you have Maven installed, you can use the Maven command (<literal>mvn</literal>) to compile and assemble the standalone artifact (war or ear) and, for the war example, run it in an embedded container."
msgstr "Se você tem o Maven instalado, você pode usar o comando do Maven (<literal>mvn</literal>) para compilar e montar o artefato autônomo (war ou ear) e, para o exemplo war, executá-lo em um contêiner embutido."

#. Tag: para
#, fuzzy, no-c-format
msgid "The sections below cover the steps for deploying with both Ant and Maven in detail. Let&#39;s start with JBoss AS."
msgstr "As seções abaixo cobrem os passos para implantar com Ant e Maven em detalhes. Vamos iniciar com o JBoss AS."

#. Tag: title
#, no-c-format
msgid "Deploying to JBoss AS"
msgstr "Implantando no JBoss AS"

#. Tag: para
#, fuzzy, no-c-format
msgid "To deploy the examples to JBoss AS, you&#39;ll need <ulink url=\"http://jboss.org/jbossas/\">JBoss AS 6.0.0</ulink> or above. If a release of the JBoss AS 6.0 line isn&#39;t yet available, you can download a <ulink url=\"http://hudson.jboss.org/hudson/view/JBoss%20AS/job/JBoss-AS-6.0.x/\">nightly snapshot</ulink>. The reason JBoss AS 6.0.0 or above is required is because it&#39;s the first release that has both CDI and Bean Validation support built-in, making it close enough to Java EE 6 to run the examples. The good news is that there are no additional modifications you have to make to the server. It&#39;s ready to go!"
msgstr "Para implantar os exemplos no JBoss AS, você precisará do <ulink url=\"http://jboss.org/jbossas/\">JBoss AS 6.0.0</ulink> ou acima. Se uma versão da linha JBoss AS 6.0 ainda não estiver disponível, você pode baixar um <ulink url=\"http://hudson.jboss.org/hudson/view/JBoss%20AS/job/JBoss-AS-6.0.x/\">nightly snapshot</ulink>. A razão do JBoss AS 6.0.0 ou acima ser requerido é porque esta é a primeira versão que possui suporte embutido a CDI e Bean Validation, tornando-o próximo suficiente a Java EE 6 para executar os exemplos. A boa notícia é que não existem modificações adicionais que você tenha que fazer no servidor. Está pronto para funcionar!"

#. Tag: para
#, fuzzy, no-c-format
msgid "After you have downloaded JBoss AS, extract it. (We recommended renaming the folder to include the <literal>as</literal> qualifier so it&#39;s clear that it&#39;s the application server). You can move the extracted folder anywhere you like. Wherever it lays to rest, that&#39;s what we&#39;ll call the JBoss AS installation directory, or <literal>JBOSS_HOME</literal>."
msgstr "Depois de ter baixado o JBoss AS, extrai-o. (Recomendamos renomear a pasta para incluir o qualificador <literal>as</literal>, assim fica claro que é o servidor de aplicação). Você pode mover a pasta extraída para qualquer lugar que você queira. Seja qual for o local, este é o que chamaremos de diretório de instalação do JBoss AS, ou <literal>JBOSS_HOME</literal>."

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; unzip jboss-6.0.*.zip\n"
"$&#62; mv jboss-6.0.*/ jboss-as-6.0"
msgstr ""

#. Tag: para
#, no-c-format
msgid "In order for the build scripts to know where to deploy the example, you have to tell them where to find your JBoss AS installation (i.e., <literal>JBOSS_HOME</literal>). Create a new file named <literal>local.build.properties</literal> in the examples directory of the Weld distribution and assign the path of your JBoss AS installation to the property key <literal>jboss.home</literal>, as follows:"
msgstr "Para que os scripts de construção saibam onde implantar o exemplo, você tem que dizer a eles onde encontrar sua instalação do JBoss AS (ou seja, <literal>JBOSS_HOME</literal>). Crie um novo arquivo com o nome <literal>local.build.properties</literal> no diretório dos exemplos do Weld obtido e atribua o caminho até sua instalação do JBoss AS para a propriedade <literal>jboss.home</literal>, como a seguir:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "jboss.home=/path/to/jboss-as-6.0"
msgstr "<![CDATA[jboss.home=/path/to/jboss-as-5.2]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "You&#39;re now ready to deploy your first example!"
msgstr "Agora você está pronto para implantar seu primeiro exemplo!"

#. Tag: para
#, no-c-format
msgid "Switch to the <literal>examples/jsf/numberguess</literal> directory and execute the Ant <literal>deploy</literal> target:"
msgstr "Vá para o diretório <literal>examples/jsf/numberguess</literal> e execute o alvo <literal>deploy</literal> no Ant:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; ant deploy"
msgstr ""
"<![CDATA[$> cd examples/jsf/numberguess\n"
"$> ant deploy]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "If you haven&#39;t already, start JBoss AS. You can either start JBoss AS from a Linux shell:"
msgstr "Se você já não estiver, inicie o JBoss AS. Você pode também iniciar o JBoss AS a partir de um shell Linux:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd /path/to/jboss-as-6.0\n"
"$&#62; ./bin/run.sh"
msgstr ""
"<![CDATA[$> cd /path/to/jboss-as-5.2\n"
"$> ./bin/run.sh]]>"

#. Tag: para
#, no-c-format
msgid "a Windows command window:"
msgstr "uma janela de comandos do Windows:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd c:\\path\\to\\jboss-as-6.0\\bin\n"
"$&#62; run"
msgstr ""
"<![CDATA[$> cd c:\\path\\to\\jboss-as-5.2\\bin\n"
"$> run]]>"

#. Tag: para
#, no-c-format
msgid "or you can start the server using an IDE, like Eclipse."
msgstr "ou você pode iniciar o servidor usando uma IDE, como o Eclipse."

#. Tag: para
#, no-c-format
msgid "If you are using Eclipse, you should seriously consider installing the <ulink url=\"http://www.jboss.org/tools\">JBoss Tools</ulink> add-ons, which include a wide variety of tooling for JSR-299 and Java EE development, as well as an enhanced JBoss AS server view."
msgstr "Se você estiver usando o Eclipse, deve considerar seriamente instalar os add-ons do <ulink url=\"http://www.jboss.org/tools\">JBoss Tools</ulink>, que inclui uma ampla variedade de ferramentas para desenvolvimento com JSR-299 e Java EE, bem como uma visão melhorada para o servidor JBoss AS."

#. Tag: para
#, no-c-format
msgid "Wait a few seconds for the application to deploy (or the application server to start) and see if you can determine the most efficient approach to pinpoint the random number at the local URL <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>."
msgstr "Aguarde uns poucos segundos para a aplicação ser implantada (ou o servidor de aplicação iniciar) e veja se você pode determinar a abordagem mais eficiente para apontar o número aleatório na URL local <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>."

#. Tag: para
#, no-c-format
msgid "The Ant build script includes additional targets for JBoss AS to deploy and undeploy the archive in either exploded or packaged format and to tidy things up."
msgstr "O script de construção do Ant inclui alvos adicionais para o JBoss AS implantar e desimplantar o arquivo no formato explodido ou empacotado e deixar tudo certo."

#. Tag: para
#, no-c-format
msgid "<literal>ant restart</literal> - deploy the example in exploded format to JBoss AS"
msgstr "<literal>ant restart</literal> - implanta o exemplo no formato explodido no JBoss AS"

#. Tag: para
#, no-c-format
msgid "<literal>ant explode</literal> - update an exploded example, without restarting the deployment"
msgstr "<literal>ant explode</literal> - atualiza o exemplo explodido, sem reiniciar a implantação"

#. Tag: para
#, no-c-format
msgid "<literal>ant deploy</literal> - deploy the example in compressed jar format to JBoss AS"
msgstr "<literal>ant deploy</literal> - implanta o exemplo no formato jar compactado no JBoss AS"

#. Tag: para
#, no-c-format
msgid "<literal>ant undeploy</literal> - remove the example from JBoss AS"
msgstr "<literal>ant undeploy</literal> - remove o exemplo do JBoss AS"

#. Tag: para
#, no-c-format
msgid "<literal>ant clean</literal> - clean the example"
msgstr "<literal>ant clean</literal> - limpa o exemplo"

#. Tag: para
#, no-c-format
msgid "The second starter example, <literal>weld-translator</literal>, will translate your text into Latin. (Well, not really, but the stub is there for you to implement, at least. Good luck!) To try it out, switch to the translator example directory and execute the deploy target:"
msgstr "O segundo exemplo de partida, <literal>weld-translator</literal>, traduzirá seu texto para Latin. (Bem, não realmente, mas o mínimo está lá para você ao menos começar. Boa sorte!) Para testá-lo, mude para o diretório do exemplo de tradutor e execute o alvo deploy:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/translator\n"
"$&#62; ant deploy"
msgstr ""
"<![CDATA[$> cd examples/jsf/translator\n"
"$> ant deploy]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "The translator uses session beans, which are packaged in an EJB module within an ear. Java EE 6 will allow session beans to be deployed in war modules, but that&#39;s a topic for a later chapter."
msgstr "O tradutor utiliza session beans, os quais estão empacotados em um módulo EJB dentro de um ear. Java EE 6 permitirá que session beans sejam implantados em módulos war, mas isto é um tópico para um capítulo posterior."

#. Tag: para
#, fuzzy, no-c-format
msgid "Again, wait a few seconds for the application to deploy (if you&#39;re really bored, read the log messages), and visit <ulink url=\"http://localhost:8080/weld-translator\">http://localhost:8080/weld-translator</ulink> to begin pseudo-translating."
msgstr "Novamente, aguarde uns poucos segundos para a aplicação ser implantada (se você está realmente entediado, leia as mensagens de log), e visite <ulink url=\"http://localhost:8080/weld-translator\">http://localhost:8080/weld-translator</ulink> para começar a pseudo-tradução."

#. Tag: title
#, no-c-format
msgid "Deploying to GlassFish"
msgstr "Implantando no GlassFish"

#. Tag: para
#, fuzzy, no-c-format
msgid "Deploying to GlassFish should be easy and familiar, right? After all, it&#39;s the Java EE 6 reference implementation and Weld is the JSR-299 reference implementation, meaning Weld gets bundled with GlassFish. So yes, it&#39;s all quite easy and familiar."
msgstr "Implantar no GlassFish deve ser fácil e familiar, certo? Afinal, é a implementação de referência da Java EE 6 e Weld é a implementação de referência da JSR-299, o que significa que o Weld vem integrado ao GlassFish. Então, sim, é tudo muito fácil e familiar."

#. Tag: para
#, fuzzy, no-c-format
msgid "To deploy the examples to GlassFish, you&#39;ll need the final <ulink url=\"https://glassfish.dev.java.net/downloads/v3-final.html\">GlassFish V3</ulink> release. Select the release that ends in either <literal>-unix.sh</literal> or <literal>-windows.exe</literal> depending on your platform. After the download is complete, execute the installer. On Linux/Unix, you&#39;ll need to first make the script executable."
msgstr "Para implantar os exemplos no GlassFish, você precisará o versão final do <ulink url=\"https://glassfish.dev.java.net/downloads/v3-final.html\">GlassFish V3</ulink>. Selecione a versão que termina com <literal>-unix.sh</literal> ou <literal>-windows.exe</literal> de acordo com sua plataforma. Após a conclusão do download, execute o instalador. Em Linux/Unix, primeiramente, você precisará tornar o script executável."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; chmod 755 glassfish-v3-unix.sh\n"
"$&#62; ./glassfish-v3-unix.sh"
msgstr ""
"<![CDATA[$> chmod 755 glassfish-v3-b69-unix.sh\n"
"$> ./glassfish-v3-b69-unix.sh]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "On Windows you can just click on the executable. Follow the instructions in the installer. It will create a single domain named <literal>domain1</literal>. You&#39;ll use that domain to deploy the example. We recommend that you choose <literal>7070</literal> as the main HTTP port to avoid conflicts with a running instance of JBoss AS (or Apache Tomcat)."
msgstr "No Windows você pode simplesmente clicar sobre o executável. Siga as instruções no instalador. Ele criará um único domínio nomeado como <literal>domain1</literal>. Você usará este domínio para implantar os exemplos. Nós recomendamos que você escolha <literal>7070</literal> como a porta HTTP principal para evitar conflitos com uma instância em execução do JBoss AS (ou Apache Tomcat)."

#. Tag: para
#, fuzzy, no-c-format
msgid "If you&#39;ve deployed either of the starter examples, <literal>weld-numberguess</literal> or <literal>weld-translator</literal>, to JBoss AS, then you already have the deployable artifact you need. If not, switch to either of the two directories and build it."
msgstr "Se você tiver implantado um dos exemplos de partida, <literal>weld-numberguess</literal> ou <literal>weld-translator</literal>, no JBoss AS, então você já possui o artefato implantável que necessita. Se não, mude para qualquer um dos dois diretórios e mande construí-lo."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess (or examples/jsf/translator)\n"
"$&#62; ant package"
msgstr ""
"<![CDATA[$> cd examples/jsf/numberguess (or examples/jsf/translator)\n"
"$> ant package]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "The deployable archive for the <literal>weld-numberguess</literal>, named <literal>weld-numberguess.war</literal>, ends up in the example&#39;s <literal>target</literal> directory. The archive for the <literal>weld-translator</literal> example, named <literal>weld-translator.ear</literal>, ends up in the example&#39;s <literal>ear/target</literal> directory. All you need to do now is deploy them to GlassFish."
msgstr "O artefato implantável para o exemplo <literal>weld-numberguess</literal>, com o nome <literal>weld-numberguess.war</literal>, é criado no diretório <literal>target</literal> do exemplo. O arquivo para o exemplo <literal>weld-translator</literal>, com o nome <literal>weld-translator.ear</literal>, é criado no diretório <literal>ear/target</literal> do exemplo. Tudo que você precisa fazer agora é implantá-lo no GlassFish."

#. Tag: para
#, no-c-format
msgid "One way to deploy applications to GlassFish is by using the <ulink url=\"http://localhost:4848\">GlassFish Admin Console</ulink>. To get the Admin Console running, you need to start a GlassFish domain, in our case <literal>domain1</literal>. Switch to the <literal>bin</literal> folder in the directory where you installed GlassFish and execute the following command:"
msgstr "Um modo para implantar aplicações no GlassFish é utilizando o <ulink url=\"http://localhost:4848\">GlassFish Admin Console</ulink>.  Para ter o Admin Console em executação, você precisa iniciar um domínio do GlassFish, em nosso caso <literal>domain1</literal>. Mude para a pasta <literal>bin</literal> no diretório onde você instalou o GlassFish e execute o seguinte comando:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; asadmin start-domain domain1"
msgstr "<![CDATA[$> asadmin start-domain domain1]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "After a few seconds you can visit the Admin Console in the browser at the URL <ulink url=\"http://localhost:4848\">http://localhost:4848</ulink>. In the tree on the left-hand side of the page, click on &#34;Applications&#34;, then click on the &#34;Deploy...&#34; button under the heading &#34;Applications&#34; and select the deployable artifact for either of the two examples. The deployer should recognize that you have selected a Java EE artifact and allow you to start it. You can see the examples running at either <ulink url=\"http://localhost:7070/weld-numberguess\">http://localhost:7070/weld-numberguess</ulink> or <ulink url=\"http://localhost:7070/weld-translator\">http://localhost:7070/weld-translator</ulink>, depending on which example you deployed."
msgstr "Após uns poucos segundos você pode visitar o Admin Console no navegador através da URL <ulink url=\"http://localhost:4848\">http://localhost:4848</ulink>. Na árvore do lado esquerdo da página, clique em \"Aplicações\", depois no botão \"Implantar...\" abaixo do título \"Aplicações\" e selecione o artefato implantável para qualquer um dos dois exemplos. O implantador deve reconhecer que você selecionou um artefato Java EE e permite que você o inicie. Você pode ver os exemplos rodando em <ulink url=\"http://localhost:7070/weld-numberguess\">http://localhost:7070/weld-numberguess</ulink> ou <ulink url=\"http://localhost:7070/weld-translator\">http://localhost:7070/weld-translator</ulink>, dependendo de qual exemplo você implantou."

#. Tag: para
#, no-c-format
msgid "Alternatively, you can deploy the application to GlassFish using the asadmin command:"
msgstr "Alternativamente, você pode implantar a aplicação no GlassFish utilizando o comando asadmin:"

#. Tag: programlisting
#, no-c-format
msgid "$&#62; asadmin deploy target/weld-numberguess.war"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The reason the same artifact can be deployed to both JBoss AS and GlassFish, without any modifications, is because all of the features being used are part of the standard platform. And what a capable platform it has become!"
msgstr "A razão pela qual o mesmo artefato pode ser implantado tanto no JBoss AS quanto no GlassFish, sem qualquer modificação, é porque todas as funcionalidades utilizadas fazem parte da plataforma padrão. E o que uma plataforma competente é capaz de fazer!"

#. Tag: title
#, no-c-format
msgid "Deploying to Apache Tomcat"
msgstr "Implantando no Apache Tomcat"

#. Tag: para
#, no-c-format
msgid "Servlet containers are not required to support Java EE services like CDI. However, you can use CDI in a servlet container like Tomcat by embedding a standalone CDI implementation such as Weld."
msgstr "Os contêineres servlet não são requeridos para suportar serviços Java EE como CDI. No entanto, você pode usar CDI em um contêiner servlet, como o Tomcat, incorporando uma implementação standalone de CDI, como o Weld."

#. Tag: para
#, fuzzy, no-c-format
msgid "Weld comes with a servlet listener which bootstraps the CDI environment, registers the <literal>BeanManager</literal> in JNDI and provides injection into servlets. Basically, it emulates some of the work done by the Java EE container. (But you don&#39;t get enterprise features such as session beans and container-managed transactions.)"
msgstr "O Weld vem com um servlet listener que inicializa o ambiente CDI, registra o <literal>BeanManager</literal> no JNDI e oferece injeção dentro de servlets. Basicamente, ele simula um pouco do trabalho realizado pelo contêiner Java EE. (Mas você não terá funcionalidades corporativas como session beans e transações gerenciadas pelo contêiner.)"

#. Tag: para
#, fuzzy, no-c-format
msgid "Let&#39;s give the Weld servlet extension a spin on Apache Tomcat. First, you&#39;ll need to download Tomcat 6.0.18 or later from <ulink url=\"http://tomcat.apache.org/download-60.cgi\">tomcat.apache.org</ulink> and extract it."
msgstr "Vamos colocar a extensão servlet do Weld para rodar no Apache Tomcat. Primeiro você precisará baixar o Tomcat 6.0.18 ou posterior em <ulink url=\"http://tomcat.apache.org/download-60.cgi\">tomcat.apache.org</ulink>, e o descompactar."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; unzip apache-tomcat-6.0.18.zip"
msgstr "<![CDATA[$> unzip apache-tomcat-6.0.18.zip]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "You have two choices for how you can deploy the application to Tomcat. You can deploy it by pushing the artifact to the hot deploy directory using Ant or you can deploy to the server across HTTP using a Maven plugin. The Ant approach doesn&#39;t require that you have Maven installed, so we&#39;ll start there. If you want to use Maven, you can just skip ahead."
msgstr "Você possui duas opções para implantar a aplicação no Tomcat. Você pode implantá-la publicando o artefato no diretório de implantação automática usando o Ant ou você pode implantar no servidor via HTTP usando um plugin do Maven. A abordagem do Ant não requer que você tenha o Maven instalado, por isso começaremos por aí. Se você quer usar o Maven, você pode simplesmente pular esta seção."

#. Tag: title
#, no-c-format
msgid "Deploying with Ant"
msgstr "Implantando com o Ant"

#. Tag: para
#, fuzzy, no-c-format
msgid "In order for Ant to push the artifact to the Tomcat hot deploy directory, it needs to know where the Tomcat installation is located. Again, we need to set a property in the <literal>local.build.properties</literal> file in the examples directory of the Weld distribution. If you haven&#39;t yet created this file, do so now. Then assign the path of your Tomcat installation to the property key <literal>tomcat.home</literal>."
msgstr "Para que o Ant coloque o artefato no diretório de implantação automática do Tomcat, ele precisa saber onde a instalação do Tomcat está localizada. Novamente, precisamos definir uma propriedade no arquivo <literal>local.build.properties</literal> dentro do diretório de exemplos do Weld obtido. Se você ainda não tiver criado este arquivo, faça isso agora. Em seguida, atribua o caminho de sua instalação do Tomcat na propriedade <literal>tomcat.home</literal>."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "tomcat.home=/path/to/apache-tomcat-6"
msgstr "<![CDATA[tomcat.home=/path/to/apache-tomcat-6]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "Now you&#39;re ready to deploy the numberguess example to Tomcat!"
msgstr "Agora você está pronto para implantar o exemplo numberguess no Tomcat!"

#. Tag: para
#, no-c-format
msgid "Change to the <literal>examples/jsf/numberguess</literal> directory again and run the Ant <literal>deploy</literal> target for Tomcat:"
msgstr "Mude para o diretório <literal>examples/jsf/numberguess</literal> novamente e execute o alvo <literal>deploy</literal> no Ant para o Tomcat:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; ant tomcat.deploy"
msgstr ""
"<![CDATA[$> cd examples/jsf/numberguess\n"
"$> ant tomcat.deploy]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "The Ant build script includes additional targets for Tomcat to deploy and undeploy the archive in either exploded or packaged format. They are the same target names used for JBoss AS, prefixed with &#34;tomcat.&#34;."
msgstr "O script de contrução do Ant inclui alvos adicionais para o Tomcat implantar e desimplantar o arquivo no formato explodido ou empacotado. Eles possuem os mesmos nomes usados nos alvos do JBoss AS, prefixados com \"tomcat.\"."

#. Tag: para
#, no-c-format
msgid "<literal>ant tomcat.restart</literal> - deploy the example in exploded format to Tomcat"
msgstr "<literal>ant tomcat.restart</literal> - implanta o exemplo no formato explodido no Tomcat"

#. Tag: para
#, no-c-format
msgid "<literal>ant tomcat.explode</literal> - update an exploded example, without restarting the deployment"
msgstr "<literal>ant tomcat.explode</literal> - atualiza o exemplo explodido, sem reiniciar a implantação"

#. Tag: para
#, no-c-format
msgid "<literal>ant tomcat.deploy</literal> - deploy the example in compressed jar format to Tomcat"
msgstr "<literal>ant tomcat.deploy</literal> - implanta o exemplo no formato jar compactado no Tomcat"

#. Tag: para
#, no-c-format
msgid "<literal>ant tomcat.undeploy</literal> - remove the example from Tomcat"
msgstr "<literal>ant tomcat.undeploy</literal> - remove o exemplo do Tomcat"

#. Tag: para
#, fuzzy, no-c-format
msgid "If you haven&#39;t already, start Tomcat. You can either start Tomcat from a Linux shell:"
msgstr "Se você já não estiver, inicie o Tomcat. Você pode também iniciar o Tomcat a partir de um shell Linux:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd /path/to/apache-tomcat-6\n"
"$&#62; ./bin/start.sh"
msgstr ""
"<![CDATA[$> cd /path/to/apache-tomcat-6\n"
"$> ./bin/start.sh]]>"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd c:\\path\\to\\apache-tomcat-6\\bin\n"
"$&#62; start"
msgstr ""
"<![CDATA[$> cd c:\\path\\to\\apache-tomcat-6\\bin\n"
"$> start]]>"

#. Tag: para
#, no-c-format
msgid "Wait a few seconds for the application to deploy (or the application server to start) and see if you can figure out the most efficient approach to pinpoint the random number at the local URL <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>!"
msgstr "Aguarde uns poucos segundos para a aplicação ser implantada (ou o servidor de aplicação iniciar) e veja se você pode calcular a abordagem mais eficiente para apontar o número aleatório na URL local <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>!"

#. Tag: title
#, no-c-format
msgid "Deploying with Maven"
msgstr "Implantando com o Maven"

#. Tag: para
#, fuzzy, no-c-format
msgid "You can also deploy the application to Tomcat using Maven. This section is a bit more advanced, so skip it unless you&#39;re itching to use Maven natively. Of course, you&#39;ll first need to make sure that you have Maven installed on your path, similar to how you setup Ant."
msgstr "Você também pode implantar a aplicação no Tomcat usando o Maven. Esta seção é um pouco mais avançada, portanto pule-a, a não ser que você esteja ansioso para usar o Maven nativamente. Claro, primeiro você precisará ter certeza que possui o Maven instalado em seu caminho, similar à forma que você configurou o Ant."

#. Tag: para
#, fuzzy, no-c-format
msgid "The Maven plugin communicates with Tomcat over HTTP, so it doesn&#39;t care where you have installed Tomcat. However, the plugin configuration assumes you are running Tomcat in its default configuration, with a hostname of localhost and port <literal>8080</literal>. The <literal>readme.txt</literal> file in the example directory has information about how to modify the Maven settings to accommodate a different setup."
msgstr "O plugin do Maven comunica com o Tomcat via HTTP, de modo que não importa onde você instalou o Tomcat. No entanto, a configuração do plugin assume que você está rodando o Tomcat com sua configuração padrão, como localhost e na porta <literal>8080</literal>. O arquivo <literal>readme.txt</literal> no diretório do exemplo possui informações sobre como modificar as configurações do Maven para acomodar uma configuração diferente."

#. Tag: para
#, no-c-format
msgid "To allow Maven to communicate with Tomcat over HTTP, edit the <literal>conf/tomcat-users.xml</literal> file in your Tomcat installation and add the following line:"
msgstr "Para permitir que o Maven comunique com o Tomcat via HTTP, edite o arquivo <literal>conf/tomcat-users.xml</literal> em sua instalação do Tomcat e adicione a seguinte linha:"

#. Tag: programlisting
#, no-c-format
msgid "&#60;user username=&#34;admin&#34; password=&#34;&#34; roles=&#34;manager&#34;/&#62;"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Restart Tomcat. You can now deploy the application to Tomcat with Maven using this command:"
msgstr "Reinicie o Tomcat. Agora você pode implantar a aplicação no Tomcat com o Maven usando este comando:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn compile war:exploded tomcat:exploded -Ptomcat"
msgstr "<![CDATA[$> mvn compile war:exploded tomcat:exploded -Ptomcat]]>"

#. Tag: para
#, no-c-format
msgid "Once the application is deployed, you can redeploy it using this command:"
msgstr "Uma vez que a aplicação está implantada, você pode reimplantá-la usando este comando:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn tomcat:redeploy -Ptomcat"
msgstr "<![CDATA[$> mvn tomcat:redeploy -Ptomcat]]>"

#. Tag: para
#, no-c-format
msgid "The <literal>-Ptomcat</literal> argument activates the <literal>tomcat</literal> profile defined in the Maven POM (<literal>pom.xml</literal>). Among other things, this profile activates the Tomcat plugin."
msgstr "O argumento <literal>-Ptomcat</literal> ativa o profile <literal>tomcat</literal> definido no Maven POM (<literal>pom.xml</literal>). Entre outras coisas, este profile ativa o plugin do Tomcat."

#. Tag: para
#, no-c-format
msgid "Rather than shipping the container off to a standalone Tomcat installation, you can also execute the application in an embedded Tomcat 6 container:"
msgstr "Ao invés de enviar o contêiner para uma instalação standalone do Tomcat, você também pode executar a aplicação em um contêiner embutido do Tomcat 6:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn war:inplace tomcat:run -Ptomcat"
msgstr "<![CDATA[$> mvn war:inplace tomcat:run -Ptomcat]]>"

#. Tag: para
#, no-c-format
msgid "The advantage of using the embedded server is that changes to assets in <literal>src/main/webapp</literal> take effect immediately. If a change to a webapp configuration file is made, the application may automatically redeploy (depending on the plugin configuration). If you make a change to a classpath resource, you need to execute a build:"
msgstr "A vantagem de utilizar o servidor embutido é que as mudanças nos ativos em <literal>src/main/webapp</literal> entrar em vigor imediatamente. Se uma mudança em um arquivo de configuração da webapp é realizada, a aplicação pode automaticamente ser reimplantada (dependendo da configuração do plugin). Se você fizer uma alteração em um recurso do classpath, você precisa executar uma recompilação:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn compile war:inplace -Ptomcat"
msgstr "<![CDATA[$> mvn compile war:inplace -Ptomcat]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "There are several other Maven goals that you can use if you are hacking on the example, which are documented in the example&#39;s <literal>readme.txt</literal> file."
msgstr "Existem muitos outros goals do Maven que você pode usar se estiver dissecando o exemplo, o qual está documentado no arquivo <literal>readme.txt</literal> do exemplo."

#. Tag: title
#, no-c-format
msgid "Deploying to Jetty"
msgstr "Implantando no Jetty"

#. Tag: para
#, no-c-format
msgid "Support for Jetty in the examples is a more recent addition. Since Jetty is traditionally used with Maven, there are no Ant targets. You must invoke the Maven build directly to deploy the examples to Jetty out of the box. Also, only the <literal>weld-numberguess</literal> example is configured for Jetty support at the time of writing."
msgstr "O suporte ao Jetty nos exemplos é uma adição mais recente. Já que o Jetty é tradicionalmente usado com o Maven, não existem alvos do Ant para ele. Você deve invocar o Maven diretamente para implantar os exemplos no Jetty sem fazer mais nada. Além disso, somente o exemplo <literal>weld-numberguess</literal> está configurado para suportar o Jetty neste momento."

#. Tag: para
#, fuzzy, no-c-format
msgid "If you&#39;ve read through the entire Tomcat section, then you&#39;re all ready to go. The Maven build parallels the embedded Tomcat deployment. If not, don&#39;t worry. We&#39;ll still go over everything that you need to know again in this section."
msgstr "Se você leu toda a seção do Tomcat até o fim, então você está pronto para seguir. A execução do Maven assemelha-se à implantação embutida do Tomcat. Se não, não fique preocupado. Nós ainda iremos abordar tudo que você precisa saber novamente nesta seção."

#. Tag: para
#, fuzzy, no-c-format
msgid "The Maven POM (<literal>pom.xml</literal>) includes a profile named <literal>jetty</literal> that activates the Maven Jetty plugin, which you can use to start Jetty in embedded mode and deploy the application in place. You don&#39;t need anything else installed except to have the Maven command (<literal>mvn</literal>) on your path. The rest will be downloaded from the internet when the build is run."
msgstr "O Maven POM (<literal>pom.xml</literal>) inclui um profile nomeado <literal>jetty</literal> que ativa o plugin Maven Jetty, que você pode usar para iniciar o Jetty no modo embutido e implantar a aplicação devidamente. Você não precisa de mais nada instalado, exceto ter o comando do Maven (<literal>mvn</literal>) em seu caminho. O restante será baixado da internet quando a construção for executada."

#. Tag: para
#, no-c-format
msgid "To run the <literal>weld-numberguess</literal> example on Jetty, switch to the example directory and execute the <literal>inplace</literal> goal of the Maven war plugin followed by the <literal>run</literal> goal of the Maven Jetty plugin with the <literal>jetty</literal> profile enabled, as follows:"
msgstr "Para rodar o exemplo <literal>weld-numberguess</literal> no Jetty, vá para o diretório do exemplo e execute o goal <literal>inplace</literal> do plugin Maven war seguido pelo goal <literal>run</literal> do plugin Maven Jetty com o profile <literal>jetty</literal> habilitado, como a seguir:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; mvn war:inplace jetty:run -Pjetty"
msgstr ""
"<![CDATA[$> cd examples/jsf/numberguess\n"
"$> mvn war:inplace jetty:run -Pjetty]]>"

#. Tag: para
#, no-c-format
msgid "The log output of Jetty will be shown in the console. Once Jetty reports that the application has deployed, you can access it at the following local URL: <ulink url=\"http://localhost:9090/weld-numberguess\">http://localhost:9090/weld-numberguess</ulink>. The port is defined in the Maven Jetty plugin configuration within the <literal>jetty</literal> profile."
msgstr "A saída do log do Jetty será mostrada no console. Uma vez que o Jetty tenha reportado a implantação da aplicação, você pode acessá-la através da seguinte URL: <ulink url=\"http://localhost:9090/weld-numberguess\">http://localhost:9090/weld-numberguess</ulink>. A porta está definida nas configurações do plugin Maven Jetty dentro do profile <literal>jetty</literal>."

#. Tag: para
#, no-c-format
msgid "Any changes to assets in <literal>src/main/webapp</literal> take effect immediately. If a change to a webapp configuration file is made, the application may automatically redeploy. The redeploy behavior can be fined-tuned in the plugin configuration. If you make a change to a classpath resource, you need to execute a build and the <literal>inplace</literal> goal of the Maven war plugin, again with the <literal>jetty</literal> profile enabled."
msgstr "Qualquer mudança nos recursos em <literal>src/main/webapp</literal> entra em vigor imediatamente. Se uma mudança em um arquivo de configuração da webapp é realizada, a aplicação pode ser reimplantada automaticamente. O comportamento de reimplantação pode ser sintonizado na configuração do plugin. Se você fizer uma mudança em um recurso do, você precisará executar um build e o goal <literal>inplace</literal> do plugin Maven war, novamente com o profile <literal>jetty</literal> habilitado."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn compile war:inplace -Pjetty"
msgstr "<![CDATA[$> mvn compile war:inplace -Pjetty]]>"

#. Tag: para
#, no-c-format
msgid "The <literal>war:inplace</literal> goal copies the compiled classes and jars inside <literal>src/main/webapp</literal>, under <literal>WEB-INF/classes</literal> and <literal>WEB-INF/lib</literal>, respectively, mixing source and compiled files. However, the build does work around these temporary files by excluding them from the packaged war and cleaning them during the Maven clean phase."
msgstr "O goal <literal>war:inplace</literal> copia as classes e jars compilados dentro de <literal>src/main/webapp</literal>, nos diretórios <literal>WEB-INF/classes</literal> e <literal>WEB-INF/lib</literal>, respectivamente, misturando arquivos fontes e compilados. No entanto, o build resolve estes arquivos temporários excluindo-os do war empacotado ou limpando-os durante a fase clean do Maven."

#. Tag: para
#, no-c-format
msgid "You have two options if you want to run the example on Jetty from the IDE. You can either install the m2eclispe[link] plugin and run the goals as described above. Your other option is to start the Jetty container from a Java application."
msgstr "Você tem duas opções se quiser rodar o exemplo no Jetty a partir da IDE. Você pode instalar o plugin <ulink url=\"http://m2eclipse.sonatype.org/\">m2eclispe</ulink> e executar os goals como descrito acima. Sua outra opção é iniciar o contêiner Jetty a partir de uma aplicação Java."

#. Tag: para
#, no-c-format
msgid "First, initialize the Eclipse project:"
msgstr "Primeiro, inicialize o projeto Eclipse:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn clean eclipse:clean eclipse:eclipse -Pjetty-ide"
msgstr "<![CDATA[$> mvn clean eclipse:clean eclipse:eclipse -Pjetty-ide]]>"

#. Tag: para
#, no-c-format
msgid "Next, assemble all the necessary resources under <literal>src/main/webapp</literal>:"
msgstr "Em seguida, monte todos os recursos necessários em <literal>src/main/webapp</literal>:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; mvn war:inplace -Pjetty-ide"
msgstr "<![CDATA[$> mvn war:inplace -Pjetty-ide]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "Now, you are ready to run the server in Eclipse. Import the project into your Eclipse workspace using &#34;Import Existing Project into Workspace. Then, find the start class in <literal>src/jetty/java</literal> and run its main method as a Java Application. Jetty will launch. You can view the application at the following local URL: <ulink url=\"http://localhost:8080\">http://localhost:8080</ulink>. Pay particular attention to the port in the URL and the lack of a trailing context path."
msgstr "Agora você está pronto para rodar o servidor no Eclipse. Importe o projeto para seu workspace do Eclipse usando \"Import Existing Project into Workspace\". Então, encontre a start class em <literal>src/jetty/java</literal> e execute seu método main como uma Java Application. O Jetty será executado. Você pode ver a aplicação através da seguinte URL: <ulink url=\"http://localhost:8080\">http://localhost:8080</ulink>. Preste atenção especial na porta presente na URL e a ausência de um caminho de contexto à direita."

#. Tag: para
#, no-c-format
msgid "Now that you have gotten the starter applications deployed on the server of your choice, you probably want to know a little bit about how they actually work."
msgstr "Agora que você possui as aplicações de partida implantadas no servidor de sua escolha, provavelmente vai querer saber um pouco sobre como eles realmente funcionam."

#~ msgid "JBoss AS 5.2.0 (currently only nightly builds of JBoss AS 5.2.0.Beta1 are available),"
#~ msgstr "JBoss AS 5.2.0 (atualmente somente construções noturnas do JBoss AS 5.2.0.Beta1 estão disponíveis),"

#~ msgid "<![CDATA[<user username=\"admin\" password=\"\" roles=\"manager\"/>]]>"
#~ msgstr "<![CDATA[<user username=\"admin\" password=\"\" roles=\"manager\"/>]]>"

#~ msgid "Getting started with Web Beans, the Reference Implementation of JSR-299"
#~ msgstr "Web Beans, a Implementação de Referência da JSR-299"

#~ msgid "The Web Beans is being developed at <ulink url=\"http://seamframework.org/WebBeans\">the Seam project</ulink>. You can download the latest developer release of Web Beans from the <ulink url=\"http://seamframework.org/Download\">the downloads page</ulink>."
#~ msgstr "A Web Beans está sendo desenvolvida no <ulink url=\"http://seamframework.org/WebBeans\">projeto Seam</ulink>. Você pode baixar a última versão da Web Beans na <ulink url=\"http://seamframework.org/Download\">página de downloads</ulink>."

#~ msgid "Web Beans comes with a two deployable example applications: <literal>webbeans-numberguess</literal>, a war example, containing only simple beans, and <literal>webbeans-translator</literal> an ear example, containing enterprise beans. There are also two variations on the numberguess example, the tomcat example (suitable for deployment to Tomcat) and the jsf2 example, which you can use if you are running JSF2. To run the examples you'll need the following:"
#~ msgstr "A Web Beans vem com duas aplicações de exemplo: <literal>webbeans-numberguess</literal> - um war, contendo apenas beans simples (simple beans)  e <literal>webbeans-translator</literal>, e um ear, contendo beans corporativos (enterprise beans) -. Existem ,ainda, duas variações do exemplo numberguess: o exemplo tomcat (adequado para a implantação no Tomcat) e o exemplo jsf2, que você pode usar se estiver utilizando JSF2. Para executar os exemplos, você precisará do seguinte:"

#~ msgid "Ant 1.7.0."
#~ msgstr "Ant 1.7.0."

#~ msgid "You'll need to download JBoss AS 5.0.1.GA from <ulink url=\"http://www.jboss.org/jbossas/downloads/\">jboss.org</ulink>, and unzip it. For example:"
#~ msgstr "Você precisará fazer o download do JBoss AS 5.0.1.GA em <ulink url=\"http://www.jboss.org/jbossas/downloads/\">jboss.org</ulink> e descompactá-lo. Por exemplo:\""

#~ msgid ""
#~ "<![CDATA[$ cd /Applications\n"
#~ "$ unzip ~/jboss-5.0.1.GA.zip]]>"
#~ msgstr ""
#~ "<![CDATA[$ cd /Applications\n"
#~ "$ unzip ~/jboss-5.0.1.GA.zip]]>"

#~ msgid "Next, download Web Beans from <ulink url=\"http://seamframework.org/Download\">seamframework.org</ulink>, and unzip it. For example"
#~ msgstr "Depois, faça o download da Web Beans em <ulink url=\"http://seamframework.org/Download\">seamframework.org</ulink> e descompacte-o. Por exemplo"

#~ msgid ""
#~ "<![CDATA[$ cd ~/\n"
#~ "$ unzip ~/webbeans-$VERSION.zip]]>"
#~ msgstr ""
#~ "<![CDATA[$ cd ~/\n"
#~ "$ unzip ~/webbeans-1.0.0.ALPHA1.zip]]>"

#~ msgid "Next, we need to tell Web Beans where JBoss is located. Edit <literal>jboss-as/build.properties</literal> and set the <literal>jboss.home</literal> property. For example:"
#~ msgstr "Em seguida, temos de dizer aos Web Beans onde o JBoss está localizado. Editar o <literal>jboss-as/build.properties</literal> e definir a propriedade <literal>jboss.home</literal>. Por exemplo:"

#~ msgid "To install Web Beans, you'll need Ant 1.7.0 installed, and the <literal>ANT_HOME</literal> environment variable set. For example:"
#~ msgstr "Para instalar a Web Beans, você precisará do Ant 1.7.0 instalado e a variável de ambiente <literal>ANT_HOME</literal> setada. Por exemplo:"

#~ msgid ""
#~ "$ unzip apache-ant-1.7.0.zip\n"
#~ "$ export ANT_HOME=~/apache-ant-1.7.0"
#~ msgstr ""
#~ "$ unzip apache-ant-1.7.0.zip\n"
#~ "$ export ANT_HOME=~/apache-ant-1.7.0"

#~ msgid "Then, you can install the update. The update script will use Maven to download Web Beans automatically."
#~ msgstr "Então, você pode instalar a atualização. O script de atualização  utilizará o Maven para fazer o download da Web Beans automaticamente."

#~ msgid ""
#~ "$ cd webbeans-$VERSION/jboss-as\n"
#~ "$ ant update"
#~ msgstr ""
#~ "$ cd webbeans-1.0.0.ALPHA1/jboss-as\n"
#~ "$ ant update"

#~ msgid "The build scripts for the examples offer a number of targets for JBoss AS, these are:"
#~ msgstr "Os scripts para criar os exemplos oferecem uma série de alvos para JBoss AS, entre eles:"

#~ msgid "To deploy the numberguess example:"
#~ msgstr "Para implantar o exemplo numberguess:"

#~ msgid "Start JBoss AS:"
#~ msgstr "Inicializando o JBoss AS:"

#~ msgid "$ /Application/jboss-5.0.0.GA/bin/run.sh"
#~ msgstr "$ /Application/jboss-5.0.0.GA/bin/run.sh"

#~ msgid "If you use Windows, use the <literal>run.bat</literal>script."
#~ msgstr "Se você utiliza o Windows, utilize o script <literal>run.bat</literal>."

#~ msgid "Wait for the application to deploy, and enjoy hours of fun at <ulink url=\"http://localhost:8080/webbeans-numberguess\"></ulink>!"
#~ msgstr "Aguarde até que a aplicação seja implantada, e desfrute de horas de diversão em <ulink url=\"http://localhost:8080/webbeans-numberguess\"></ulink>!"

#~ msgid "Web Beans includes a second simple example that will translate your text into Latin. The numberguess example is a war example, and uses only simple beans; the translator example is an ear example, and includes enterprise beans, packaged in an EJB module. To try it out:"
#~ msgstr "Web Beans inclui um segundo exemplo simples que irá traduzir o seu texto para o Latim. O exemplo numberguess é um war e usa apenas beans simples; o exemplo translator é um exemplo ear e inclui benas corporativos, empacotados em um módulo EJB. Para experimentá-lo:"

#~ msgid "Wait for the application to deploy, and visit <ulink url=\"http://localhost:8080/webbeans-translator\"></ulink>!"
#~ msgstr "Aguarde até que a aplicação seja implantada, e acesse  <ulink url=\"http://localhost:8080/webbeans-translator\"></ulink>!"

#~ msgid "Next, we need to tell Web Beans where Tomcat is located. Edit <literal>jboss-as/build.properties</literal> and set the <literal>tomcat.home</literal> property. For example:"
#~ msgstr "Em seguida, temos de dizer aos Web Beans onde o Tomcat está localizado. Editar o <literal>jboss-as/build.properties</literal> e definir a propriedade <literal>tomcat.home</literal>. Por exemplo:"

#~ msgid "The build scripts for the examples offer a number of targets for Tomcat, these are:"
#~ msgstr "Os scripts para criar os exemplos oferecem uma série de alvos para Tomcat. São eles:"

#~ msgid "<literal>ant tomcat.undeploy</literal> - remove the example (in compressed jar format) from the server"
#~ msgstr "<literal>ant tomcat.deploy</literal> - publica o exemplo no formato jar compactado"

#~ msgid "<literal>ant tomcat.unexplode</literal> - remove the example (in exploded format) from the server"
#~ msgstr "<literal>ant tomcat.undeploy</literal> - remove o exemplo do servidor"

#~ msgid "<literal>ant tomcat.clean</literal> - clean the example"
#~ msgstr "<literal>ant tomcat.clean</literal> - clean the example"

#~ msgid ""
#~ "$ cd examples/tomcat\n"
#~ "ant tomcat.deploy"
#~ msgstr ""
#~ "$ cd examples/tomcat\n"
#~ "ant tomcat.deploy"

#~ msgid "Start Tomcat:"
#~ msgstr "Inicializando o Tomcat:"

#~ msgid "If you use Windows, use the <literal>startup.bat</literal>script."
#~ msgstr "Se você utiliza o Windows, utilize o script <literal>startup.bat</literal>."

#~ msgid "TODO"
#~ msgstr "TODO"

#~ msgid "The numberguess example"
#~ msgstr "O exemplo numberguess"

#~ msgid "In the numberguess application you get given 10 attempts to guess a number between 1 and 100. After each attempt, you will be told whether you are too high, or too low."
#~ msgstr "Na aplicação numberguess você terá 10 tentativas para adivinhar um número entre 1 e 100. Após cada tentativa, você será informado se você disse muito acima, ou muito abaixo."

#~ msgid "The numberguess example is comprised of a number of Web Beans, configuration files, and Facelet JSF pages, packaged as a war. Let's start with the configuration files."
#~ msgstr "O exemplo numberguess é composto de um número de Web Beans, arquivos de configuração e páginas Facelet JSF , empacotados como um war. Vamos começar com os arquivos de configuração."

#~ msgid "All the configuration files for this example are located in <literal>WEB-INF/</literal>, which is stored in <literal>WebContent</literal> in the source tree. First, we have <literal>faces-config.xml</literal>, in which we tell JSF to use Facelets:"
#~ msgstr "Todos os arquivos de configuração para este exemplo estão localizados no <literal>WEB-INF/</literal>, que é armazenado no <literal>WebContent</literal> na árvore de fontes. Primeiro, temos  <literal>faces-config.xml</literal>, onde dizemos para o JSF usar o Facelets:"

#~ msgid ""
#~ "<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
#~ "<faces-config version=\"1.2\"\n"
#~ "              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
#~ "    \n"
#~ "    <application>\n"
#~ "        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
#~ "    </application>\n"
#~ "\n"
#~ "</faces-config>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
#~ "<faces-config version=\"1.2\"\n"
#~ "              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
#~ "    \n"
#~ "    <application>\n"
#~ "        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
#~ "    </application>\n"
#~ "\n"
#~ "</faces-config>]]>"

#~ msgid "There is an empty <literal>web-beans.xml</literal> file, which marks this application as a Web Beans application."
#~ msgstr "Existe um arquivo <literal>web-beans.xml</literal> vazio, que assinala essa aplicação como uma aplicação Web Beans."

#~ msgid "Finally there is <literal>web.xml</literal>:"
#~ msgstr "Finalmente no <literal>web.xml</literal>:"

#~ msgid ""
#~ "<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> <area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default.suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "\n"
#~ "<web-app version=\"2.5\"\n"
#~ "    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n"
#~ "   \n"
#~ "   <display-name>Web Beans Numbergues example</display-name>\n"
#~ "\n"
#~ "   <!-- JSF -->\n"
#~ "\n"
#~ "   <servlet>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
#~ "      <load-on-startup>1</load-on-startup>\n"
#~ "   </servlet>\n"
#~ "\n"
#~ "   <servlet-mapping>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <url-pattern>*.jsf</url-pattern>\n"
#~ "   </servlet-mapping>\n"
#~ "   \n"
#~ "   <context-param>\n"
#~ "      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
#~ "      <param-value>.xhtml</param-value>\n"
#~ "   </context-param>\n"
#~ "\n"
#~ "   <session-config>\n"
#~ "      <session-timeout>10</session-timeout>\n"
#~ "   </session-config>\n"
#~ "\n"
#~ "</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces.servlet\"> <para> Enable and load the JSF servlet </para> </callout> <callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to <literal>.jsf</literal> pages to be handled by JSF </para> </callout> <callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be giving our source files (facelets) an extension of <literal>.xhtml</literal> </para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a session timeout of 10 minutes </para> </callout> </calloutlist> </programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use Web Beans with any Servlet based web framework. </para> </note> <para> Let's take a look at the Facelet view: </para> <programlistingco> <areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages2\" coords=\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords=\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords=\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"
#~ "<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
#~ "    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
#~ "    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
#~ "    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
#~ "    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
#~ "\n"
#~ "  <ui:composition template=\"template.xhtml\">\n"
#~ "    <ui:define name=\"content\">\n"
#~ "       <h1>Guess a number...</h1>\n"
#~ "       <h:form id=\"NumberGuessMain\">\n"
#~ "          <div style=\"color: red\">\n"
#~ "             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
#~ "             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game.number gt game.guess and game.guess ne 0}\"/>\n"
#~ "             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game.number lt game.guess and game.guess ne 0}\"/>\n"
#~ "          </div>\n"
#~ "   \n"
#~ "          <div>\n"
#~ "             I'm thinking of a number between #{game.smallest} and #{game.biggest}.\n"
#~ "             You have #{game.remainingGuesses} guesses.\n"
#~ "          </div>\n"
#~ "     \n"
#~ "          <div>\n"
#~ "             Your guess: \n"
#~ "             <h:inputText id=\"inputGuess\" \n"
#~ "                          value=\"#{game.guess}\" \n"
#~ "                          required=\"true\" \n"
#~ "                          size=\"3\" \n"
#~ "                          disabled=\"#{game.number eq game.guess}\">\n"
#~ "                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
#~ "                                     minimum=\"#{game.smallest}\"/>\n"
#~ "             </h:inputText>\n"
#~ "            <h:commandButton id=\"GuessButton\"  \n"
#~ "                             value=\"Guess\" \n"
#~ "                             action=\"#{game.check}\" \n"
#~ "                             disabled=\"#{game.number eq game.guess}\"/>\n"
#~ "          </div>\n"
#~ "          <div>\n"
#~ "            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#{game.reset}\" immediate=\"true\" />\n"
#~ "          </div>\n"
#~ "       </h:form>\n"
#~ "    </ui:define>\n"
#~ "  </ui:composition>\n"
#~ "</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> <para> Facelets is a templating language for JSF, here we are wrapping our page in a template which defines the header. </para> </callout> <callout arearefs=\"messages2\"> <para> There are a number of messages which can be sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the range of numbers they can guess gets smaller - this sentance changes to make sure they know what range to guess in. </para> </callout> <callout arearefs=\"guess\"> <para> This input field is bound to a Web Bean, using the value expression. </para> </callout> <callout arearefs=\"validator\"> <para> A range validator is used to make sure the user doesn't accidentally input a number outside of the range in which they can guess - if the validator wasn't here, the user might use up a guess on an out of range number. </para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there must be a way for the user to send their guess to the server. Here we bind to an action method on the Web Bean. </para> </callout> </calloutlist> </programlistingco>"
#~ msgstr ""
#~ "<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> <area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default.suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "\n"
#~ "<web-app version=\"2.5\"\n"
#~ "    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n"
#~ "   \n"
#~ "   <display-name>Web Beans Numbergues example</display-name>\n"
#~ "\n"
#~ "   <!-- JSF -->\n"
#~ "\n"
#~ "   <servlet>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
#~ "      <load-on-startup>1</load-on-startup>\n"
#~ "   </servlet>\n"
#~ "\n"
#~ "   <servlet-mapping>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <url-pattern>*.jsf</url-pattern>\n"
#~ "   </servlet-mapping>\n"
#~ "   \n"
#~ "   <context-param>\n"
#~ "      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
#~ "      <param-value>.xhtml</param-value>\n"
#~ "   </context-param>\n"
#~ "\n"
#~ "   <session-config>\n"
#~ "      <session-timeout>10</session-timeout>\n"
#~ "   </session-config>\n"
#~ "\n"
#~ "</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces.servlet\"> <para> Enable and load the JSF servlet </para> </callout> <callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to <literal>.jsf</literal> pages to be handled by JSF </para> </callout> <callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be giving our source files (facelets) an extension of <literal>.jsf</literal> </para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a session timeout of 10 minutes </para> </callout> </calloutlist> </programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use Web Beans with any Servlet based web framework. </para> </note> <para> Let's take a look at the Facelet view: </para> <programlistingco> <areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages\" coords=\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords=\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords=\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"
#~ "<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
#~ "    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
#~ "    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
#~ "    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
#~ "    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
#~ "\n"
#~ "  <ui:composition template=\"template.xhtml\">\n"
#~ "    <ui:define name=\"content\">\n"
#~ "       <h1>Guess a number...</h1>\n"
#~ "       <h:form id=\"NumberGuessMain\">\n"
#~ "          <div style=\"color: red\">\n"
#~ "             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
#~ "             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game.number gt game.guess and game.guess ne 0}\"/>\n"
#~ "             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game.number lt game.guess and game.guess ne 0}\"/>\n"
#~ "          </div>\n"
#~ "   \n"
#~ "          <div>\n"
#~ "             I'm thinking of a number between #{game.smallest} and #{game.biggest}.\n"
#~ "             You have #{game.remainingGuesses} guesses.\n"
#~ "          </div>\n"
#~ "     \n"
#~ "          <div>\n"
#~ "             Your guess: \n"
#~ "             <h:inputText id=\"inputGuess\" \n"
#~ "                          value=\"#{game.guess}\" \n"
#~ "                          required=\"true\" \n"
#~ "                          size=\"3\" \n"
#~ "                          disabled=\"#{game.number eq game.guess}\">\n"
#~ "                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
#~ "                                     minimum=\"#{game.smallest}\"/>\n"
#~ "             </h:inputText>\n"
#~ "            <h:commandButton id=\"GuessButton\"  \n"
#~ "                             value=\"Guess\" \n"
#~ "                             action=\"#{game.check}\" \n"
#~ "                             disabled=\"#{game.number eq game.guess}\"/>\n"
#~ "          </div>\n"
#~ "          <div>\n"
#~ "            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#{game.reset}\" immediate=\"true\" />\n"
#~ "          </div>\n"
#~ "       </h:form>\n"
#~ "    </ui:define>\n"
#~ "  </ui:composition>\n"
#~ "</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> <para> Facelets is a templating language for JSF, here we are wrapping our page in a template which defines the header. </para> </callout> <callout arearefs=\"messages\"> <para> There are a number of messages which can be sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the range of numbers they can guess gets smaller - this sentance changes to make sure they know what range to guess in. </para> </callout> <callout arearefs=\"guess\"> <para> This input field is bound to a Web Bean, using the value expression. </para> </callout> <callout arearefs=\"validator\"> <para> A range validator is used to make sure the user doesn't accidentally input a number outside of the range in which they can guess - if the validator wasn't here, the user might use up a guess on an out of range number. </para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there must be a way for the user to send their guess to the server. Here we bind to an action method on the Web Bean. </para> </callout> </calloutlist> </programlistingco>"

#~ msgid "The example exists of 4 classes, the first two of which are binding types. First, there is the <literal>@Random</literal> binding type, used for injecting a random number:"
#~ msgstr "No exemplo, existem 4 classes: as duas primeiras são tipos de binding. Primeiro, há o tipo de binding <literal>@Random</literal>, utilizado para a injeção de um número aleatório:"

#~ msgid ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface Random {}]]>"
#~ msgstr ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface Random {}]]>"

#~ msgid "There is also the <literal>@MaxNumber</literal> binding type, used for injecting the maximum number that can be injected:"
#~ msgstr "Há também o binding type <literal>@MaxNumber</literal>, utilizado para injetar o número máximo que pode ser injetado:"

#~ msgid ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface MaxNumber {}\n"
#~ "]]>"
#~ msgstr ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface MaxNumber {}\n"
#~ "]]>"

#~ msgid "The <literal>Generator</literal> class is responsible for creating the random number, via a producer method. It also exposes the maximum possible number via a producer method:"
#~ msgstr "A classe <literal>Generator</literal> é responsável por criar um número aleatório, através de um método produtor. Ela também expõe o número máximo possível através de um método produtor:"

#~ msgid ""
#~ "<![CDATA[@ApplicationScoped\n"
#~ "public class Generator {\n"
#~ "   \n"
#~ "   private java.util.Random random = new java.util.Random( System.currentTimeMillis() );\n"
#~ "   \n"
#~ "   private int maxNumber = 100;\n"
#~ "   \n"
#~ "   java.util.Random getRandom()\n"
#~ "   {\n"
#~ "      return random;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @Random int next() { \n"
#~ "      return getRandom().nextInt(maxNumber); \n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @MaxNumber int getMaxNumber()\n"
#~ "   {\n"
#~ "      return maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[@ApplicationScoped\n"
#~ "public class Generator {\n"
#~ "   \n"
#~ "   private java.util.Random random = new java.util.Random( System.currentTimeMillis() );\n"
#~ "   \n"
#~ "   private int maxNumber = 100;\n"
#~ "   \n"
#~ "   java.util.Random getRandom()\n"
#~ "   {\n"
#~ "      return random;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @Random int next() { \n"
#~ "      return getRandom().nextInt(maxNumber); \n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @MaxNumber int getMaxNumber()\n"
#~ "   {\n"
#~ "      return maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "}]]>"

#~ msgid "You'll notice that the <literal>Generator</literal> is application scoped; therefore we don't get a different random each time."
#~ msgstr "Você perceberá que o <literal>Generator</literal> está no escopo de aplicação; portanto, não obtemos um número aleatório diferente a cada vez."

#~ msgid "The final Web Bean in the application is the session scoped <literal>Game</literal>."
#~ msgstr "O Web Bean final da aplicação é o <literal>Game</literal> em escopo de sessão."

#~ msgid "You'll note that we've used the <literal>@Named</literal> annotation, so that we can use the bean through EL in the JSF page. Finally, we've used constructor injection to initialize the game with a random number. And of course, we need to tell the player when they've won, so we give feedback with a <literal>FacesMessage</literal>."
#~ msgstr "Você  notará que nós utilizamos a  anotação  <literal>@Named</literal>, para que possamos utilizar o bean através EL na página JSF. Finalmente, utilizamos injeção de construtor para inicializar o jogo com um número aleatório. E, claro, precisamos de dizer ao jogador quando ele venceu. Por isso, informaremos através do <literal>FacesMessage</literal>."

#~ msgid ""
#~ "<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
#~ "\n"
#~ "\n"
#~ "import javax.annotation.PostConstruct;\n"
#~ "import javax.faces.application.FacesMessage;\n"
#~ "import javax.faces.context.FacesContext;\n"
#~ "import javax.webbeans.AnnotationLiteral;\n"
#~ "import javax.webbeans.Current;\n"
#~ "import javax.webbeans.Initializer;\n"
#~ "import javax.webbeans.Named;\n"
#~ "import javax.webbeans.SessionScoped;\n"
#~ "import javax.webbeans.manager.Manager;\n"
#~ "\n"
#~ "@Named\n"
#~ "@SessionScoped\n"
#~ "public class Game\n"
#~ "{\n"
#~ "   private int number;\n"
#~ "   \n"
#~ "   private int guess;\n"
#~ "   private int smallest;\n"
#~ "   private int biggest;\n"
#~ "   private int remainingGuesses;\n"
#~ "   \n"
#~ "   @Current Manager manager;\n"
#~ "   \n"
#~ "   public Game()\n"
#~ "   {\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   Game(@MaxNumber int maxNumber)\n"
#~ "   {      \n"
#~ "      this.biggest = maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "   public int getNumber()\n"
#~ "   {\n"
#~ "      return number;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getGuess()\n"
#~ "   {\n"
#~ "      return guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public void setGuess(int guess)\n"
#~ "   {\n"
#~ "      this.guess = guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getSmallest()\n"
#~ "   {\n"
#~ "      return smallest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getBiggest()\n"
#~ "   {\n"
#~ "      return biggest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getRemainingGuesses()\n"
#~ "   {\n"
#~ "      return remainingGuesses;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public String check()\n"
#~ "   {\n"
#~ "      if (guess>number)\n"
#~ "      {\n"
#~ "         biggest = guess - 1;\n"
#~ "      }\n"
#~ "      if (guess<number)\n"
#~ "      {\n"
#~ "         smallest = guess + 1;\n"
#~ "      }\n"
#~ "      if (guess == number)\n"
#~ "      {\n"
#~ "         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Correct!\"));\n"
#~ "      }\n"
#~ "      remainingGuesses--;\n"
#~ "      return null;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @PostConstruct\n"
#~ "   public void reset()\n"
#~ "   {\n"
#~ "      this.smallest = 0;\n"
#~ "      this.guess = 0;\n"
#~ "      this.remainingGuesses = 10;\n"
#~ "      this.number = manager.getInstanceByType(Integer.class, new AnnotationLiteral<Random>(){});\n"
#~ "   }\n"
#~ "   \n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
#~ "\n"
#~ "\n"
#~ "import javax.annotation.PostConstruct;\n"
#~ "import javax.faces.application.FacesMessage;\n"
#~ "import javax.faces.context.FacesContext;\n"
#~ "import javax.webbeans.AnnotationLiteral;\n"
#~ "import javax.webbeans.Current;\n"
#~ "import javax.webbeans.Initializer;\n"
#~ "import javax.webbeans.Named;\n"
#~ "import javax.webbeans.SessionScoped;\n"
#~ "import javax.webbeans.manager.Manager;\n"
#~ "\n"
#~ "@Named\n"
#~ "@SessionScoped\n"
#~ "public class Game\n"
#~ "{\n"
#~ "   private int number;\n"
#~ "   \n"
#~ "   private int guess;\n"
#~ "   private int smallest;\n"
#~ "   private int biggest;\n"
#~ "   private int remainingGuesses;\n"
#~ "   \n"
#~ "   @Current Manager manager;\n"
#~ "   \n"
#~ "   public Game()\n"
#~ "   {\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   Game(@MaxNumber int maxNumber)\n"
#~ "   {      \n"
#~ "      this.biggest = maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "   public int getNumber()\n"
#~ "   {\n"
#~ "      return number;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getGuess()\n"
#~ "   {\n"
#~ "      return guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public void setGuess(int guess)\n"
#~ "   {\n"
#~ "      this.guess = guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getSmallest()\n"
#~ "   {\n"
#~ "      return smallest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getBiggest()\n"
#~ "   {\n"
#~ "      return biggest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getRemainingGuesses()\n"
#~ "   {\n"
#~ "      return remainingGuesses;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public String check()\n"
#~ "   {\n"
#~ "      if (guess>number)\n"
#~ "      {\n"
#~ "         biggest = guess - 1;\n"
#~ "      }\n"
#~ "      if (guess<number)\n"
#~ "      {\n"
#~ "         smallest = guess + 1;\n"
#~ "      }\n"
#~ "      if (guess == number)\n"
#~ "      {\n"
#~ "         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Correct!\"));\n"
#~ "      }\n"
#~ "      remainingGuesses--;\n"
#~ "      return null;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @PostConstruct\n"
#~ "   public void reset()\n"
#~ "   {\n"
#~ "      this.smallest = 0;\n"
#~ "      this.guess = 0;\n"
#~ "      this.remainingGuesses = 10;\n"
#~ "      this.number = manager.getInstanceByType(Integer.class, new AnnotationLiteral<Random>(){});\n"
#~ "   }\n"
#~ "   \n"
#~ "}]]>"

#~ msgid "The numberguess example in Tomcat"
#~ msgstr "O exemplo numberguess para o Tomcat"

#~ msgid "The numberguess for Tomcat differs in a couple of ways. Firstly, Web Beans should be deployed as a Web Application library in <literal>WEB-INF/lib</literal>. For your convenience we provide a single jar suitable for running Web Beans in any servlet container <literal>webbeans-servlet.jar</literal>."
#~ msgstr "O numberguess para Tomcat difere em várias maneiras. Em primeiro lugar, Web Beans devem ser implementados como uma biblioteca de aplicação Web em <literal>WEB-INF/lib</literal>. Para sua comodidade, fornecemos um único jar adequado para executar Web Beans no Tomcat <literal>webbeans-tomcat.jar</literal>."

#~ msgid "Of course, you must also include JSF and EL, as well common annotations (<literal>jsr250-api.jar</literal>) which a JEE server includes by default."
#~ msgstr "Claro, você também deve incluir JSF e EL, bem como anotações comuns (common annotations)  (<literal>jsr250-api.jar</literal>), que um servidor JEE inclui por padrão."

#~ msgid "Secondly, we need to explicitly specify the servlet listener (used to boot Web Beans, and control it's interaction with requests) in <literal>web.xml</literal>:"
#~ msgstr "Em segundo lugar, precisamos indicar explicitamente o Tomcat servlet listener (utilizado para \"bootar\" a Web Beans, e controlar sua interação com as requisições) no  <literal>web.xml</literal>:"

#~ msgid ""
#~ "<![CDATA[<listener>\n"
#~ "   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-class>\n"
#~ "</listener>]]>"
#~ msgstr ""
#~ "<![CDATA[<listener>\n"
#~ "   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-class>\n"
#~ "</listener>]]>"

#~ msgid "The numberguess example for Apache Wicket"
#~ msgstr "O exemplo numberguess para o Apache Wicket"

#~ msgid "Understanding the code"
#~ msgstr "Entendendo o código"

#~ msgid "Differences are:"
#~ msgstr "Diferenças são:"

#~ msgid ""
#~ "<![CDATA[public class SampleApplication extends WebBeansApplication {\n"
#~ "   @Override\n"
#~ "   public Class getHomePage() {\n"
#~ "      return HomePage.class;\n"
#~ "   }\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[public class SampleApplication extends WebBeansApplication {\n"
#~ "   @Override\n"
#~ "   public Class getHomePage() {\n"
#~ "      return HomePage.class;\n"
#~ "   }\n"
#~ "}]]>"

#~ msgid "<![CDATA[ @Current Game game;]]>"
#~ msgstr "<![CDATA[ @Current Game game;]]>"

#~ msgid ""
#~ "<![CDATA[final Component guessButton = new AjaxButton(\"GuessButton\") { \n"
#~ "   protected void onSubmit(AjaxRequestTarget target, Form form) {\n"
#~ "      if (game.check()) {]]>"
#~ msgstr ""
#~ "<![CDATA[final Component guessButton = new AjaxButton(\"GuessButton\") { \n"
#~ "   protected void onSubmit(AjaxRequestTarget target, Form form) {\n"
#~ "      if (game.check()) {]]>"

#~ msgid ""
#~ "<![CDATA[<filter>\n"
#~ "   <filter-name>wicket.numberguess-example</filter-name>\n"
#~ "   <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>\n"
#~ "   <init-param>\n"
#~ "      <param-name>applicationClassName</param-name>\n"
#~ "      <param-value>org.jboss.webbeans.examples.wicket.SampleApplication</param-value>\n"
#~ "   </init-param>\n"
#~ "</filter>\n"
#~ "\n"
#~ "<filter-mapping>\n"
#~ "   <filter-name>wicket.numberguess-example</filter-name>\n"
#~ "   <url-pattern>/*</url-pattern>\n"
#~ "</filter-mapping>\n"
#~ " \n"
#~ "<listener>\n"
#~ "   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-class>\n"
#~ "</listener>]]>"
#~ msgstr ""
#~ "<![CDATA[<filter>\n"
#~ "   <filter-name>wicket.numberguess-example</filter-name>\n"
#~ "   <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>\n"
#~ "   <init-param>\n"
#~ "      <param-name>applicationClassName</param-name>\n"
#~ "      <param-value>org.jboss.webbeans.examples.wicket.SampleApplication</param-value>\n"
#~ "   </init-param>\n"
#~ "</filter>\n"
#~ "\n"
#~ "<filter-mapping>\n"
#~ "   <filter-name>wicket.numberguess-example</filter-name>\n"
#~ "   <url-pattern>/*</url-pattern>\n"
#~ "</filter-mapping>\n"
#~ " \n"
#~ "<listener>\n"
#~ "   <listener-class>org.jboss.webbeans.environment.servlet.Listener</listener-class>\n"
#~ "</listener>]]>"

#~ msgid "The numberguess example for Java SE with Swing"
#~ msgstr "O exemplo numberguess para o Java SE com Swing"

#~ msgid "To run this example:"
#~ msgstr "Para rodar esse exemplo:"

#~ msgid "execute the following command"
#~ msgstr "execute o seguinte comando"

#~ msgid "mvn -Drun"
#~ msgstr "mvn -Drun"

#~ msgid "There is an empty <literal>beans.xml</literal> file in the root package (<literal>src/main/resources/beans.xml</literal>), which marks this application as a Web Beans application."
#~ msgstr "Existe um arquivo <literal>web-beans.xml</literal> vazio, que assinala essa aplicação como uma aplicação Web Beans."

#~ msgid ""
#~ "<programlistingco> <areaspec> <area id=\"scope\" coords=\"1\"/> <area id=\"name\" coords=\"1\"/> <area id=\"messages1\" coords=\"26\"/> <area id=\"validation\" coords=\"39\"/> <area id=\"reset\" coords=\"68\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[@ApplicationScoped\n"
#~ "public class Game implements Serializable\n"
#~ "{\n"
#~ "\n"
#~ "    private int number;\n"
#~ "    private int guess;\n"
#~ "    private int smallest;\n"
#~ "\n"
#~ "    @MaxNumber\n"
#~ "    private int maxNumber;\n"
#~ "\n"
#~ "    private int biggest;\n"
#~ "    private int remainingGuesses;\n"
#~ "    private boolean validNumberRange = true;\n"
#~ "\n"
#~ "    @Current Generator rndGenerator;\n"
#~ "\n"
#~ "    ...\n"
#~ "\n"
#~ "    public boolean isValidNumberRange()\n"
#~ "    {\n"
#~ "        return validNumberRange;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean isGameWon()\n"
#~ "    {\n"
#~ "        return guess == number;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean isGameLost()\n"
#~ "    {\n"
#~ "        return guess != number && remainingGuesses <= 0;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean check()\n"
#~ "    {\n"
#~ "        boolean result = false;\n"
#~ "\n"
#~ "        if ( checkNewNumberRangeIsValid() )\n"
#~ "        {\n"
#~ "            if ( guess > number )\n"
#~ "            {\n"
#~ "                biggest = guess - 1;\n"
#~ "            }\n"
#~ "\n"
#~ "            if ( guess < number )\n"
#~ "            {\n"
#~ "                smallest = guess + 1;\n"
#~ "            }\n"
#~ "\n"
#~ "            if ( guess == number )\n"
#~ "            {\n"
#~ "                result = true;\n"
#~ "            }\n"
#~ "\n"
#~ "            remainingGuesses--;\n"
#~ "        }\n"
#~ "\n"
#~ "        return result;\n"
#~ "    }\n"
#~ "\n"
#~ "    private boolean checkNewNumberRangeIsValid()\n"
#~ "    {\n"
#~ "        return validNumberRange = ( ( guess >= smallest ) && ( guess <= biggest ) );\n"
#~ "    }\n"
#~ "\n"
#~ "    @PostConstruct\n"
#~ "    public void reset()\n"
#~ "    {\n"
#~ "        this.smallest = 0;\n"
#~ "        ...\n"
#~ "        this.number = rndGenerator.next();\n"
#~ "    }\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"scope\"> <para> The bean is application scoped instead of session scoped, since an instance of the application represents a single 'session'. </para> </callout> <callout arearefs=\"name\"> <para> The bean is not named, since it doesn't need to be accessed via EL </para> </callout> <callout arearefs=\"messages1\"> <para> There is no JSF <literal>FacesContext</literal> to add messages to. Instead the <literal>Game</literal> class provides additional information about the state of the current game including: </para> <itemizedlist> <listitem> <para> If the game has been won or lost </para> </listitem> <listitem> <para> If the most recent guess was invalid </para> </listitem> </itemizedlist> <para> This allows the Swing UI to query the state of the game, which it does indirectly via a class called <literal>MessageGenerator,</literal> in order to determine the appropriate messages to display to the user during the game. </para> </callout> <callout arearefs=\"validation\"> <para> Validation of user input is performed during the <literal>check()</literal> method, since there is no dedicated validation phase </para> </callout> <callout arearefs=\"reset\"> <para> The <literal>reset()</literal> method makes a call to the injected <literal>rndGenerator</literal> in order to get the random number at the start of each game. It cannot use <literal>manager.getInstanceByType(Integer.class, new AnnotationLiteral&lt;Random&gt;(){})</literal> as the JSF example does because there will not be any active contexts like there is during a JSF request. </para> </callout> </calloutlist> </programlistingco> <para> The <literal>MessageGenerator</literal> class depends on the current instance of <literal>Game</literal>, and queries its state in order to determine the appropriate messages to provide as the prompt for the user's next guess and the response to the previous guess. The code for <literal>MessageGenerator</literal> is as follows: </para> <programlistingco> <areaspec> <area id=\"game\" coords=\"3\"/> <area id=\"challenge\" coords=\"5\"/> <area id=\"result\" coords=\"16\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public class MessageGenerator\n"
#~ "{\n"
#~ "    @Current Game game;\n"
#~ "\n"
#~ "    public String getChallengeMessage()\n"
#~ "    {\n"
#~ "        StringBuilder challengeMsg = new StringBuilder( \"I'm thinking of a number between \" );\n"
#~ "        challengeMsg.append( game.getSmallest() );\n"
#~ "        challengeMsg.append( \" and \" );\n"
#~ "        challengeMsg.append( game.getBiggest() );\n"
#~ "        challengeMsg.append( \". Can you guess what it is?\" );\n"
#~ "\n"
#~ "        return challengeMsg.toString();\n"
#~ "    }\n"
#~ "\n"
#~ "    public String getResultMessage()\n"
#~ "    {\n"
#~ "        if ( game.isGameWon() )\n"
#~ "        {\n"
#~ "            return \"You guess it! The number was \" + game.getNumber();\n"
#~ "        } else if ( game.isGameLost() )\n"
#~ "        {\n"
#~ "            return \"You are fail! The number was \" + game.getNumber();\n"
#~ "        } else if ( ! game.isValidNumberRange() )\n"
#~ "        {\n"
#~ "            return \"Invalid number range!\";\n"
#~ "        } else if ( game.getRemainingGuesses() == Game.MAX_NUM_GUESSES )\n"
#~ "        {\n"
#~ "            return \"What is your first guess?\";\n"
#~ "        } else\n"
#~ "        {\n"
#~ "            String direction = null;\n"
#~ "\n"
#~ "            if ( game.getGuess() < game.getNumber() )\n"
#~ "            {\n"
#~ "                direction = \"Higher\";\n"
#~ "            } else\n"
#~ "            {\n"
#~ "                direction = \"Lower\";\n"
#~ "            }\n"
#~ "\n"
#~ "            return direction + \"! You have \" + game.getRemainingGuesses() + \" guesses left.\";\n"
#~ "        }\n"
#~ "    }\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"game\"> <para> The instance of <literal>Game</literal> for the application is injected here. </para> </callout> <callout arearefs=\"challenge\"> <para> The <literal>Game</literal>'s state is interrogated to determine the appropriate challenge message. </para> </callout> <callout arearefs=\"result\"> <para> And again to determine whether to congratulate, console or encourage the user to continue. </para> </callout> </calloutlist> </programlistingco> <para> Finally we come to the <literal>NumberGuessFrame</literal> class which provides the Swing front end to our guessing game. </para> <programlistingco> <areaspec> <area id=\"gameIn\" coords=\"3\"/> <area id=\"messagesIn\" coords=\"4\"/> <area id=\"start\" coords=\"6\"/> <area id=\"init\" coords=\"18\"/> <area id=\"guess1\" coords=\"34\"/> <area id=\"replay\" coords=\"44\"/> <area id=\"refresh\" coords=\"50\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public class NumberGuessFrame  extends javax.swing.JFrame\n"
#~ "{\n"
#~ "    private @Current Game game;\n"
#~ "    private @Current MessageGenerator msgGenerator;\n"
#~ "\n"
#~ "    public void start( @Observes @Deployed Manager manager )\n"
#~ "    {\n"
#~ "        java.awt.EventQueue.invokeLater( new Runnable()\n"
#~ "            {\n"
#~ "                public void run()\n"
#~ "                {\n"
#~ "                    initComponents();\n"
#~ "                    setVisible( true );\n"
#~ "                }\n"
#~ "            } );\n"
#~ "    }\n"
#~ "\n"
#~ "    private void initComponents() {\n"
#~ "\n"
#~ "        buttonPanel = new javax.swing.JPanel();\n"
#~ "        mainMsgPanel = new javax.swing.JPanel();\n"
#~ "        mainLabel = new javax.swing.JLabel();\n"
#~ "        messageLabel = new javax.swing.JLabel();\n"
#~ "        guessText = new javax.swing.JTextField();\n"
#~ "        ...\n"
#~ "        mainLabel.setText(msgGenerator.getChallengeMessage());\n"
#~ "        mainMsgPanel.add(mainLabel);\n"
#~ "\n"
#~ "        messageLabel.setText(msgGenerator.getResultMessage());\n"
#~ "        mainMsgPanel.add(messageLabel);\n"
#~ "        ...\n"
#~ "    }\n"
#~ "\n"
#~ "    private void guessButtonActionPerformed( java.awt.event.ActionEvent evt )\n"
#~ "    {\n"
#~ "        int guess =  Integer.parseInt(guessText.getText());\n"
#~ "\n"
#~ "        game.setGuess( guess );\n"
#~ "        game.check();\n"
#~ "        refreshUI();\n"
#~ "\n"
#~ "    }\n"
#~ "\n"
#~ "    private void replayBtnActionPerformed( java.awt.event.ActionEvent evt )\n"
#~ "    {\n"
#~ "       game.reset();\n"
#~ "       refreshUI();\n"
#~ "    }\n"
#~ "\n"
#~ "    private void refreshUI()\n"
#~ "    {\n"
#~ "        mainLabel.setText( msgGenerator.getChallengeMessage() );\n"
#~ "        messageLabel.setText( msgGenerator.getResultMessage() );\n"
#~ "        guessText.setText( \"\" );\n"
#~ "        guessesLeftBar.setValue( game.getRemainingGuesses() );\n"
#~ "        guessText.requestFocus();\n"
#~ "    }\n"
#~ "\n"
#~ "    // swing components\n"
#~ "    private javax.swing.JPanel borderPanel;\n"
#~ "    ...\n"
#~ "    private javax.swing.JButton replayBtn;\n"
#~ "\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"gameIn\"> <para> The injected instance of the game (logic and state). </para> </callout> <callout arearefs=\"messagesIn\"> <para> The injected message generator for UI messages. </para> </callout> <callout arearefs=\"start\"> <para> This application is started in the usual Web Beans SE way, by observing the <literal>@Deployed Manager</literal> event. </para> </callout> <callout arearefs=\"init\"> <para> This method initialises all of the Swing components. Note the use of the <literal>msgGenerator</literal>. </para> </callout> <callout arearefs=\"guess1\"> <para> <literal>guessButtonActionPerformed</literal> is called when the 'Guess' button is clicked, and it does the following: </para> <itemizedlist> <listitem> <para> Gets the guess entered by the user and sets it as the current guess in the <literal>Game</literal> </para> </listitem> <listitem> <para> Calls <literal>game.check()</literal> to validate and perform one 'turn' of the game </para> </listitem> <listitem> <para> Calls <literal>refreshUI</literal>. If there were validation errors with the input, this will have been captured during <literal>game.check()</literal> and as such will be reflected in the messeges returned by <literal>MessageGenerator</literal> and subsequently presented to the user. If there are no validation errors then the user will be told to guess again (higher or lower) or that the game has ended either in a win (correct guess) or a loss (ran out of guesses). </para> </listitem> </itemizedlist> </callout> <callout arearefs=\"replay\"> <para> <literal>replayBtnActionPerformed</literal> simply calls <literal>game.reset()</literal> to start a new game and refreshes the messages in the UI. </para> </callout> <callout arearefs=\"refresh\"> <para> <literal>refreshUI</literal> uses the <literal>MessageGenerator</literal> to update the messages to the user based on the current state of the Game. </para> </callout> </calloutlist> </programlistingco>"
#~ msgstr ""
#~ "<programlistingco> <areaspec> <area id=\"scope\" coords=\"1\"/> <area id=\"name\" coords=\"1\"/> <area id=\"messages1\" coords=\"26\"/> <area id=\"validation\" coords=\"39\"/> <area id=\"reset\" coords=\"68\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[@ApplicationScoped\n"
#~ "public class Game implements Serializable\n"
#~ "{\n"
#~ "\n"
#~ "    private int number;\n"
#~ "    private int guess;\n"
#~ "    private int smallest;\n"
#~ "\n"
#~ "    @MaxNumber\n"
#~ "    private int maxNumber;\n"
#~ "\n"
#~ "    private int biggest;\n"
#~ "    private int remainingGuesses;\n"
#~ "    private boolean validNumberRange = true;\n"
#~ "\n"
#~ "    @Current Generator rndGenerator;\n"
#~ "\n"
#~ "    ...\n"
#~ "\n"
#~ "    public boolean isValidNumberRange()\n"
#~ "    {\n"
#~ "        return validNumberRange;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean isGameWon()\n"
#~ "    {\n"
#~ "        return guess == number;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean isGameLost()\n"
#~ "    {\n"
#~ "        return guess != number && remainingGuesses <= 0;\n"
#~ "    }\n"
#~ "\n"
#~ "    public boolean check()\n"
#~ "    {\n"
#~ "        boolean result = false;\n"
#~ "\n"
#~ "        if ( checkNewNumberRangeIsValid() )\n"
#~ "        {\n"
#~ "            if ( guess > number )\n"
#~ "            {\n"
#~ "                biggest = guess - 1;\n"
#~ "            }\n"
#~ "\n"
#~ "            if ( guess < number )\n"
#~ "            {\n"
#~ "                smallest = guess + 1;\n"
#~ "            }\n"
#~ "\n"
#~ "            if ( guess == number )\n"
#~ "            {\n"
#~ "                result = true;\n"
#~ "            }\n"
#~ "\n"
#~ "            remainingGuesses--;\n"
#~ "        }\n"
#~ "\n"
#~ "        return result;\n"
#~ "    }\n"
#~ "\n"
#~ "    private boolean checkNewNumberRangeIsValid()\n"
#~ "    {\n"
#~ "        return validNumberRange = ( ( guess >= smallest ) && ( guess <= biggest ) );\n"
#~ "    }\n"
#~ "\n"
#~ "    @PostConstruct\n"
#~ "    public void reset()\n"
#~ "    {\n"
#~ "        this.smallest = 0;\n"
#~ "        ...\n"
#~ "        this.number = rndGenerator.next();\n"
#~ "    }\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"scope\"> <para> The bean is application scoped instead of session scoped, since an instance of the application represents a single 'session'. </para> </callout> <callout arearefs=\"name\"> <para> The bean is not named, since it doesn't need to be accessed via EL </para> </callout> <callout arearefs=\"messages1\"> <para> There is no JSF <literal>FacesContext</literal> to add messages to. Instead the <literal>Game</literal> class provides additional information about the state of the current game including: </para> <itemizedlist> <listitem> <para> If the game has been won or lost </para> </listitem> <listitem> <para> If the most recent guess was invalid </para> </listitem> </itemizedlist> <para> This allows the Swing UI to query the state of the game, which it does indirectly via a class called <literal>MessageGenerator,</literal> in order to determine the appropriate messages to display to the user during the game. </para> </callout> <callout arearefs=\"validation\"> <para> Validation of user input is performed during the <literal>check()</literal> method, since there is no dedicated validation phase </para> </callout> <callout arearefs=\"reset\"> <para> The <literal>reset()</literal> method makes a call to the injected <literal>rndGenerator</literal> in order to get the random number at the start of each game. It cannot use <literal>manager.getInstanceByType(Integer.class, new AnnotationLiteral&lt;Random&gt;(){})</literal> as the JSF example does because there will not be any active contexts like there is during a JSF request. </para> </callout> </calloutlist> </programlistingco> <para> The <literal>MessageGenerator</literal> class depends on the current instance of <literal>Game</literal>, and queries its state in order to determine the appropriate messages to provide as the prompt for the user's next guess and the response to the previous guess. The code for <literal>MessageGenerator</literal> is as follows: </para> <programlistingco> <areaspec> <area id=\"game\" coords=\"3\"/> <area id=\"challenge\" coords=\"5\"/> <area id=\"result\" coords=\"16\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public class MessageGenerator\n"
#~ "{\n"
#~ "    @Current Game game;\n"
#~ "\n"
#~ "    public String getChallengeMessage()\n"
#~ "    {\n"
#~ "        StringBuilder challengeMsg = new StringBuilder( \"I'm thinking of a number between \" );\n"
#~ "        challengeMsg.append( game.getSmallest() );\n"
#~ "        challengeMsg.append( \" and \" );\n"
#~ "        challengeMsg.append( game.getBiggest() );\n"
#~ "        challengeMsg.append( \". Can you guess what it is?\" );\n"
#~ "\n"
#~ "        return challengeMsg.toString();\n"
#~ "    }\n"
#~ "\n"
#~ "    public String getResultMessage()\n"
#~ "    {\n"
#~ "        if ( game.isGameWon() )\n"
#~ "        {\n"
#~ "            return \"You guess it! The number was \" + game.getNumber();\n"
#~ "        } else if ( game.isGameLost() )\n"
#~ "        {\n"
#~ "            return \"You are fail! The number was \" + game.getNumber();\n"
#~ "        } else if ( ! game.isValidNumberRange() )\n"
#~ "        {\n"
#~ "            return \"Invalid number range!\";\n"
#~ "        } else if ( game.getRemainingGuesses() == Game.MAX_NUM_GUESSES )\n"
#~ "        {\n"
#~ "            return \"What is your first guess?\";\n"
#~ "        } else\n"
#~ "        {\n"
#~ "            String direction = null;\n"
#~ "\n"
#~ "            if ( game.getGuess() < game.getNumber() )\n"
#~ "            {\n"
#~ "                direction = \"Higher\";\n"
#~ "            } else\n"
#~ "            {\n"
#~ "                direction = \"Lower\";\n"
#~ "            }\n"
#~ "\n"
#~ "            return direction + \"! You have \" + game.getRemainingGuesses() + \" guesses left.\";\n"
#~ "        }\n"
#~ "    }\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"game\"> <para> The instance of <literal>Game</literal> for the application is injected here. </para> </callout> <callout arearefs=\"challenge\"> <para> The <literal>Game</literal>'s state is interrogated to determine the appropriate challenge message. </para> </callout> <callout arearefs=\"result\"> <para> And again to determine whether to congratulate, console or encourage the user to continue. </para> </callout> </calloutlist> </programlistingco> <para> Finally we come to the <literal>NumberGuessFrame</literal> class which provides the Swing front end to our guessing game. </para> <programlistingco> <areaspec> <area id=\"gameIn\" coords=\"3\"/> <area id=\"messagesIn\" coords=\"4\"/> <area id=\"start\" coords=\"6\"/> <area id=\"init\" coords=\"18\"/> <area id=\"guess1\" coords=\"34\"/> <area id=\"replay\" coords=\"44\"/> <area id=\"refresh\" coords=\"50\"/> </areaspec> <programlisting role=\"JAVA\"><![CDATA[public class NumberGuessFrame  extends javax.swing.JFrame\n"
#~ "{\n"
#~ "    private @Current Game game;\n"
#~ "    private @Current MessageGenerator msgGenerator;\n"
#~ "\n"
#~ "    public void start( @Observes @Deployed Manager manager )\n"
#~ "    {\n"
#~ "        java.awt.EventQueue.invokeLater( new Runnable()\n"
#~ "            {\n"
#~ "                public void run()\n"
#~ "                {\n"
#~ "                    initComponents();\n"
#~ "                    setVisible( true );\n"
#~ "                }\n"
#~ "            } );\n"
#~ "    }\n"
#~ "\n"
#~ "    private void initComponents() {\n"
#~ "\n"
#~ "        buttonPanel = new javax.swing.JPanel();\n"
#~ "        mainMsgPanel = new javax.swing.JPanel();\n"
#~ "        mainLabel = new javax.swing.JLabel();\n"
#~ "        messageLabel = new javax.swing.JLabel();\n"
#~ "        guessText = new javax.swing.JTextField();\n"
#~ "        ...\n"
#~ "        mainLabel.setText(msgGenerator.getChallengeMessage());\n"
#~ "        mainMsgPanel.add(mainLabel);\n"
#~ "\n"
#~ "        messageLabel.setText(msgGenerator.getResultMessage());\n"
#~ "        mainMsgPanel.add(messageLabel);\n"
#~ "        ...\n"
#~ "    }\n"
#~ "\n"
#~ "    private void guessButtonActionPerformed( java.awt.event.ActionEvent evt )\n"
#~ "    {\n"
#~ "        int guess =  Integer.parseInt(guessText.getText());\n"
#~ "\n"
#~ "        game.setGuess( guess );\n"
#~ "        game.check();\n"
#~ "        refreshUI();\n"
#~ "\n"
#~ "    }\n"
#~ "\n"
#~ "    private void replayBtnActionPerformed( java.awt.event.ActionEvent evt )\n"
#~ "    {\n"
#~ "       game.reset();\n"
#~ "       refreshUI();\n"
#~ "    }\n"
#~ "\n"
#~ "    private void refreshUI()\n"
#~ "    {\n"
#~ "        mainLabel.setText( msgGenerator.getChallengeMessage() );\n"
#~ "        messageLabel.setText( msgGenerator.getResultMessage() );\n"
#~ "        guessText.setText( \"\" );\n"
#~ "        guessesLeftBar.setValue( game.getRemainingGuesses() );\n"
#~ "        guessText.requestFocus();\n"
#~ "    }\n"
#~ "\n"
#~ "    // swing components\n"
#~ "    private javax.swing.JPanel borderPanel;\n"
#~ "    ...\n"
#~ "    private javax.swing.JButton replayBtn;\n"
#~ "\n"
#~ "}]]></programlisting> <calloutlist> <callout arearefs=\"gameIn\"> <para> The injected instance of the game (logic and state). </para> </callout> <callout arearefs=\"messagesIn\"> <para> The injected message generator for UI messages. </para> </callout> <callout arearefs=\"start\"> <para> This application is started in the usual Web Beans SE way, by observing the <literal>@Deployed Manager</literal> event. </para> </callout> <callout arearefs=\"init\"> <para> This method initialises all of the Swing components. Note the use of the <literal>msgGenerator</literal>. </para> </callout> <callout arearefs=\"guess1\"> <para> <literal>guessButtonActionPerformed</literal> is called when the 'Guess' button is clicked, and it does the following: </para> <itemizedlist> <listitem> <para> Gets the guess entered by the user and sets it as the current guess in the <literal>Game</literal> </para> </listitem> <listitem> <para> Calls <literal>game.check()</literal> to validate and perform one 'turn' of the game </para> </listitem> <listitem> <para> Calls <literal>refreshUI</literal>. If there were validation errors with the input, this will have been captured during <literal>game.check()</literal> and as such will be reflected in the messeges returned by <literal>MessageGenerator</literal> and subsequently presented to the user. If there are no validation errors then the user will be told to guess again (higher or lower) or that the game has ended either in a win (correct guess) or a loss (ran out of guesses). </para> </listitem> </itemizedlist> </callout> <callout arearefs=\"replay\"> <para> <literal>replayBtnActionPerformed</literal> simply calls <literal>game.reset()</literal> to start a new game and refreshes the messages in the UI. </para> </callout> <callout arearefs=\"refresh\"> <para> <literal>refreshUI</literal> uses the <literal>MessageGenerator</literal> to update the messages to the user based on the current state of the Game. </para> </callout> </calloutlist> </programlistingco>"

#~ msgid "The translator example"
#~ msgstr "O exemplo translator"

#~ msgid "The translator example will take any sentences you enter, and translate them to Latin."
#~ msgstr "O exemplo translator pegará qualquer frase que você fornecer e a  traduzirá para o Latim."

#~ msgid "The translator example is built as an ear, and contains EJBs. As a result, it's structure is more complex than the numberguess example."
#~ msgstr "O exemplo translator é construído como um ear e contém EJBs. Como resultado, a sua estrutura é mais complexa do que o exemplo numberguess."

#~ msgid "EJB 3.1 and Jave EE 6 allow you to package EJBs in a war, which will make this structure much simpler!"
#~ msgstr "EJB 3.1 e Java EE 6 permitem a você empacotar EJBs em um war, o que tornará esta estrutura muito mais simples!"

#~ msgid "First, let's take a look at the ear aggregator, which is located in <literal>webbeans-translator-ear</literal> module. Maven automatically generates the <literal>application.xml</literal> for us:"
#~ msgstr "Primeiro, vamos dar uma olhada no ear aggregator, que está localizado módulo <literal>webbeans-translator-ear</literal>. Maven gera automaticamente o<literal>application.xml</literal> para nós:"

#~ msgid ""
#~ "<![CDATA[<plugin>\n"
#~ "   <groupId>org.apache.maven.plugins</groupId>\n"
#~ "   <artifactId>maven-ear-plugin</artifactId>\n"
#~ "   <configuration>\n"
#~ "      <modules>\n"
#~ "         <webModule>\n"
#~ "            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
#~ "            <artifactId>webbeans-translator-war</artifactId>\n"
#~ "            <contextRoot>/webbeans-translator</contextRoot>\n"
#~ "         </webModule>\n"
#~ "      </modules>\n"
#~ "   </configuration>\n"
#~ "</plugin>]]>"
#~ msgstr ""
#~ "<![CDATA[<plugin>\n"
#~ "   <groupId>org.apache.maven.plugins</groupId>\n"
#~ "   <artifactId>maven-ear-plugin</artifactId>\n"
#~ "   <configuration>\n"
#~ "      <modules>\n"
#~ "         <webModule>\n"
#~ "            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
#~ "            <artifactId>webbeans-translator-war</artifactId>\n"
#~ "            <contextRoot>/webbeans-translator</contextRoot>\n"
#~ "         </webModule>\n"
#~ "      </modules>\n"
#~ "   </configuration>\n"
#~ "</plugin>]]>"

#~ msgid "If you aren't using Maven to generate these files, you would need <literal>META-INF/application.xml</literal>:"
#~ msgstr "Se você não está usando o Maven para gerar esses arquivos, você precisaria <literal>META-INF/application.xml</literal>:"

#~ msgid ""
#~ "<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
#~ "             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
#~ "             version=\"5\">\n"
#~ "  <display-name>webbeans-translator-ear</display-name>\n"
#~ "  <description>Ear Example for the reference implementation of JSR 299: Web Beans</description>\n"
#~ "  \n"
#~ "  <module>\n"
#~ "    <web>\n"
#~ "      <web-uri>webbeans-translator.war</web-uri>\n"
#~ "      <context-root>/webbeans-translator</context-root>\n"
#~ "    </web>\n"
#~ "  </module>\n"
#~ "  <module>\n"
#~ "    <ejb>webbeans-translator.jar</ejb>\n"
#~ "  </module>\n"
#~ "</application>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
#~ "             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
#~ "             version=\"5\">\n"
#~ "  <display-name>webbeans-translator-ear</display-name>\n"
#~ "  <description>Ear Example for the reference implementation of JSR 299: Web Beans</description>\n"
#~ "  \n"
#~ "  <module>\n"
#~ "    <web>\n"
#~ "      <web-uri>webbeans-translator.war</web-uri>\n"
#~ "      <context-root>/webbeans-translator</context-root>\n"
#~ "    </web>\n"
#~ "  </module>\n"
#~ "  <module>\n"
#~ "    <ejb>webbeans-translator.jar</ejb>\n"
#~ "  </module>\n"
#~ "</application>]]>"

#~ msgid "Next, lets look at the war. Just as in the numberguess example, we have a <literal>faces-config.xml</literal> (to enable Facelets) and a <literal>web.xml</literal> (to enable JSF) in <literal>WebContent/WEB-INF</literal>."
#~ msgstr "Em seguida, vamos ver o war. Tal como no exemplo numberguess, temos um <literal>faces-config.xml</literal> (para habilitar o Facelets) e um <literal>web.xml</literal> (para habilitar o JSF) no <literal>WebContent/WEB-INF</literal>."

#~ msgid "More intersting is the facelet used to translate text. Just as in the numberguess example we have a template, which surrounds the form (ommitted here for brevity):"
#~ msgstr "Mais interessante é o facelet utilizado para traduzir texto. Tal como no exemplo numberguess, temos um template, que envolve o formulário (omitido aqui por brevitude):"

#~ msgid ""
#~ "<![CDATA[<h:form id=\"NumberGuessMain\">\n"
#~ "            \n"
#~ "   <table>\n"
#~ "      <tr align=\"center\" style=\"font-weight: bold\" >\n"
#~ "         <td>\n"
#~ "            Your text\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            Translation\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "      <tr>\n"
#~ "         <td>\n"
#~ "            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" required=\"true\" rows=\"5\" cols=\"80\" />\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            <h:outputText value=\"#{translator.translatedText}\" />\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "   </table>\n"
#~ "   <div>\n"
#~ "      <h:commandButton id=\"button\" value=\"Translate\" action=\"#{translator.translate}\"/>\n"
#~ "   </div>\n"
#~ "   \n"
#~ "</h:form>]]>"
#~ msgstr ""
#~ "<![CDATA[<h:form id=\"NumberGuessMain\">\n"
#~ "            \n"
#~ "   <table>\n"
#~ "      <tr align=\"center\" style=\"font-weight: bold\" >\n"
#~ "         <td>\n"
#~ "            Your text\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            Translation\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "      <tr>\n"
#~ "         <td>\n"
#~ "            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" required=\"true\" rows=\"5\" cols=\"80\" />\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            <h:outputText value=\"#{translator.translatedText}\" />\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "   </table>\n"
#~ "   <div>\n"
#~ "      <h:commandButton id=\"button\" value=\"Translate\" action=\"#{translator.translate}\"/>\n"
#~ "   </div>\n"
#~ "   \n"
#~ "</h:form>]]>"

#~ msgid "The user can enter some text in the lefthand textarea, and hit the translate button to see the result to the right."
#~ msgstr "O usuário pode digitar um texto no textarea esquerdo e clicar no botão traduzir para ver o resultado à direita."

#~ msgid "Finally, let's look at the ejb module, <literal>webbeans-translator-ejb</literal>. In <literal>src/main/resources/META-INF</literal> there is just an empty <literal>web-beans.xml</literal>, used to mark the archive as containing Web Beans."
#~ msgstr "Por fim, vamos olhar  o módulo EJB <literal>webbeans-translator-ejb</literal>. Em <literal>src/main/resources/META-INF</literal> existe apenas um <literal>web-beans.xml</literal> vazio, utilizado para marcar o arquivo como contendo Web Beans."

#~ msgid "We've saved the most interesting bit to last, the code! The project has two simple beans, <literal>SentenceParser</literal> and <literal>TextTranslator</literal> and two enterprise beans, <literal>TranslatorControllerBean</literal> and <literal>SentenceTranslator</literal>. You should be getting quite familiar with what a Web Bean looks like by now, so we'll just highlight the most interesting bits here."
#~ msgstr "Deixamos o pedaço mais interessante para o final: o código! O projeto tem dois beans simples, <literal>SentenceParser</literal> e <literal>TextTranslator</literal> e dois beans corporativos<literal>TranslatorControllerBean</literal> e <literal>SentenceTranslator</literal>. Você deve estar bastante familiarizado com o que um Web Bean parece até agora. Então, vamos apenas destacar as partes mais interessantes aqui."

#~ msgid "Both <literal>SentenceParser</literal> and <literal>TextTranslator</literal> are dependent beans, and <literal>TextTranslator</literal> uses constructor initialization:"
#~ msgstr "Tanto <literal>SentenceParser</literal> quanto <literal>TextTranslator</literal> são beans dependentes, e <literal>TextTranslator</literal> usa inicialização por construtor :"

#~ msgid ""
#~ "<![CDATA[public class TextTranslator { \n"
#~ "   private SentenceParser sentenceParser; \n"
#~ "   private Translator sentenceTranslator; \n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   TextTranslator(SentenceParser sentenceParser, Translator sentenceTranslator) \n"
#~ "   { \n"
#~ "      this.sentenceParser = sentenceParser; \n"
#~ "      this.sentenceTranslator = sentenceTranslator;]]>"
#~ msgstr ""
#~ "<![CDATA[<h:form id=\"NumberGuessMain\">\n"
#~ "            \n"
#~ "   <table>\n"
#~ "      <tr align=\"center\" style=\"font-weight: bold\" >\n"
#~ "         <td>\n"
#~ "            Your text\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            Translation\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "      <tr>\n"
#~ "         <td>\n"
#~ "            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" required=\"true\" rows=\"5\" cols=\"80\" />\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            <h:outputText value=\"#{translator.translatedText}\" />\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "   </table>\n"
#~ "   <div>\n"
#~ "      <h:commandButton id=\"button\" value=\"Translate\" action=\"#{translator.translate}\"/>\n"
#~ "   </div>\n"
#~ "   \n"
#~ "</h:form>]]>"

#~ msgid "<literal>TextTranslator</literal> is a stateless bean (with a local business interface), where the magic happens - of course, we couldn't develop a full translator, but we gave it a good go!"
#~ msgstr "<literal>TextTranslator</literal> é um bean stateless (com uma interface de negócios local), onde a mágica acontece . Obviamente, não poderíamos desenvolver um tradutor completo, mas lhe demos um bom caminho!"

#~ msgid "Finally, there is UI orientated controller, that collects the text from the user, and dispatches it to the translator. This is a request scoped, named, stateful session bean, which injects the translator."
#~ msgstr "Finalmente, há um controlador orientado à interface, que recolhe o texto do usuário e despacha para o tradutor. Esse é um escopo de requisição, com o nome, stateful session bean, que injeta o tradutor."

#~ msgid ""
#~ "<![CDATA[@Stateful\n"
#~ "@RequestScoped\n"
#~ "@Named(\"translator\")\n"
#~ "public class TranslatorControllerBean implements TranslatorController\n"
#~ "{\n"
#~ "   \n"
#~ "   @Current TextTranslator translator;]]>"
#~ msgstr ""
#~ "<![CDATA[@Stateful\n"
#~ "@RequestScoped\n"
#~ "@Named(\"translator\")\n"
#~ "public class TranslatorControllerBean implements TranslatorController\n"
#~ "{\n"
#~ "   \n"
#~ "   @Current TextTranslator translator;]]>"

#~ msgid "The bean also has getters and setters for all the fields on the page."
#~ msgstr "O bean também tem getters e setters para todos os campos da página."

#~ msgid "As this is a stateful session bean, we have to have a remove method:"
#~ msgstr "Como esse é um stateful session bean, temos de ter um método de remoção:"

#~ msgid ""
#~ "<![CDATA[   @Remove\n"
#~ "   public void remove()\n"
#~ "   {\n"
#~ "      \n"
#~ "   }]]>"
#~ msgstr ""
#~ "<![CDATA[   @Remove\n"
#~ "   public void remove()\n"
#~ "   {\n"
#~ "      \n"
#~ "   }]]>"

#~ msgid "The Web Beans manager will call the remove method for you when the bean is destroyed; in this case at the end of the request."
#~ msgstr "O gerenciador do Web Beans chamará o método remover para você quando o bean for destruído - neste caso, no final da requisição."

#~ msgid "That concludes our short tour of the Web Beans examples. For more on Web Beans , or to help out, please visit <ulink url=\"http://www.seamframework.org/WebBeans/Development\">http://www.seamframework.org/WebBeans/Development</ulink>."
#~ msgstr "Está encerrado o nosso curto passeio pelos exemplos de Web Beans. Para mais informações sobre a Web Beans, ou para ajudar, por favor visite <ulink url=\"http://www.seamframework.org/WebBeans/Development\">http://www.seamframework.org/WebBeans/Development</ulink>."

#~ msgid "We need help in all areas - bug fixing, writing new features, writing examples and translating this reference guide."
#~ msgstr "Precisamos de ajuda em todas as áreas - correção de bugs, escrita de novas funcionalidades, escrita de exemplos e tradução deste guia de referência."

#~ msgid "As Web Beans is a new piece of software, you need to update JBoss AS to run the Web Beans RI. Future versions of JBoss AS will include these updates, and this step won't be necessary."
#~ msgstr "Como o Web Beabs é uma nova peça de software, você de fazer a atualização do JBoss AS para poder executar a implementação de referência de Web Beans (Web Beans RI). Futuras versões do JBoss AS incluirão essas atualizações e esse passo será desnecessário."
