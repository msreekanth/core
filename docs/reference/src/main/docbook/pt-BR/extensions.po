# Language pt-BR translations for Web_Beans:_Java_Contexts_and_Dependency_Injection package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: Web_Beans:_Java_Contexts_and_Dependency_Injection "
"VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-07-25T03:52:14\n"
"PO-Revision-Date: 2010-10-21 01:20-0300\n"
"Last-Translator: Bruno Leonardo Gonçalves <brunolmfg@gmail.com>\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "CDI extensions available as part of Weld"
msgstr "Extensões do CDI disponíveis como parte do Weld"

#. Tag: para
#, no-c-format
msgid "These modules are usable on any JSR-299 implementation, not just Weld!"
msgstr ""
"Estes módulos são utilizáveis em qualquer implementação da JSR-299, e não "
"apenas no Weld!"

#. Tag: title
#, no-c-format
msgid "Weld Logger"
msgstr "Weld Logger"

#. Tag: para
#, no-c-format
msgid ""
"Adding logging to your application is now even easier with simple injection "
"of a logger object into any CDI bean. Simply create an injection point of "
"type <literal>org.slf4j.Logger</literal> and an appropriate logger object "
"will be injected into any instance of the bean."
msgstr ""
"Adicionar logging em sua aplicação é agora ainda mais fácil com a simples "
"injeção de um objeto de logger em qualquer bean CDI. Basta criar um ponto de "
"injeção do tipo <literal>org.slf4j.Logger</literal> e um objeto de logger "
"apropriado será injetado em qualquer instância do bean."

#. Tag: para
#, no-c-format
msgid ""
"The example shows how objects can be interpolated into a message. If you use "
"this approach, you do not need to surround a call to the logger with a "
"condition like <literal>if ( log.isDebugEnabled() )</literal> to avoid "
"string concatenation."
msgstr ""
"O exemplo mostra como objetos podem ser interpolados em uma mensagem. Se "
"você usa esta abordagem, você não precisa cercar uma chamada ao logger com "
"uma condição como <literal>if ( log.isDebugEnabled() )</literal> para evitar "
"concatenação da string."

#. Tag: para
#, no-c-format
msgid ""
"You can add Weld logging to your project by including weld-logger.jar, sl4j-"
"api.jar and sl4j-jdk14.jar to your project. Alternatively, express a "
"dependency on the <literal>org.jboss.weld:weld-logger</literal> Maven "
"artifact."
msgstr ""
"Você pode adicionar o logging do Weld em seu projeto através da inclusão de "
"weld-logger.jar, sl4j-api.jar e sl4j-jdk14.jar em seu projeto. "
"Alternativamente, manifeste uma dependência ao artefato Maven <literal>org."
"jboss.weld:weld-logger</literal>."

#. Tag: para
#, no-c-format
msgid ""
"If you are using Weld as your JSR-299 implementation, there's no need to "
"include sl4j as it's already included (and used internally)."
msgstr ""
"Se você estiver utilizando o Weld como sua implementação da JSR-299, não há "
"necessidade de incluir o sl4j, pois ele já está incluído (e usado "
"internamente)."

#~ msgid ""
#~ "<![CDATA[import org.slf4j.Logger;\n"
#~ "import javax.inject.Inject;\n"
#~ "\n"
#~ "public class Checkout {\n"
#~ "   private @Inject Logger log;\n"
#~ "\n"
#~ "   public void invoiceItems() {\n"
#~ "      ShoppingCart cart;\n"
#~ "      ...\n"
#~ "      log.debug(\"Items invoiced for {}\", cart);\n"
#~ "   }\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[import org.slf4j.Logger;\n"
#~ "import javax.inject.Inject;\n"
#~ "\n"
#~ "public class Checkout {\n"
#~ "   private @Inject Logger log;\n"
#~ "\n"
#~ "   public void invoiceItems() {\n"
#~ "      ShoppingCart cart;\n"
#~ "      ...\n"
#~ "      log.debug(\"Items invoiced for {}\", cart);\n"
#~ "   }\n"
#~ "}]]>"
