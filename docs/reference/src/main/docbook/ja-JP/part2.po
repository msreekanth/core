# Language ja-JP translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-12-14T13:35:17\n"
"PO-Revision-Date: 2009-04-30 23:10+0900\n"
"Last-Translator: Fusayuki Minamoto <miki.htmnet@nifty.com>\n"
"Language-Team: none\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#, no-c-format
msgid "Weld, the JSR-299 Reference Implementation (RI), is being developed as part of the <ulink url=\"http://seamframework.org/Weld\">Seam project</ulink>. You can download the latest community release of Weld from the <ulink url=\"http://seamframework.org/Download\">download page</ulink>. Information about the Weld source code repository and instructions about how to obtain and build the source can be found on the same page."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Weld provides a complete SPI allowing Java EE containers such as JBoss AS and GlassFish to use Weld as their built-in CDI implementation. Weld also runs in servlet engines like Tomcat and Jetty, or even in a plain Java SE environment."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Weld comes with an extensive library of examples, which are a great starting point from which to learn CDI."
msgstr ""

#~ msgid "The first major theme of Web Beans is <emphasis>loose coupling</emphasis>. We've already seen three means of achieving loose coupling:"
#~ msgstr "Web Beans の最初の主要なテーマは <emphasis>疎結合 (loose coupling)</emphasis> です。私たちは疎結合を達成する次の3つの手段をすでに見てきました。"

#~ msgid "<emphasis>deployment types</emphasis> enable deployment time polymorphism,"
#~ msgstr "<emphasis>デプロイメントタイプ</emphasis> はデプロイ時のポリモフィズムを可能にします。"

#~ msgid "<emphasis>producer methods</emphasis> enable runtime polymorphism, and"
#~ msgstr "<emphasis>プロデューサメソッド</emphasis> は実行時のポリモフィズムを可能にします。"

#~ msgid "<emphasis>contextual lifecycle management</emphasis> decouples Web Bean lifecycles."
#~ msgstr "<emphasis>コンテキスト依存ライフサイクル管理</emphasis> は Web Bean ライフサイクルを分離します。"

#~ msgid "These techniques serve to enable loose coupling of client and server. The client is no longer tightly bound to an implementation of an API, nor is it required to manage the lifecycle of the server object. This approach lets <emphasis>stateful objects interact as if they were services</emphasis>."
#~ msgstr "これらの技術はクライアントとサーバー間の疎結合を可能にするのに役立ちます。クライアントはもう API の実装に密に結合しなくなりますし、サーバーオブジェクトのライフサイクルを管理することも要求されません。このアプローチは <emphasis>ステートフルオブジェクトはサービスのように振舞う</emphasis> ことを可能にします。"

#~ msgid "Loose coupling makes a system more <emphasis>dynamic</emphasis>. The system can respond to change in a well-defined manner. In the past, frameworks that attempted to provide the facilities listed above invariably did it by sacrificing type safety. Web Beans is the first technology that achieves this level of loose coupling in a typesafe way."
#~ msgstr "疎結合はシステムをより <emphasis>動的</emphasis> にします。システムは変化に対して明確な方法で応答できます。過去においては、上記の機能を提供しようとするフレームワークは型の安全（タイプセーフ）を犠牲にしていました。Web Beansはタイプセーフを保ちつつこのレベルの疎結合を達成します。"

#~ msgid "Web Beans provides three extra important facilities that further the goal of loose coupling:"
#~ msgstr "Web Beansはさらなる疎結合のゴールを達成するために次の3つの重要な機能をさらに提供します。"

#~ msgid "<emphasis>interceptors</emphasis> decouple technical concerns from business logic,"
#~ msgstr "<emphasis>インタセプタ</emphasis> はビジネスロジックから技術的関心事を分離する"

#~ msgid "<emphasis>decorators</emphasis> may be used to decouple some business concerns, and"
#~ msgstr "<emphasis>デコレータ </emphasis> はビジネスの関心事を分離するために使用できる"

#~ msgid "<emphasis>event notifications</emphasis> decouple event producers from event consumers."
#~ msgstr "<emphasis>イベント通知</emphasis> はイベントプロデューサをイベントコンシューマから分離する"

#~ msgid "Let's explore interceptors first."
#~ msgstr "ではインタセプタから最初に調べましょう。"
