# Language it-IT translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-12-14T13:35:16\n"
"PO-Revision-Date: 2010-07-17 18:52+0100\n"
"Last-Translator: Nicola Benaglia <nico.benaz@gmail.com>\n"
"Language-Team: none\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Decorators"
msgstr "Decoratori"

#. Tag: para
#, fuzzy, no-c-format
msgid "Interceptors are a powerful way to capture and separate concerns which are <emphasis>orthogonal</emphasis> to the application (and type system). Any interceptor is able to intercept invocations of any Java type. This makes them perfect for solving technical concerns such as transaction management, security and call logging. However, by nature, interceptors are unaware of the actual semantics of the events they intercept. Thus, interceptors aren&#39;t an appropriate tool for separating business-related concerns."
msgstr "Gli interceptor sono un potente modo per catturare e separare i concern (N.d.T. un concern è un particolare concetto o area di interesse) che sono <emphasis>ortogonali</emphasis> al sistema tipo. Qualsiasi interceptor è capace di intercettare le invocazioni di qualsiasi tipo Java. Questo li rende perfetti per risolvere concern tecnici quali gestione delle transazioni e la sicurezza. Comunque, per natura, gli interceptor non sono consapevoli dell'attuale semantica degli eventi che intercettano. Quindi gli interceptor non sono il giusto strumento per separare i concern di tipo business."

# ...concerns that cut across many disparate types = ?
#. Tag: para
#, fuzzy, no-c-format
msgid "The reverse is true of <emphasis>decorators</emphasis>. A decorator intercepts invocations only for a certain Java interface, and is therefore aware of all the semantics attached to that interface. Since decorators directly implement operations with business semantics, it makes them the perfect tool for modeling some kinds of business concerns. It also means that a decorator doesn&#39;t have the generality of an interceptor. Decorators aren&#39;t able to solve technical concerns that cut across many disparate types. Interceptors and decorators, though similar in many ways, are complementary. Let&#39;s look at some cases where decorators fit the bill."
msgstr "Il contrario è vero per i <emphasis>decoratori</emphasis>. Un decoratore intercetta le invocazioni solamente per una certa interfaccia Java, e quindi è consapevole della semantica legata a questa. Ciò rende i decoratori uno strumento perfetto per modellare alcuni tipi di concern di business. E significa pure che un decoratore non ha la generalità di un interceptor. I decoratori non sono capaci di risolvere i concern tecnici che agiscono per diversi tipi."

#. Tag: para
#, no-c-format
msgid "Suppose we have an interface that represents accounts:"
msgstr "Supponiamo di avere un'interfaccia che rappresenti degli account:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"public interface Account {\n"
"   public BigDecimal getBalance();\n"
"   public User getOwner();\n"
"   public void withdraw(BigDecimal amount);\n"
"   public void deposit(BigDecimal amount);\n"
"}"
msgstr ""
"<![CDATA[public interface Account {\n"
"   public BigDecimal getBalance();\n"
"   public User getOwner();\n"
"   public void withdraw(BigDecimal amount);\n"
"   public void deposit(BigDecimal amount);\n"
"}]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "Several different beans in our system implement the <literal>Account</literal> interface. However, we have a common legal requirement that; for any kind of account, large transactions must be recorded by the system in a special log. This is a perfect job for a decorator."
msgstr "Parecchi Web Beans del nostro sistema implementano l'interfaccia <literal>Account</literal>. Abbiamo come comune requisito legale, per ogni tipo di account, che le transazioni lunghe vengano registrate dal sistema in uno speciale log. Questo è un lavoro perfetto per un decoratore."

#. Tag: para
#, fuzzy, no-c-format
msgid "A decorator is a bean (possibly even an abstract class) that implements the type it decorates and is annotated <literal>@Decorator</literal>."
msgstr "Un decorator è un semplice Web Beans che implementa il tipo che decora ed è annotato con <literal>@Decorator</literal>.\""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   ...\n"
"}"
msgstr ""
"<![CDATA[@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   ...\n"
"}]]>"

#. Tag: para
#, no-c-format
msgid "The decorator implements the methods of the decorated type that it wants to intercept."
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"\n"
"   @PersistenceContext EntityManager em;\n"
"    \n"
"   public void withdraw(BigDecimal amount) {\n"
"      ...\n"
"   }\n"
"    \n"
"   public void deposit(BigDecimal amount);\n"
"      ...\n"
"   }\n"
"}"
msgstr ""
"<![CDATA[@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"\n"
"   @PersistenceContext EntityManager em;\n"
"    \n"
"   public void withdraw(BigDecimal amount) {\n"
"      ...\n"
"   }\n"
"    \n"
"   public void deposit(BigDecimal amount);\n"
"      ...\n"
"   }\n"
"}]]>"

#. Tag: para
#, fuzzy, no-c-format
msgid "Unlike other beans, a decorator may be an abstract class. Therefore, if there&#39;s nothing special the decorator needs to do for a particular method of the decorated interface, you don&#39;t need to implement that method."
msgstr "Diversamente dai semplici Web Beans, un decoratore può essere una classe astratta. Se un decoratore non ha niente da fare per un particolare metodo, allora non occorre implementare quel metodo."

#. Tag: para
#, fuzzy, no-c-format
msgid "Interceptors for a method are called before decorators that apply to the method."
msgstr "Gli interceptor per un metodo sono chiamati prima dei decoratori che vengono applicati a tali metodo."

#. Tag: title
#, no-c-format
msgid "Delegate object"
msgstr "Oggetto delegate"

#. Tag: para
#, no-c-format
msgid "Decorators have a special injection point, called the <emphasis>delegate injection point</emphasis>, with the same type as the beans they decorate, and the annotation <literal>@Delegate</literal>. There must be exactly one delegate injection point, which can be a constructor parameter, initializer method parameter or injected field."
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"   ...\n"
"}"
msgstr ""
"<![CDATA[@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"   ...\n"
"}]]>"

#. Tag: para
#, no-c-format
msgid "A decorator is bound to any bean which:"
msgstr "Un decorator è legato ad un qualsiasi bean che:"

#. Tag: para
#, no-c-format
msgid "has the type of the delegate injection point as a bean type, and"
msgstr "ha il tipo di punto injection delegate come un tipo bean, e"

#. Tag: para
#, no-c-format
msgid "has all qualifiers that are declared at the delegate injection point."
msgstr "ha tutti i qualificatori che sono dichiarati nel punto injection delegate."

#. Tag: para
#, no-c-format
msgid "This delegate injection point specifies that the decorator is bound to all beans that implement <literal>Account</literal>:"
msgstr "Questo punto di injection delegate specifica che il decoratore è legato a tutti i beans che implementano <literal>Account</literal>:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "@Inject @Delegate @Any Account account;"
msgstr "<![CDATA[@Inject @Delegate @Any Account account;]]>"

# E' corretto tradurre BOUND con LEGATO in questo particolare contesto?
# ....rivedere alcune frasi sopra.
#. Tag: para
#, no-c-format
msgid "A delegate injection point may specify any number of qualifier annotations. The decorator will only be bound to beans with the same qualifiers."
msgstr "Un punto di injection delegate può specificare un qualsiasi numero di annotazioni qualifier. Il decoratore verrà associato ai bean con gli stessi qualificatori."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "@Inject @Delegate @Foreign Account account;"
msgstr "<![CDATA[@Inject @Delegate @Foreign Account account;]]>"

#. Tag: para
#, no-c-format
msgid "The decorator may invoke the delegate object, which has much the same effect as calling <literal>InvocationContext.proceed()</literal> from an interceptor. The main difference is that the decorator can invoke <emphasis>any</emphasis> business method on the delegate object."
msgstr "Il decoratore può invocare l'oggetto delegate, il ché ha lo stesso effetto come chiamare <literal>InvocationContext.proceed()</literal> da un interceptor. La principale differenza è che il decoratore può invocare <emphasis>qualsiasi</emphasis> metodo di business sull'oggetto delegate."

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"\n"
"   @PersistenceContext EntityManager em;\n"
"    \n"
"   public void withdraw(BigDecimal amount) {\n"
"      account.withdraw(amount);\n"
"      if ( amount.compareTo(LARGE_AMOUNT)&#62;0 ) {\n"
"         em.persist( new LoggedWithdrawl(amount) );\n"
"      }\n"
"   }\n"
"    \n"
"   public void deposit(BigDecimal amount);\n"
"      account.deposit(amount);\n"
"      if ( amount.compareTo(LARGE_AMOUNT)&#62;0 ) {\n"
"         em.persist( new LoggedDeposit(amount) );\n"
"      }\n"
"   }\n"
"}"
msgstr ""
"<![CDATA[@Decorator\n"
"public abstract class LargeTransactionDecorator\n"
"      implements Account {\n"
"   @Inject @Delegate @Any Account account;\n"
"\n"
"   @PersistenceContext EntityManager em;\n"
"    \n"
"   public void withdraw(BigDecimal amount) {\n"
"      account.withdraw(amount);\n"
"      if ( amount.compareTo(LARGE_AMOUNT)>0 ) {\n"
"         em.persist( new LoggedWithdrawl(amount) );\n"
"      }\n"
"   }\n"
"    \n"
"   public void deposit(BigDecimal amount);\n"
"      account.deposit(amount);\n"
"      if ( amount.compareTo(LARGE_AMOUNT)>0 ) {\n"
"         em.persist( new LoggedDeposit(amount) );\n"
"      }\n"
"   }\n"
"}]]>"

#. Tag: title
#, no-c-format
msgid "Enabling decorators"
msgstr "Abilitare i decoratori"

#. Tag: para
#, no-c-format
msgid "By default, all decorators are disabled. We need to <emphasis>enable</emphasis> our decorator in the <literal>beans.xml</literal> descriptor of a bean archive. This activation only applies to the beans in that archive."
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"&#60;beans\n"
"   xmlns=&#34;http://java.sun.com/xml/ns/javaee&#34;\n"
"   xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;\n"
"   xsi:schemaLocation=&#34;\n"
"      http://java.sun.com/xml/ns/javaee\n"
"      http://java.sun.com/xml/ns/javaee/beans_1_0.xsd&#34;&#62;\n"
"   &#60;decorators&#62;\n"
"         &#60;class&#62;org.mycompany.myapp.LargeTransactionDecorator&#60;/class&#62;\n"
"   &#60;/decorators&#62;\n"
"&#60;/beans&#62;"
msgstr ""
"<![CDATA[<beans\n"
"   xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"   xsi:schemaLocation=\"\n"
"      http://java.sun.com/xml/ns/javaee\n"
"      http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\">\n"
"   <decorators>\n"
"         <class>org.mycompany.myapp.LargeTransactionDecorator</class>\n"
"   </decorators>\n"
"</beans>]]>"

# Rivedere la frase?
#. Tag: para
#, fuzzy, no-c-format
msgid "This declaration serves the same purpose for decorators that the <literal>&#60;interceptors&#62;</literal> declaration serves for interceptors:"
msgstr "Questa dichiarazione provvede per i decoratori alle stesse finalità di quanto la dichiarazione <literal>&#60;interceptors&#62;</literal> fa per gli interceptor."

#. Tag: para
#, no-c-format
msgid "it enables us to specify a total ordering for all decorators in our system, ensuring deterministic behavior, and"
msgstr "Consente di specificare un ordinamento totale per tutti i decoratori del sistema, assicurando un comportamento deterministico, e"

#. Tag: para
#, no-c-format
msgid "it lets us enable or disable decorator classes at deployment time."
msgstr "consente di abilitare o disabilitare le classi decorato durante la fase di deploy."

#~ msgid "All decorators have a <emphasis>delegate attribute</emphasis>. The type and binding types of the delegate attribute determine which Web Beans the decorator is bound to. The delegate attribute type must implement or extend all interfaces implemented by the decorator."
#~ msgstr "Tutti i decoratori hanno un <emphasis>attributo delegato</emphasis>. Il tipo ed i tipi di binding dell'attributo delegato determinano a quali Web Beans è legato il decoratore. Il tipo di attributo delegato deve implementare o estendere tutte le interfacce implementate dal decoratore."

#~ msgid "We need to <emphasis>enable</emphasis> our decorator in <literal>web-beans.xml</literal>."
#~ msgstr "Occorre <emphasis>abilitare</emphasis> il decoratore in <literal>web-beans.xml</literal>."
