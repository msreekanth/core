# translation of ri.po to Spanish
# Language es-ES translations for master.xml package.
#
# Automatically generated, 2008.
# Gladys Guerrero Lozano <gguerrer@redhat.com>, 2009.
msgid ""
msgstr ""
"Project-Id-Version: ri\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-12-14T13:35:17\n"
"PO-Revision-Date: 2009-01-20 10:55+1000\n"
"Last-Translator: Gladys Guerrero Lozano <gguerrer@redhat.com>\n"
"Language-Team: Spanish <fedora-trans-es@redhat.com>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#, no-c-format
msgid "Getting started with Weld"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Weld comes with a number of examples. We recommend you start with <literal>examples/jsf/numberguess</literal> and <literal>examples/jsf/translator</literal>. Numberguess is a web (war) example containing only non-transactional managed beans. This example can be run on a wide range of servers, including JBoss AS, GlassFish, Apache Tomcat, Jetty, Google App Engine, and any compliant Java EE 6 container. Translator is an enterprise (ear) example that contains session beans. This example must be run on JBoss AS 6.0, Glassfish 3.0 or any compliant Java EE 6 container."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Both examples use JSF 2.0 as the web framework and, as such, can be found in the <literal>examples/jsf</literal> directory of the Weld distribution."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Prerequisites"
msgstr ""

#. Tag: para
#, no-c-format
msgid "To run the examples with the provided build scripts, you&#39;ll need the following:"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "the latest release of Weld, which contains the examples"
msgstr "la última versión de la IR de Web Beans,"

#. Tag: para
#, no-c-format
msgid "Ant 1.7.0, to build and deploy the examples"
msgstr ""

#. Tag: para
#, no-c-format
msgid "a supported runtime environment (minimum versions shown)"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "JBoss AS 6.0.0,"
msgstr "JBoss AS 5.0.0.GA, y"

#. Tag: para
#, no-c-format
msgid "GlassFish 3.0,"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Apache Tomcat 6.0.x (war example only), or"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Jetty 6.1.x (war example only)"
msgstr ""

#. Tag: para
#, no-c-format
msgid "(optionally) Maven 2.x, to run the examples in an embedded servlet container"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You&#39;ll need a full install of Ant 1.7.0. Some linux distributions only supply a partial installation of Ant which cause the build to fail. If you encounter problems, verify that ant-nodeps.jar is on the classpath."
msgstr ""

#. Tag: para
#, no-c-format
msgid "In the next few sections, you&#39;ll be using the Ant command (<literal>ant</literal>) to invoke the Ant build script in each example to compile, assemble and deploy the example to JBoss AS and, for the war example, Apache Tomcat. You can also deploy the generated artifact (war or ear) to any other container that supports Java EE 6, such as GlassFish 3."
msgstr ""

#. Tag: para
#, no-c-format
msgid "If you have Maven installed, you can use the Maven command (<literal>mvn</literal>) to compile and assemble the standalone artifact (war or ear) and, for the war example, run it in an embedded container."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The sections below cover the steps for deploying with both Ant and Maven in detail. Let&#39;s start with JBoss AS."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Deploying to JBoss AS"
msgstr ""

#. Tag: para
#, no-c-format
msgid "To deploy the examples to JBoss AS, you&#39;ll need <ulink url=\"http://jboss.org/jbossas/\">JBoss AS 6.0.0</ulink> or above. If a release of the JBoss AS 6.0 line isn&#39;t yet available, you can download a <ulink url=\"http://hudson.jboss.org/hudson/view/JBoss%20AS/job/JBoss-AS-6.0.x/\">nightly snapshot</ulink>. The reason JBoss AS 6.0.0 or above is required is because it&#39;s the first release that has both CDI and Bean Validation support built-in, making it close enough to Java EE 6 to run the examples. The good news is that there are no additional modifications you have to make to the server. It&#39;s ready to go!"
msgstr ""

#. Tag: para
#, no-c-format
msgid "After you have downloaded JBoss AS, extract it. (We recommended renaming the folder to include the <literal>as</literal> qualifier so it&#39;s clear that it&#39;s the application server). You can move the extracted folder anywhere you like. Wherever it lays to rest, that&#39;s what we&#39;ll call the JBoss AS installation directory, or <literal>JBOSS_HOME</literal>."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; unzip jboss-6.0.*.zip\n"
"$&#62; mv jboss-6.0.*/ jboss-as-6.0"
msgstr ""

#. Tag: para
#, no-c-format
msgid "In order for the build scripts to know where to deploy the example, you have to tell them where to find your JBoss AS installation (i.e., <literal>JBOSS_HOME</literal>). Create a new file named <literal>local.build.properties</literal> in the examples directory of the Weld distribution and assign the path of your JBoss AS installation to the property key <literal>jboss.home</literal>, as follows:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "jboss.home=/path/to/jboss-as-6.0"
msgstr "jboss.home=/Applications/jboss-5.0.0.GA"

#. Tag: para
#, fuzzy, no-c-format
msgid "You&#39;re now ready to deploy your first example!"
msgstr "Ahora, ¡está listo para desplegar su primer ejemplo!"

#. Tag: para
#, no-c-format
msgid "Switch to the <literal>examples/jsf/numberguess</literal> directory and execute the Ant <literal>deploy</literal> target:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; ant deploy"
msgstr ""
"$ cd examples/numberguess\n"
"ant deploy"

#. Tag: para
#, no-c-format
msgid "If you haven&#39;t already, start JBoss AS. You can either start JBoss AS from a Linux shell:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd /path/to/jboss-as-6.0\n"
"$&#62; ./bin/run.sh"
msgstr "jboss.home=/Applications/jboss-5.0.0.GA"

#. Tag: para
#, no-c-format
msgid "a Windows command window:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; cd c:\\path\\to\\jboss-as-6.0\\bin\n"
"$&#62; run"
msgstr ""

#. Tag: para
#, no-c-format
msgid "or you can start the server using an IDE, like Eclipse."
msgstr ""

#. Tag: para
#, no-c-format
msgid "If you are using Eclipse, you should seriously consider installing the <ulink url=\"http://www.jboss.org/tools\">JBoss Tools</ulink> add-ons, which include a wide variety of tooling for JSR-299 and Java EE development, as well as an enhanced JBoss AS server view."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "Wait a few seconds for the application to deploy (or the application server to start) and see if you can determine the most efficient approach to pinpoint the random number at the local URL <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>."
msgstr "Aquí establecemos la ruta de contexto, la cual nos da una url interesante (<ulink url=\"http://localhost:8080/webbeans-translator\">http://localhost:8080/webbeans-translator</ulink>)."

#. Tag: para
#, no-c-format
msgid "The Ant build script includes additional targets for JBoss AS to deploy and undeploy the archive in either exploded or packaged format and to tidy things up."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant restart</literal> - deploy the example in exploded format to JBoss AS"
msgstr "<literal>ant restart</literal> - despliega el ejemplo en formato explotado"

#. Tag: para
#, no-c-format
msgid "<literal>ant explode</literal> - update an exploded example, without restarting the deployment"
msgstr "<literal>ant explode</literal> - actualiza un ejemplo explotado, sin reiniciar el despliegue"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant deploy</literal> - deploy the example in compressed jar format to JBoss AS"
msgstr "<literal>ant deploy</literal> - despliega el ejemplo en formato JAR comprimido"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant undeploy</literal> - remove the example from JBoss AS"
msgstr "<literal>ant undeploy</literal> - quita el ejemplo del servidor"

#. Tag: para
#, no-c-format
msgid "<literal>ant clean</literal> - clean the example"
msgstr "<literal>ant clean</literal> - borra el ejemplo"

#. Tag: para
#, no-c-format
msgid "The second starter example, <literal>weld-translator</literal>, will translate your text into Latin. (Well, not really, but the stub is there for you to implement, at least. Good luck!) To try it out, switch to the translator example directory and execute the deploy target:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/translator\n"
"$&#62; ant deploy"
msgstr ""
"$ cd examples/translator\n"
"ant deploy"

#. Tag: para
#, no-c-format
msgid "The translator uses session beans, which are packaged in an EJB module within an ear. Java EE 6 will allow session beans to be deployed in war modules, but that&#39;s a topic for a later chapter."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "Again, wait a few seconds for the application to deploy (if you&#39;re really bored, read the log messages), and visit <ulink url=\"http://localhost:8080/weld-translator\">http://localhost:8080/weld-translator</ulink> to begin pseudo-translating."
msgstr "Aquí establecemos la ruta de contexto, la cual nos da una url interesante (<ulink url=\"http://localhost:8080/webbeans-translator\">http://localhost:8080/webbeans-translator</ulink>)."

#. Tag: title
#, no-c-format
msgid "Deploying to GlassFish"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Deploying to GlassFish should be easy and familiar, right? After all, it&#39;s the Java EE 6 reference implementation and Weld is the JSR-299 reference implementation, meaning Weld gets bundled with GlassFish. So yes, it&#39;s all quite easy and familiar."
msgstr ""

#. Tag: para
#, no-c-format
msgid "To deploy the examples to GlassFish, you&#39;ll need the final <ulink url=\"https://glassfish.dev.java.net/downloads/v3-final.html\">GlassFish V3</ulink> release. Select the release that ends in either <literal>-unix.sh</literal> or <literal>-windows.exe</literal> depending on your platform. After the download is complete, execute the installer. On Linux/Unix, you&#39;ll need to first make the script executable."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; chmod 755 glassfish-v3-unix.sh\n"
"$&#62; ./glassfish-v3-unix.sh"
msgstr ""

#. Tag: para
#, no-c-format
msgid "On Windows you can just click on the executable. Follow the instructions in the installer. It will create a single domain named <literal>domain1</literal>. You&#39;ll use that domain to deploy the example. We recommend that you choose <literal>7070</literal> as the main HTTP port to avoid conflicts with a running instance of JBoss AS (or Apache Tomcat)."
msgstr ""

#. Tag: para
#, no-c-format
msgid "If you&#39;ve deployed either of the starter examples, <literal>weld-numberguess</literal> or <literal>weld-translator</literal>, to JBoss AS, then you already have the deployable artifact you need. If not, switch to either of the two directories and build it."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess (or examples/jsf/translator)\n"
"$&#62; ant package"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The deployable archive for the <literal>weld-numberguess</literal>, named <literal>weld-numberguess.war</literal>, ends up in the example&#39;s <literal>target</literal> directory. The archive for the <literal>weld-translator</literal> example, named <literal>weld-translator.ear</literal>, ends up in the example&#39;s <literal>ear/target</literal> directory. All you need to do now is deploy them to GlassFish."
msgstr ""

#. Tag: para
#, no-c-format
msgid "One way to deploy applications to GlassFish is by using the <ulink url=\"http://localhost:4848\">GlassFish Admin Console</ulink>. To get the Admin Console running, you need to start a GlassFish domain, in our case <literal>domain1</literal>. Switch to the <literal>bin</literal> folder in the directory where you installed GlassFish and execute the following command:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; asadmin start-domain domain1"
msgstr ""

#. Tag: para
#, no-c-format
msgid "After a few seconds you can visit the Admin Console in the browser at the URL <ulink url=\"http://localhost:4848\">http://localhost:4848</ulink>. In the tree on the left-hand side of the page, click on &#34;Applications&#34;, then click on the &#34;Deploy...&#34; button under the heading &#34;Applications&#34; and select the deployable artifact for either of the two examples. The deployer should recognize that you have selected a Java EE artifact and allow you to start it. You can see the examples running at either <ulink url=\"http://localhost:7070/weld-numberguess\">http://localhost:7070/weld-numberguess</ulink> or <ulink url=\"http://localhost:7070/weld-translator\">http://localhost:7070/weld-translator</ulink>, depending on which example you deployed."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Alternatively, you can deploy the application to GlassFish using the asadmin command:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; asadmin deploy target/weld-numberguess.war"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The reason the same artifact can be deployed to both JBoss AS and GlassFish, without any modifications, is because all of the features being used are part of the standard platform. And what a capable platform it has become!"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Deploying to Apache Tomcat"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Servlet containers are not required to support Java EE services like CDI. However, you can use CDI in a servlet container like Tomcat by embedding a standalone CDI implementation such as Weld."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Weld comes with a servlet listener which bootstraps the CDI environment, registers the <literal>BeanManager</literal> in JNDI and provides injection into servlets. Basically, it emulates some of the work done by the Java EE container. (But you don&#39;t get enterprise features such as session beans and container-managed transactions.)"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "Let&#39;s give the Weld servlet extension a spin on Apache Tomcat. First, you&#39;ll need to download Tomcat 6.0.18 or later from <ulink url=\"http://tomcat.apache.org/download-60.cgi\">tomcat.apache.org</ulink> and extract it."
msgstr "Luego, descargue la IR de Web Beans desde <ulink url=\"http://seamframework.org/Download\">seamframework.org</ulink>, y descomprímalo. Por ejemplo:"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "$&#62; unzip apache-tomcat-6.0.18.zip"
msgstr ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.0.GA.zip]]>"

#. Tag: para
#, no-c-format
msgid "You have two choices for how you can deploy the application to Tomcat. You can deploy it by pushing the artifact to the hot deploy directory using Ant or you can deploy to the server across HTTP using a Maven plugin. The Ant approach doesn&#39;t require that you have Maven installed, so we&#39;ll start there. If you want to use Maven, you can just skip ahead."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Deploying with Ant"
msgstr ""

#. Tag: para
#, no-c-format
msgid "In order for Ant to push the artifact to the Tomcat hot deploy directory, it needs to know where the Tomcat installation is located. Again, we need to set a property in the <literal>local.build.properties</literal> file in the examples directory of the Weld distribution. If you haven&#39;t yet created this file, do so now. Then assign the path of your Tomcat installation to the property key <literal>tomcat.home</literal>."
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid "tomcat.home=/path/to/apache-tomcat-6"
msgstr "jboss.home=/Applications/jboss-5.0.0.GA"

#. Tag: para
#, fuzzy, no-c-format
msgid "Now you&#39;re ready to deploy the numberguess example to Tomcat!"
msgstr "Para desplegar el ejemplo numberguess:"

#. Tag: para
#, no-c-format
msgid "Change to the <literal>examples/jsf/numberguess</literal> directory again and run the Ant <literal>deploy</literal> target for Tomcat:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; ant tomcat.deploy"
msgstr ""
"$ cd examples/numberguess\n"
"ant deploy"

#. Tag: para
#, no-c-format
msgid "The Ant build script includes additional targets for Tomcat to deploy and undeploy the archive in either exploded or packaged format. They are the same target names used for JBoss AS, prefixed with &#34;tomcat.&#34;."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant tomcat.restart</literal> - deploy the example in exploded format to Tomcat"
msgstr "<literal>ant restart</literal> - despliega el ejemplo en formato explotado"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant tomcat.explode</literal> - update an exploded example, without restarting the deployment"
msgstr "<literal>ant explode</literal> - actualiza un ejemplo explotado, sin reiniciar el despliegue"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant tomcat.deploy</literal> - deploy the example in compressed jar format to Tomcat"
msgstr "<literal>ant deploy</literal> - despliega el ejemplo en formato JAR comprimido"

#. Tag: para
#, fuzzy, no-c-format
msgid "<literal>ant tomcat.undeploy</literal> - remove the example from Tomcat"
msgstr "<literal>ant undeploy</literal> - quita el ejemplo del servidor"

#. Tag: para
#, no-c-format
msgid "If you haven&#39;t already, start Tomcat. You can either start Tomcat from a Linux shell:"
msgstr ""

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd /path/to/apache-tomcat-6\n"
"$&#62; ./bin/start.sh"
msgstr "jboss.home=/Applications/jboss-5.0.0.GA"

#. Tag: programlisting
#, fuzzy, no-c-format
msgid ""
"$&#62; cd c:\\path\\to\\apache-tomcat-6\\bin\n"
"$&#62; start"
msgstr ""
"<![CDATA[$ cd /Applications\n"
"$ unzip ~/jboss-5.0.0.GA.zip]]>"

#. Tag: para
#, no-c-format
msgid "Wait a few seconds for the application to deploy (or the application server to start) and see if you can figure out the most efficient approach to pinpoint the random number at the local URL <ulink url=\"http://localhost:8080/weld-numberguess\">http://localhost:8080/weld-numberguess</ulink>!"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Deploying with Maven"
msgstr ""

#. Tag: para
#, no-c-format
msgid "You can also deploy the application to Tomcat using Maven. This section is a bit more advanced, so skip it unless you&#39;re itching to use Maven natively. Of course, you&#39;ll first need to make sure that you have Maven installed on your path, similar to how you setup Ant."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The Maven plugin communicates with Tomcat over HTTP, so it doesn&#39;t care where you have installed Tomcat. However, the plugin configuration assumes you are running Tomcat in its default configuration, with a hostname of localhost and port <literal>8080</literal>. The <literal>readme.txt</literal> file in the example directory has information about how to modify the Maven settings to accommodate a different setup."
msgstr ""

#. Tag: para
#, no-c-format
msgid "To allow Maven to communicate with Tomcat over HTTP, edit the <literal>conf/tomcat-users.xml</literal> file in your Tomcat installation and add the following line:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "&#60;user username=&#34;admin&#34; password=&#34;&#34; roles=&#34;manager&#34;/&#62;"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Restart Tomcat. You can now deploy the application to Tomcat with Maven using this command:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn compile war:exploded tomcat:exploded -Ptomcat"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Once the application is deployed, you can redeploy it using this command:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn tomcat:redeploy -Ptomcat"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>-Ptomcat</literal> argument activates the <literal>tomcat</literal> profile defined in the Maven POM (<literal>pom.xml</literal>). Among other things, this profile activates the Tomcat plugin."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Rather than shipping the container off to a standalone Tomcat installation, you can also execute the application in an embedded Tomcat 6 container:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn war:inplace tomcat:run -Ptomcat"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The advantage of using the embedded server is that changes to assets in <literal>src/main/webapp</literal> take effect immediately. If a change to a webapp configuration file is made, the application may automatically redeploy (depending on the plugin configuration). If you make a change to a classpath resource, you need to execute a build:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn compile war:inplace -Ptomcat"
msgstr ""

#. Tag: para
#, no-c-format
msgid "There are several other Maven goals that you can use if you are hacking on the example, which are documented in the example&#39;s <literal>readme.txt</literal> file."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Deploying to Jetty"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Support for Jetty in the examples is a more recent addition. Since Jetty is traditionally used with Maven, there are no Ant targets. You must invoke the Maven build directly to deploy the examples to Jetty out of the box. Also, only the <literal>weld-numberguess</literal> example is configured for Jetty support at the time of writing."
msgstr ""

#. Tag: para
#, no-c-format
msgid "If you&#39;ve read through the entire Tomcat section, then you&#39;re all ready to go. The Maven build parallels the embedded Tomcat deployment. If not, don&#39;t worry. We&#39;ll still go over everything that you need to know again in this section."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The Maven POM (<literal>pom.xml</literal>) includes a profile named <literal>jetty</literal> that activates the Maven Jetty plugin, which you can use to start Jetty in embedded mode and deploy the application in place. You don&#39;t need anything else installed except to have the Maven command (<literal>mvn</literal>) on your path. The rest will be downloaded from the internet when the build is run."
msgstr ""

#. Tag: para
#, no-c-format
msgid "To run the <literal>weld-numberguess</literal> example on Jetty, switch to the example directory and execute the <literal>inplace</literal> goal of the Maven war plugin followed by the <literal>run</literal> goal of the Maven Jetty plugin with the <literal>jetty</literal> profile enabled, as follows:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid ""
"$&#62; cd examples/jsf/numberguess\n"
"$&#62; mvn war:inplace jetty:run -Pjetty"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The log output of Jetty will be shown in the console. Once Jetty reports that the application has deployed, you can access it at the following local URL: <ulink url=\"http://localhost:9090/weld-numberguess\">http://localhost:9090/weld-numberguess</ulink>. The port is defined in the Maven Jetty plugin configuration within the <literal>jetty</literal> profile."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Any changes to assets in <literal>src/main/webapp</literal> take effect immediately. If a change to a webapp configuration file is made, the application may automatically redeploy. The redeploy behavior can be fined-tuned in the plugin configuration. If you make a change to a classpath resource, you need to execute a build and the <literal>inplace</literal> goal of the Maven war plugin, again with the <literal>jetty</literal> profile enabled."
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn compile war:inplace -Pjetty"
msgstr ""

#. Tag: para
#, no-c-format
msgid "The <literal>war:inplace</literal> goal copies the compiled classes and jars inside <literal>src/main/webapp</literal>, under <literal>WEB-INF/classes</literal> and <literal>WEB-INF/lib</literal>, respectively, mixing source and compiled files. However, the build does work around these temporary files by excluding them from the packaged war and cleaning them during the Maven clean phase."
msgstr ""

#. Tag: para
#, no-c-format
msgid "You have two options if you want to run the example on Jetty from the IDE. You can either install the m2eclispe[link] plugin and run the goals as described above. Your other option is to start the Jetty container from a Java application."
msgstr ""

#. Tag: para
#, no-c-format
msgid "First, initialize the Eclipse project:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn clean eclipse:clean eclipse:eclipse -Pjetty-ide"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Next, assemble all the necessary resources under <literal>src/main/webapp</literal>:"
msgstr ""

#. Tag: programlisting
#, no-c-format
msgid "$&#62; mvn war:inplace -Pjetty-ide"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Now, you are ready to run the server in Eclipse. Import the project into your Eclipse workspace using &#34;Import Existing Project into Workspace. Then, find the start class in <literal>src/jetty/java</literal> and run its main method as a Java Application. Jetty will launch. You can view the application at the following local URL: <ulink url=\"http://localhost:8080\">http://localhost:8080</ulink>. Pay particular attention to the port in the URL and the lack of a trailing context path."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Now that you have gotten the starter applications deployed on the server of your choice, you probably want to know a little bit about how they actually work."
msgstr ""

#, fuzzy
#~ msgid "Getting started with Web Beans, the Reference Implementation of JSR-299"
#~ msgstr "La implementación de referencia de Web Beans"

#, fuzzy
#~ msgid "The Web Beans is being developed at <ulink url=\"http://seamframework.org/WebBeans\">the Seam project</ulink>. You can download the latest developer release of Web Beans from the <ulink url=\"http://seamframework.org/Download\">the downloads page</ulink>."
#~ msgstr "La implementación de referencia (IR) de Web Beans se desarrolla en <ulink url=\"http://seamframework.org/WebBeans\">the Seam project</ulink>. La última versión de Web Beans se puede descargar desde <ulink url=\"http://seamframework.org/Download\">the downloads page</ulink>."

#, fuzzy
#~ msgid "Web Beans comes with a two deployable example applications: <literal>webbeans-numberguess</literal>, a war example, containing only simple beans, and <literal>webbeans-translator</literal> an ear example, containing enterprise beans. There are also two variations on the numberguess example, the tomcat example (suitable for deployment to Tomcat) and the jsf2 example, which you can use if you are running JSF2. To run the examples you'll need the following:"
#~ msgstr "La IR de Web Beans viene con dos ejemplos de aplicaciones de despliegue: <literal>webbeans-numberguess</literal>, un ejemplo WAR, que contiene sólo beans sencillos y un ejemplo EAR <literal>webbeans-translator</literal> que contiene beans empresariales. Para ejecutar los ejemplos necesitará lo siguiente:"

#~ msgid "Ant 1.7.0."
#~ msgstr "Ant 1.7.0."

#, fuzzy
#~ msgid "You'll need to download JBoss AS 5.0.1.GA from <ulink url=\"http://www.jboss.org/jbossas/downloads/\">jboss.org</ulink>, and unzip it. For example:"
#~ msgstr "Actualmente, la IR de Web Beans sólo se ejecuta en JBoss Application Server 5. Necesitará descargar JBoss AS 5.0.0.GA desde <ulink url=\"http://www.jboss.org/jbossas/downloads/\">jboss.org</ulink>, y descomprimirlo. Por ejemplo:"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[$ cd /Applications\n"
#~ "$ unzip ~/jboss-5.0.1.GA.zip]]>"
#~ msgstr ""
#~ "<![CDATA[$ cd /Applications\n"
#~ "$ unzip ~/jboss-5.0.0.GA.zip]]>"

#, fuzzy
#~ msgid "Next, download Web Beans from <ulink url=\"http://seamframework.org/Download\">seamframework.org</ulink>, and unzip it. For example"
#~ msgstr "Luego, descargue la IR de Web Beans desde <ulink url=\"http://seamframework.org/Download\">seamframework.org</ulink>, y descomprímalo. Por ejemplo:"

#, fuzzy
#~ msgid ""
#~ "<![CDATA[$ cd ~/\n"
#~ "$ unzip ~/webbeans-$VERSION.zip]]>"
#~ msgstr ""
#~ "<![CDATA[$ cd ~/\n"
#~ "$ unzip ~/webbeans-1.0.0.ALPHA1.zip]]>"

#~ msgid "Next, we need to tell Web Beans where JBoss is located. Edit <literal>jboss-as/build.properties</literal> and set the <literal>jboss.home</literal> property. For example:"
#~ msgstr "Después necesitaremos decirle a Web Beans en dónde está localizado JBoss. Editar <literal>jboss-as/build.properties</literal> y establecer la propiedad <literal>jboss.home</literal>. Por ejemplo:"

#, fuzzy
#~ msgid "To install Web Beans, you'll need Ant 1.7.0 installed, and the <literal>ANT_HOME</literal> environment variable set. For example:"
#~ msgstr "Para instalar la actualización, necesitaremos que Ant 1.7.0 esté instalado, y que la variable de entorno <literal>ANT_HOME</literal> esté configurada. Por ejemplo:"

#~ msgid ""
#~ "$ unzip apache-ant-1.7.0.zip\n"
#~ "$ export ANT_HOME=~/apache-ant-1.7.0"
#~ msgstr ""
#~ "$ unzip apache-ant-1.7.0.zip\n"
#~ "$ export ANT_HOME=~/apache-ant-1.7.0"

#, fuzzy
#~ msgid "Then, you can install the update. The update script will use Maven to download Web Beans automatically."
#~ msgstr "Luego, puede instalar la actualización. La actualización utiliza Maven para descargar automáticamente el Web Beans y EJB3."

#, fuzzy
#~ msgid ""
#~ "$ cd webbeans-$VERSION/jboss-as\n"
#~ "$ ant update"
#~ msgstr ""
#~ "$ cd webbeans-1.0.0.ALPHA1/jboss-as\n"
#~ "$ ant update"

#, fuzzy
#~ msgid "The build scripts for the examples offer a number of targets for JBoss AS, these are:"
#~ msgstr "Los scripts creados para los ejemplos ofrecen una cantidad de objetivos, a saber:"

#~ msgid "To deploy the numberguess example:"
#~ msgstr "Para desplegar el ejemplo numberguess:"

#~ msgid "Wait for the application to deploy, and enjoy hours of fun at <ulink url=\"http://localhost:8080/webbeans-numberguess\"></ulink>!"
#~ msgstr "Espere que despliegue la aplicación, y diviértase en <ulink url=\"http://localhost:8080/webbeans-numberguess\"></ulink>!"

#, fuzzy
#~ msgid "Web Beans includes a second simple example that will translate your text into Latin. The numberguess example is a war example, and uses only simple beans; the translator example is an ear example, and includes enterprise beans, packaged in an EJB module. To try it out:"
#~ msgstr "La IR de Web Beans incluye un segundo ejemplo que traducirá su texto en Latín. El ejemplo numberguess es un ejemplo WAR, y sólo utiliza beans sencillos; el ejemplo de traductor es un ejemplo EAR e incluye beans empresariales, empaquetados en un módulo EJB. Para probar:"

#~ msgid "Wait for the application to deploy, and visit <ulink url=\"http://localhost:8080/webbeans-translator\"></ulink>!"
#~ msgstr "Espere a que despliegue la aplicación, y ¡visite <ulink url=\"http://localhost:8080/webbeans-translator\"></ulink>!"

#, fuzzy
#~ msgid "Next, we need to tell Web Beans where Tomcat is located. Edit <literal>jboss-as/build.properties</literal> and set the <literal>tomcat.home</literal> property. For example:"
#~ msgstr "Después necesitaremos decirle a Web Beans en dónde está localizado JBoss. Editar <literal>jboss-as/build.properties</literal> y establecer la propiedad <literal>jboss.home</literal>. Por ejemplo:"

#, fuzzy
#~ msgid "The build scripts for the examples offer a number of targets for Tomcat, these are:"
#~ msgstr "Los scripts creados para los ejemplos ofrecen una cantidad de objetivos, a saber:"

#, fuzzy
#~ msgid "<literal>ant tomcat.undeploy</literal> - remove the example (in compressed jar format) from the server"
#~ msgstr "<literal>ant deploy</literal> - despliega el ejemplo en formato JAR comprimido"

#, fuzzy
#~ msgid "<literal>ant tomcat.unexplode</literal> - remove the example (in exploded format) from the server"
#~ msgstr "<literal>ant undeploy</literal> - quita el ejemplo del servidor"

#, fuzzy
#~ msgid "<literal>ant tomcat.clean</literal> - clean the example"
#~ msgstr "<literal>ant clean</literal> - borra el ejemplo"

#, fuzzy
#~ msgid ""
#~ "$ cd examples/tomcat\n"
#~ "ant tomcat.deploy"
#~ msgstr ""
#~ "$ cd examples/translator\n"
#~ "ant deploy"

#~ msgid "The numberguess example"
#~ msgstr "El ejemplo numberguess"

#~ msgid "In the numberguess application you get given 10 attempts to guess a number between 1 and 100. After each attempt, you will be told whether you are too high, or too low."
#~ msgstr "En la aplicación numberguess se le dan 10 intentos para adivinar un número entre 1 y 100. Después de cada intento, se le dirá si es mayor o menor a su número."

#~ msgid "The numberguess example is comprised of a number of Web Beans, configuration files, and Facelet JSF pages, packaged as a war. Let's start with the configuration files."
#~ msgstr "El ejemplo de numberguess consta de una cantidad de Web Beans, archivos de configuración y páginas Facelet JSF, empaquetadas como WAR. Empecemos con los archivos de configuración."

#~ msgid "All the configuration files for this example are located in <literal>WEB-INF/</literal>, which is stored in <literal>WebContent</literal> in the source tree. First, we have <literal>faces-config.xml</literal>, in which we tell JSF to use Facelets:"
#~ msgstr "Todos los archivos de configuración para este ejemplo están localizados en <literal>WEB-INF/</literal>, el cual está almacenado en <literal>WebContent</literal> en el árbol fuente. Primero, tenemos <literal>faces-config.xml</literal>, en donde le pedimos a JSF que utilice Facelets:"

#~ msgid ""
#~ "<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
#~ "<faces-config version=\"1.2\"\n"
#~ "              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
#~ "    \n"
#~ "    <application>\n"
#~ "        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
#~ "    </application>\n"
#~ "\n"
#~ "</faces-config>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version='1.0' encoding='UTF-8'?>\n"
#~ "<faces-config version=\"1.2\"\n"
#~ "              xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "              xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd\">\n"
#~ "    \n"
#~ "    <application>\n"
#~ "        <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
#~ "    </application>\n"
#~ "\n"
#~ "</faces-config>]]>"

#~ msgid "There is an empty <literal>web-beans.xml</literal> file, which marks this application as a Web Beans application."
#~ msgstr "Hay un archivo <literal>web-beans.xml</literal> vacío, el cual marca esta aplicación como una aplicación de Web Beans."

#~ msgid "Finally there is <literal>web.xml</literal>:"
#~ msgstr "Por último, está <literal>web.xml</literal>:"

#, fuzzy
#~ msgid ""
#~ "<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> <area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default.suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "\n"
#~ "<web-app version=\"2.5\"\n"
#~ "    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n"
#~ "   \n"
#~ "   <display-name>Web Beans Numbergues example</display-name>\n"
#~ "\n"
#~ "   <!-- JSF -->\n"
#~ "\n"
#~ "   <servlet>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
#~ "      <load-on-startup>1</load-on-startup>\n"
#~ "   </servlet>\n"
#~ "\n"
#~ "   <servlet-mapping>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <url-pattern>*.jsf</url-pattern>\n"
#~ "   </servlet-mapping>\n"
#~ "   \n"
#~ "   <context-param>\n"
#~ "      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
#~ "      <param-value>.xhtml</param-value>\n"
#~ "   </context-param>\n"
#~ "\n"
#~ "   <session-config>\n"
#~ "      <session-timeout>10</session-timeout>\n"
#~ "   </session-config>\n"
#~ "\n"
#~ "</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces.servlet\"> <para> Enable and load the JSF servlet </para> </callout> <callout arearefs=\"faces.servlet.mapping\"> <para> Configure requests to <literal>.jsf</literal> pages to be handled by JSF </para> </callout> <callout arearefs=\"faces.default.suffix\"> <para> Tell JSF that we will be giving our source files (facelets) an extension of <literal>.xhtml</literal> </para> </callout> <callout arearefs=\"session.timeout\"> <para> Configure a session timeout of 10 minutes </para> </callout> </calloutlist> </programlistingco> <note> <para> Whilst this demo is a JSF demo, you can use Web Beans with any Servlet based web framework. </para> </note> <para> Let's take a look at the Facelet view: </para> <programlistingco> <areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages2\" coords=\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords=\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords=\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"
#~ "<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
#~ "    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
#~ "    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
#~ "    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
#~ "    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
#~ "\n"
#~ "  <ui:composition template=\"template.xhtml\">\n"
#~ "    <ui:define name=\"content\">\n"
#~ "       <h1>Guess a number...</h1>\n"
#~ "       <h:form id=\"NumberGuessMain\">\n"
#~ "          <div style=\"color: red\">\n"
#~ "             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
#~ "             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game.number gt game.guess and game.guess ne 0}\"/>\n"
#~ "             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game.number lt game.guess and game.guess ne 0}\"/>\n"
#~ "          </div>\n"
#~ "   \n"
#~ "          <div>\n"
#~ "             I'm thinking of a number between #{game.smallest} and #{game.biggest}.\n"
#~ "             You have #{game.remainingGuesses} guesses.\n"
#~ "          </div>\n"
#~ "     \n"
#~ "          <div>\n"
#~ "             Your guess: \n"
#~ "             <h:inputText id=\"inputGuess\" \n"
#~ "                          value=\"#{game.guess}\" \n"
#~ "                          required=\"true\" \n"
#~ "                          size=\"3\" \n"
#~ "                          disabled=\"#{game.number eq game.guess}\">\n"
#~ "                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
#~ "                                     minimum=\"#{game.smallest}\"/>\n"
#~ "             </h:inputText>\n"
#~ "            <h:commandButton id=\"GuessButton\"  \n"
#~ "                             value=\"Guess\" \n"
#~ "                             action=\"#{game.check}\" \n"
#~ "                             disabled=\"#{game.number eq game.guess}\"/>\n"
#~ "          </div>\n"
#~ "          <div>\n"
#~ "            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#{game.reset}\" immediate=\"true\" />\n"
#~ "          </div>\n"
#~ "       </h:form>\n"
#~ "    </ui:define>\n"
#~ "  </ui:composition>\n"
#~ "</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> <para> Facelets is a templating language for JSF, here we are wrapping our page in a template which defines the header. </para> </callout> <callout arearefs=\"messages2\"> <para> There are a number of messages which can be sent to the user, \"Higher!\", \"Lower!\" and \"Correct!\" </para> </callout> <callout arearefs=\"instructions\"> <para> As the user guesses, the range of numbers they can guess gets smaller - this sentance changes to make sure they know what range to guess in. </para> </callout> <callout arearefs=\"guess\"> <para> This input field is bound to a Web Bean, using the value expression. </para> </callout> <callout arearefs=\"validator\"> <para> A range validator is used to make sure the user doesn't accidentally input a number outside of the range in which they can guess - if the validator wasn't here, the user might use up a guess on an out of range number. </para> </callout> <callout arearefs=\"submit\"> <para> And, of course, there must be a way for the user to send their guess to the server. Here we bind to an action method on the Web Bean. </para> </callout> </calloutlist> </programlistingco>"
#~ msgstr ""
#~ "<programlistingco> <areaspec> <area id=\"faces.servlet\" coords=\"12\"/> <area id=\"faces.servlet.mapping\" coords=\"18\"/> <area id=\"faces.default.suffix\" coords=\"23\"/> <area id=\"session.timeout\" coords=\"28\"/> <area id=\"webbeans.listener\" coords=\"32\"/> </areaspec> <programlisting><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "\n"
#~ "<web-app version=\"2.5\"\n"
#~ "    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
#~ "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n"
#~ "   \n"
#~ "   <display-name>ejemplo de Web Beans Numberguess</display-name>\n"
#~ "\n"
#~ "   <!-- JSF -->\n"
#~ "\n"
#~ "   <servlet>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
#~ "      <load-on-startup>1</load-on-startup>\n"
#~ "   </servlet>\n"
#~ "\n"
#~ "   <servlet-mapping>\n"
#~ "      <servlet-name>Faces Servlet</servlet-name>\n"
#~ "      <url-pattern>*.jsf</url-pattern>\n"
#~ "   </servlet-mapping>\n"
#~ "   \n"
#~ "   <context-param>\n"
#~ "      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
#~ "      <param-value>.xhtml</param-value>\n"
#~ "   </context-param>\n"
#~ "\n"
#~ "   <session-config>\n"
#~ "      <session-timeout>10</session-timeout>\n"
#~ "   </session-config>\n"
#~ "\n"
#~ "</web-app>]]></programlisting> <calloutlist> <callout arearefs=\"faces.servlet\"> <para> Habilitar y cargar el servlet de JSF </para> </callout> <callout arearefs=\"faces.servlet.mapping\"> <para> Configurar peticiones <literal>.jsf</literal> para páginas que van a ser manejadas por JSF </para> </callout> <callout arearefs=\"faces.default.suffix\"> <para> Decir a JSF que le estaremos dando a nuestros archivos fuente (facelets) una extensión de <literal>.jsf</literal> </para> </callout> <callout arearefs=\"session.timeout\"> <para> Configurar una pausa de 10 minutos </para> </callout> </calloutlist> </programlistingco> <note> <para> Aunque este demo es un demo de JSF, puede utilizar la IR de Web Beans con cualquier marco de la red basado en Servlet. </para> </note> <para> Observemos una vista de Facelet: </para> <programlistingco> <areaspec> <area id=\"template\" coords=\"8\"/> <area id=\"messages\" coords=\"12\"/> <area id=\"instructions\" coords=\"19\"/> <area id=\"guess\" coords=\"25\"/> <area id=\"validator\" coords=\"30\"/> <area id=\"submit\" coords=\"33\"/> </areaspec> <programlisting><![CDATA[<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n"
#~ "<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
#~ "    xmlns:ui=\"http://java.sun.com/jsf/facelets\"\n"
#~ "    xmlns:h=\"http://java.sun.com/jsf/html\"\n"
#~ "    xmlns:f=\"http://java.sun.com/jsf/core\"\n"
#~ "    xmlns:s=\"http://jboss.com/products/seam/taglib\">\n"
#~ "\n"
#~ "  <ui:composition template=\"template.xhtml\">\n"
#~ "    <ui:define name=\"content\">\n"
#~ "       <h1>Adivine un número...</h1>\n"
#~ "       <h:form id=\"NumberGuessMain\">\n"
#~ "          <div style=\"color: red\">\n"
#~ "             <h:messages id=\"messages\" globalOnly=\"false\"/>\n"
#~ "             <h:outputText id=\"Higher\" value=\"Higher!\" rendered=\"#{game.number gt game.guess and game.guess ne 0}\"/>\n"
#~ "             <h:outputText id=\"Lower\" value=\"Lower!\" rendered=\"#{game.number lt game.guess and game.guess ne 0}\"/>\n"
#~ "          </div>\n"
#~ "   \n"
#~ "          <div>\n"
#~ "             Estoy pensando un número entre #{game.smallest} y #{game.biggest}.\n"
#~ "             Le quedan #{game.remainingGuesses} de intentos.\n"
#~ "          </div>\n"
#~ "     \n"
#~ "          <div>\n"
#~ "             Su número: \n"
#~ "             <h:inputText id=\"inputGuess\" \n"
#~ "                          value=\"#{game.guess}\" \n"
#~ "                          required=\"true\" \n"
#~ "                          size=\"3\" \n"
#~ "                          disabled=\"#{game.number eq game.guess}\">\n"
#~ "                <f:validateLongRange maximum=\"#{game.biggest}\" \n"
#~ "                                     minimum=\"#{game.smallest}\"/>\n"
#~ "             </h:inputText>\n"
#~ "            <h:commandButton id=\"GuessButton\"  \n"
#~ "                             value=\"Guess\" \n"
#~ "                             action=\"#{game.check}\" \n"
#~ "                             disabled=\"#{game.number eq game.guess}\"/>\n"
#~ "          </div>\n"
#~ "          <div>\n"
#~ "            <h:commandButton id=\"RestartButton\" value=\"Reset\" action=\"#{game.reset}\" immediate=\"true\" />\n"
#~ "          </div>\n"
#~ "       </h:form>\n"
#~ "    </ui:define>\n"
#~ "  </ui:composition>\n"
#~ "</html>]]></programlisting> <calloutlist> <callout arearefs=\"template\"> <para> Facelets es un lenguaje de plantilla para JSF, aquí se delimita la página en una plantilla que define el encabezado. </para> </callout> <callout arearefs=\"messages\"> <para> Hay una cantidad de mensajes que pueden ser enviados al usuario, \"Mayor!\", \"Menor!\" y \"Correcto!\" </para> </callout> <callout arearefs=\"instructions\"> <para> Mientras el usuario adivina, el rango de números que puede adivinar se vuelve cada vez más pequeño-esta oración cambia para estar seguros de que el usuario sabe en qué rango debe adivinar. </para> </callout> <callout arearefs=\"guess\"> <para> Este campo de entrada está vinculado a un Web Bean, utilizando la expresión de valor. </para> </callout> <callout arearefs=\"validator\"> <para> Un rango de validador se utiliza para garantizar que el usuario por accidente no entre un número fuera del rango en el que se puede adivinar - si el validador no estuviera aquí, el usuario podría tratar de adivinar fuera del rango. </para> </callout> <callout arearefs=\"submit\"> <para> Y, obviamente, debe haber una forma para que el usuario pueda enviar el número al servidor. Aquí nos vincularnos a un método de acción en el Web Bean. </para> </callout> </calloutlist> </programlistingco>"

#~ msgid "The example exists of 4 classes, the first two of which are binding types. First, there is the <literal>@Random</literal> binding type, used for injecting a random number:"
#~ msgstr "El ejemplo existe de 4 clases, las primeras dos son tipos de enlace. Primero, hay un tipo de enlace <literal>@Random</literal>, utilizado para inyectar un número aleatorio:"

#~ msgid ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface Random {}]]>"
#~ msgstr ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface Random {}]]>"

#~ msgid "There is also the <literal>@MaxNumber</literal> binding type, used for injecting the maximum number that can be injected:"
#~ msgstr "También hay un tipo de enlace <literal>@MaxNumber</literal>, utilizado para inyectar el número máximo posible:"

#~ msgid ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface MaxNumber {}\n"
#~ "]]>"
#~ msgstr ""
#~ "<![CDATA[@Target( { TYPE, METHOD, PARAMETER, FIELD })\n"
#~ "@Retention(RUNTIME)\n"
#~ "@Documented\n"
#~ "@BindingType\n"
#~ "public @interface MaxNumber {}\n"
#~ "]]>"

#~ msgid "The <literal>Generator</literal> class is responsible for creating the random number, via a producer method. It also exposes the maximum possible number via a producer method:"
#~ msgstr "La clase <literal>Generator</literal> es responsable de crear el número aleatorio, a través de un método de productor. También expone el número máximo posible a través del método de productor:"

#~ msgid ""
#~ "<![CDATA[@ApplicationScoped\n"
#~ "public class Generator {\n"
#~ "   \n"
#~ "   private java.util.Random random = new java.util.Random( System.currentTimeMillis() );\n"
#~ "   \n"
#~ "   private int maxNumber = 100;\n"
#~ "   \n"
#~ "   java.util.Random getRandom()\n"
#~ "   {\n"
#~ "      return random;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @Random int next() { \n"
#~ "      return getRandom().nextInt(maxNumber); \n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @MaxNumber int getMaxNumber()\n"
#~ "   {\n"
#~ "      return maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[@ApplicationScoped\n"
#~ "public class Generator {\n"
#~ "   \n"
#~ "   private java.util.Random random = new java.util.Random( System.currentTimeMillis() );\n"
#~ "   \n"
#~ "   private int maxNumber = 100;\n"
#~ "   \n"
#~ "   java.util.Random getRandom()\n"
#~ "   {\n"
#~ "      return random;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @Random int next() { \n"
#~ "      return getRandom().nextInt(maxNumber); \n"
#~ "   }\n"
#~ "   \n"
#~ "   @Produces @MaxNumber int getMaxNumber()\n"
#~ "   {\n"
#~ "      return maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "}]]>"

#~ msgid "You'll notice that the <literal>Generator</literal> is application scoped; therefore we don't get a different random each time."
#~ msgstr "Notará que el <literal>Generador</literal> es una aplicación en ámbito por lo tanto no obtenemos un número aleatorio diferente cada vez."

#~ msgid "The final Web Bean in the application is the session scoped <literal>Game</literal>."
#~ msgstr "El Web Bean final en la aplicación es la sesión en ámbito <literal>Juego</literal>."

#~ msgid "You'll note that we've used the <literal>@Named</literal> annotation, so that we can use the bean through EL in the JSF page. Finally, we've used constructor injection to initialize the game with a random number. And of course, we need to tell the player when they've won, so we give feedback with a <literal>FacesMessage</literal>."
#~ msgstr "Notará que hemos utilizado la anotación <literal>@Named</literal>, para poder utilizar el bean a través de EL en la página JSF. Por último, hemos utilizado la inyección de constructor para inicializar el juego con un número aleatorio. Y, claro está, necesitamos decirle al jugador cuando haya ganado, por lo tanto le damos retroalimentación con <literal>FacesMessage</literal>."

#~ msgid ""
#~ "<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
#~ "\n"
#~ "\n"
#~ "import javax.annotation.PostConstruct;\n"
#~ "import javax.faces.application.FacesMessage;\n"
#~ "import javax.faces.context.FacesContext;\n"
#~ "import javax.webbeans.AnnotationLiteral;\n"
#~ "import javax.webbeans.Current;\n"
#~ "import javax.webbeans.Initializer;\n"
#~ "import javax.webbeans.Named;\n"
#~ "import javax.webbeans.SessionScoped;\n"
#~ "import javax.webbeans.manager.Manager;\n"
#~ "\n"
#~ "@Named\n"
#~ "@SessionScoped\n"
#~ "public class Game\n"
#~ "{\n"
#~ "   private int number;\n"
#~ "   \n"
#~ "   private int guess;\n"
#~ "   private int smallest;\n"
#~ "   private int biggest;\n"
#~ "   private int remainingGuesses;\n"
#~ "   \n"
#~ "   @Current Manager manager;\n"
#~ "   \n"
#~ "   public Game()\n"
#~ "   {\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   Game(@MaxNumber int maxNumber)\n"
#~ "   {      \n"
#~ "      this.biggest = maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "   public int getNumber()\n"
#~ "   {\n"
#~ "      return number;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getGuess()\n"
#~ "   {\n"
#~ "      return guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public void setGuess(int guess)\n"
#~ "   {\n"
#~ "      this.guess = guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getSmallest()\n"
#~ "   {\n"
#~ "      return smallest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getBiggest()\n"
#~ "   {\n"
#~ "      return biggest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getRemainingGuesses()\n"
#~ "   {\n"
#~ "      return remainingGuesses;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public String check()\n"
#~ "   {\n"
#~ "      if (guess>number)\n"
#~ "      {\n"
#~ "         biggest = guess - 1;\n"
#~ "      }\n"
#~ "      if (guess<number)\n"
#~ "      {\n"
#~ "         smallest = guess + 1;\n"
#~ "      }\n"
#~ "      if (guess == number)\n"
#~ "      {\n"
#~ "         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Correct!\"));\n"
#~ "      }\n"
#~ "      remainingGuesses--;\n"
#~ "      return null;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @PostConstruct\n"
#~ "   public void reset()\n"
#~ "   {\n"
#~ "      this.smallest = 0;\n"
#~ "      this.guess = 0;\n"
#~ "      this.remainingGuesses = 10;\n"
#~ "      this.number = manager.getInstanceByType(Integer.class, new AnnotationLiteral<Random>(){});\n"
#~ "   }\n"
#~ "   \n"
#~ "}]]>"
#~ msgstr ""
#~ "<![CDATA[package org.jboss.webbeans.examples.numberguess;\n"
#~ "\n"
#~ "\n"
#~ "import javax.annotation.PostConstruct;\n"
#~ "import javax.faces.application.FacesMessage;\n"
#~ "import javax.faces.context.FacesContext;\n"
#~ "import javax.webbeans.AnnotationLiteral;\n"
#~ "import javax.webbeans.Current;\n"
#~ "import javax.webbeans.Initializer;\n"
#~ "import javax.webbeans.Named;\n"
#~ "import javax.webbeans.SessionScoped;\n"
#~ "import javax.webbeans.manager.Manager;\n"
#~ "\n"
#~ "@Named\n"
#~ "@SessionScoped\n"
#~ "public class Game\n"
#~ "{\n"
#~ "   private int number;\n"
#~ "   \n"
#~ "   private int guess;\n"
#~ "   private int smallest;\n"
#~ "   private int biggest;\n"
#~ "   private int remainingGuesses;\n"
#~ "   \n"
#~ "   @Current Manager manager;\n"
#~ "   \n"
#~ "   public Game()\n"
#~ "   {\n"
#~ "   }\n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   Game(@MaxNumber int maxNumber)\n"
#~ "   {      \n"
#~ "      this.biggest = maxNumber;\n"
#~ "   }\n"
#~ "\n"
#~ "   public int getNumber()\n"
#~ "   {\n"
#~ "      return number;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getGuess()\n"
#~ "   {\n"
#~ "      return guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public void setGuess(int guess)\n"
#~ "   {\n"
#~ "      this.guess = guess;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getSmallest()\n"
#~ "   {\n"
#~ "      return smallest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getBiggest()\n"
#~ "   {\n"
#~ "      return biggest;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public int getRemainingGuesses()\n"
#~ "   {\n"
#~ "      return remainingGuesses;\n"
#~ "   }\n"
#~ "   \n"
#~ "   public String check()\n"
#~ "   {\n"
#~ "      if (guess>number)\n"
#~ "      {\n"
#~ "         biggest = guess - 1;\n"
#~ "      }\n"
#~ "      if (guess<number)\n"
#~ "      {\n"
#~ "         smallest = guess + 1;\n"
#~ "      }\n"
#~ "      if (guess == number)\n"
#~ "      {\n"
#~ "         FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(\"Correct!\"));\n"
#~ "      }\n"
#~ "      remainingGuesses--;\n"
#~ "      return null;\n"
#~ "   }\n"
#~ "   \n"
#~ "   @PostConstruct\n"
#~ "   public void reset()\n"
#~ "   {\n"
#~ "      this.smallest = 0;\n"
#~ "      this.guess = 0;\n"
#~ "      this.remainingGuesses = 10;\n"
#~ "      this.number = manager.getInstanceByType(Integer.class, new AnnotationLiteral<Random>(){});\n"
#~ "   }\n"
#~ "   \n"
#~ "}]]>"

#, fuzzy
#~ msgid "The numberguess example in Tomcat"
#~ msgstr "El ejemplo numberguess"

#, fuzzy
#~ msgid "The numberguess example for Apache Wicket"
#~ msgstr "El ejemplo numberguess"

#, fuzzy
#~ msgid "The numberguess example for Java SE with Swing"
#~ msgstr "El ejemplo numberguess"

#, fuzzy
#~ msgid "To run this example:"
#~ msgstr "Ejemplo de traductor"

#, fuzzy
#~ msgid "There is an empty <literal>beans.xml</literal> file in the root package (<literal>src/main/resources/beans.xml</literal>), which marks this application as a Web Beans application."
#~ msgstr "Hay un archivo <literal>web-beans.xml</literal> vacío, el cual marca esta aplicación como una aplicación de Web Beans."

#~ msgid "The translator example"
#~ msgstr "Ejemplo de traductor"

#~ msgid "The translator example will take any sentences you enter, and translate them to Latin."
#~ msgstr "El ejemplo de traductor tomará las oraciones que entre y las traducirá en Latín."

#~ msgid "The translator example is built as an ear, and contains EJBs. As a result, it's structure is more complex than the numberguess example."
#~ msgstr "El ejemplo de traductor está incorporado como un EAR, y contiene EJB. Como resultado, su estructura es más compleja que el ejemplo de Numberguess."

#~ msgid "EJB 3.1 and Jave EE 6 allow you to package EJBs in a war, which will make this structure much simpler!"
#~ msgstr "EJB 3.1 y Java EE 6 le permiten empaquetar EJB en un WAR, lo cual hará la estructura mucho más simple!"

#~ msgid "First, let's take a look at the ear aggregator, which is located in <literal>webbeans-translator-ear</literal> module. Maven automatically generates the <literal>application.xml</literal> for us:"
#~ msgstr "Primero, demos una mirada al agregador EAR, el cual está localizado en el módulo <literal>webbeans-translator-ear</literal>. Maven genera automáticamente la <literal>application.xml</literal>:"

#~ msgid ""
#~ "<![CDATA[<plugin>\n"
#~ "   <groupId>org.apache.maven.plugins</groupId>\n"
#~ "   <artifactId>maven-ear-plugin</artifactId>\n"
#~ "   <configuration>\n"
#~ "      <modules>\n"
#~ "         <webModule>\n"
#~ "            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
#~ "            <artifactId>webbeans-translator-war</artifactId>\n"
#~ "            <contextRoot>/webbeans-translator</contextRoot>\n"
#~ "         </webModule>\n"
#~ "      </modules>\n"
#~ "   </configuration>\n"
#~ "</plugin>]]>"
#~ msgstr ""
#~ "<![CDATA[<plugin>\n"
#~ "   <groupId>org.apache.maven.plugins</groupId>\n"
#~ "   <artifactId>maven-ear-plugin</artifactId>\n"
#~ "   <configuration>\n"
#~ "      <modules>\n"
#~ "         <webModule>\n"
#~ "            <groupId>org.jboss.webbeans.examples.translator</groupId>\n"
#~ "            <artifactId>webbeans-translator-war</artifactId>\n"
#~ "            <contextRoot>/webbeans-translator</contextRoot>\n"
#~ "         </webModule>\n"
#~ "      </modules>\n"
#~ "   </configuration>\n"
#~ "</plugin>]]>"

#~ msgid "If you aren't using Maven to generate these files, you would need <literal>META-INF/application.xml</literal>:"
#~ msgstr "Si no está utilizando Maven para generar estos archivos, usted necesitaría <literal>META-INF/application.xml</literal>:"

#~ msgid ""
#~ "<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
#~ "             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
#~ "             version=\"5\">\n"
#~ "  <display-name>webbeans-translator-ear</display-name>\n"
#~ "  <description>Ear Example for the reference implementation of JSR 299: Web Beans</description>\n"
#~ "  \n"
#~ "  <module>\n"
#~ "    <web>\n"
#~ "      <web-uri>webbeans-translator.war</web-uri>\n"
#~ "      <context-root>/webbeans-translator</context-root>\n"
#~ "    </web>\n"
#~ "  </module>\n"
#~ "  <module>\n"
#~ "    <ejb>webbeans-translator.jar</ejb>\n"
#~ "  </module>\n"
#~ "</application>]]>"
#~ msgstr ""
#~ "<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
#~ "<application xmlns=\"http://java.sun.com/xml/ns/javaee\" \n"
#~ "             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
#~ "             xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/application_5.xsd\"\n"
#~ "             version=\"5\">\n"
#~ "  <display-name>webbeans-translator-ear</display-name>\n"
#~ "  <description>Ejemplo Ear para la implementación de referencia de JSR 299: Web Beans</description>\n"
#~ "  \n"
#~ "  <module>\n"
#~ "    <web>\n"
#~ "      <web-uri>webbeans-translator.war</web-uri>\n"
#~ "      <context-root>/webbeans-translator</context-root>\n"
#~ "    </web>\n"
#~ "  </module>\n"
#~ "  <module>\n"
#~ "    <ejb>webbeans-translator.jar</ejb>\n"
#~ "  </module>\n"
#~ "</application>]]>"

#, fuzzy
#~ msgid "Next, lets look at the war. Just as in the numberguess example, we have a <literal>faces-config.xml</literal> (to enable Facelets) and a <literal>web.xml</literal> (to enable JSF) in <literal>WebContent/WEB-INF</literal>."
#~ msgstr "Ahora veamos al WAR. Al igual que el ejemplo de Numberguess, tenemos un <literal>faces-config.xml</literal> (para Facelets habilitadas) y un <literal>web.xml</literal> (para habilitar a JSF) en <literal>WebContent/WEB-INF</literal>."

#~ msgid "More intersting is the facelet used to translate text. Just as in the numberguess example we have a template, which surrounds the form (ommitted here for brevity):"
#~ msgstr "Más interesante aún es el facelet utilizado para traducir texto. Al igual que en el ejemplo de Numberguess tenemos una plantilla, la cual rodea el formulario (omitido aquí por razones de brevedad):"

#~ msgid ""
#~ "<![CDATA[<h:form id=\"NumberGuessMain\">\n"
#~ "            \n"
#~ "   <table>\n"
#~ "      <tr align=\"center\" style=\"font-weight: bold\" >\n"
#~ "         <td>\n"
#~ "            Your text\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            Translation\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "      <tr>\n"
#~ "         <td>\n"
#~ "            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" required=\"true\" rows=\"5\" cols=\"80\" />\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            <h:outputText value=\"#{translator.translatedText}\" />\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "   </table>\n"
#~ "   <div>\n"
#~ "      <h:commandButton id=\"button\" value=\"Translate\" action=\"#{translator.translate}\"/>\n"
#~ "   </div>\n"
#~ "   \n"
#~ "</h:form>]]>"
#~ msgstr ""
#~ "<![CDATA[<h:form id=\"NumberGuessMain\">\n"
#~ "            \n"
#~ "   <table>\n"
#~ "      <tr align=\"center\" style=\"font-weight: bold\" >\n"
#~ "         <td>\n"
#~ "            Your text\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            Translation\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "      <tr>\n"
#~ "         <td>\n"
#~ "            <h:inputTextarea id=\"text\" value=\"#{translator.text}\" required=\"true\" rows=\"5\" cols=\"80\" />\n"
#~ "         </td>\n"
#~ "         <td>\n"
#~ "            <h:outputText value=\"#{translator.translatedText}\" />\n"
#~ "         </td>\n"
#~ "      </tr>\n"
#~ "   </table>\n"
#~ "   <div>\n"
#~ "      <h:commandButton id=\"button\" value=\"Translate\" action=\"#{translator.translate}\"/>\n"
#~ "   </div>\n"
#~ "   \n"
#~ "</h:form>]]>"

#~ msgid "The user can enter some text in the lefthand textarea, and hit the translate button to see the result to the right."
#~ msgstr "El usuario puede entrar texto en el área de texto a mano izquierda y pulsar el botón de traducir para ver el resultado a la derecha."

#~ msgid "Finally, let's look at the ejb module, <literal>webbeans-translator-ejb</literal>. In <literal>src/main/resources/META-INF</literal> there is just an empty <literal>web-beans.xml</literal>, used to mark the archive as containing Web Beans."
#~ msgstr "Por último, veamos el módulo EJB, <literal>webbeans-translator-ejb</literal>. En <literal>src/main/resources/META-INF</literal> sólo hay un <literal>web-beans.xml</literal> vacío, utilizado para marcar el archivo como si contuviera Web Beans."

#~ msgid "We've saved the most interesting bit to last, the code! The project has two simple beans, <literal>SentenceParser</literal> and <literal>TextTranslator</literal> and two enterprise beans, <literal>TranslatorControllerBean</literal> and <literal>SentenceTranslator</literal>. You should be getting quite familiar with what a Web Bean looks like by now, so we'll just highlight the most interesting bits here."
#~ msgstr "Hemos guardado la parte más interesante para el final, ¡el código! El proyecto tiene dos beans sencillos, <literal>SentenceParser</literal> y <literal>TextTranslator</literal> y dos beans empresariales, <literal>TranslatorControllerBean</literal> y <literal>SentenceTranslator</literal>. Por ahora, debe comenzar a familiarizarse con el aspecto de Web Bean, por lo tanto sólo destacaremos aquí las partes más interesantes."

#~ msgid "Both <literal>SentenceParser</literal> and <literal>TextTranslator</literal> are dependent beans, and <literal>TextTranslator</literal> uses constructor initialization:"
#~ msgstr "Tanto <literal>SentenceParser</literal> como <literal>TextTranslator</literal> son beans dependientes, y <literal>TextTranslator</literal> utiliza inicialización de constructor:"

#~ msgid ""
#~ "<![CDATA[public class TextTranslator { \n"
#~ "   private SentenceParser sentenceParser; \n"
#~ "   private Translator sentenceTranslator; \n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   TextTranslator(SentenceParser sentenceParser, Translator sentenceTranslator) \n"
#~ "   { \n"
#~ "      this.sentenceParser = sentenceParser; \n"
#~ "      this.sentenceTranslator = sentenceTranslator;]]>"
#~ msgstr ""
#~ "<![CDATA[public class TextTranslator { \n"
#~ "   private SentenceParser sentenceParser; \n"
#~ "   private Translator sentenceTranslator; \n"
#~ "   \n"
#~ "   @Initializer\n"
#~ "   TextTranslator(SentenceParser sentenceParser, Translator sentenceTranslator) \n"
#~ "   { \n"
#~ "      this.sentenceParser = sentenceParser; \n"
#~ "      this.sentenceTranslator = sentenceTranslator;]]>"

#~ msgid "<literal>TextTranslator</literal> is a stateless bean (with a local business interface), where the magic happens - of course, we couldn't develop a full translator, but we gave it a good go!"
#~ msgstr "<literal>TextTranslator</literal> es un bean con estado (con una interfaz local de negocios), donde lo mágico sucede - claro está, que no desarrollaramos un traductor completo, ¡pero le dimos una buena luz!"

#~ msgid "Finally, there is UI orientated controller, that collects the text from the user, and dispatches it to the translator. This is a request scoped, named, stateful session bean, which injects the translator."
#~ msgstr "Por último, hay un controlador orientado a UI que recoge el texto desde el usuario y lo envía al traductor. Esta es una petición en ámbito, llamada bean con estado de sesión que inyecta el traductor."

#~ msgid ""
#~ "<![CDATA[@Stateful\n"
#~ "@RequestScoped\n"
#~ "@Named(\"translator\")\n"
#~ "public class TranslatorControllerBean implements TranslatorController\n"
#~ "{\n"
#~ "   \n"
#~ "   @Current TextTranslator translator;]]>"
#~ msgstr ""
#~ "<![CDATA[@Stateful\n"
#~ "@RequestScoped\n"
#~ "@Named(\"translator\")\n"
#~ "public class TranslatorControllerBean implements TranslatorController\n"
#~ "{\n"
#~ "   \n"
#~ "   @Current TextTranslator translator;]]>"

#~ msgid "The bean also has getters and setters for all the fields on the page."
#~ msgstr "El bean también tiene capturadores y configuradores para todos los campos en la página."

#~ msgid "As this is a stateful session bean, we have to have a remove method:"
#~ msgstr "Como este es un bean de sesión con estado, tenemos que tener un método de eliminación:"

#~ msgid ""
#~ "<![CDATA[   @Remove\n"
#~ "   public void remove()\n"
#~ "   {\n"
#~ "      \n"
#~ "   }]]>"
#~ msgstr ""
#~ "<![CDATA[   @Remove\n"
#~ "   public void remove()\n"
#~ "   {\n"
#~ "      \n"
#~ "   }]]>"

#~ msgid "The Web Beans manager will call the remove method for you when the bean is destroyed; in this case at the end of the request."
#~ msgstr "El administrador de Web Beans llamará al método de eliminación cuando el bean sea destruido, en este caso al final de la petición."

#, fuzzy
#~ msgid "That concludes our short tour of the Web Beans examples. For more on Web Beans , or to help out, please visit <ulink url=\"http://www.seamframework.org/WebBeans/Development\">http://www.seamframework.org/WebBeans/Development</ulink>."
#~ msgstr "Aquí termina nuestro corto recorrido por los ejemplos de la IR de Web Beans. Para mayor información acerca de la IR o ayuda, por favor consulte <ulink url=\"http://www.seamframework.org/WebBeans/Development\">http://www.seamframework.org/WebBeans/Development</ulink>."

#~ msgid "We need help in all areas - bug fixing, writing new features, writing examples and translating this reference guide."
#~ msgstr "Necesitamos ayuda en todas las áreas - corrección de errores, escritura de nuevas funciones, escritura de ejemplos y traducción de esta guía de referencia."

#, fuzzy
#~ msgid "A new deployer, <literal>webbeans.deployer</literal> is added to JBoss AS. This adds supports for Web Bean archives to JBoss AS, and allows the Web Beans RI to query the EJB3 container and discover which EJBs are installed in your application."
#~ msgstr "Actualmente, se necesitan dos actualizaciones. Primero, se agrega el nuevo desarrollador, <literal>webbeans.deployer</literal>. Así se agrega soporte para los archivos de Web Bean a JBoss AS, y permite a la IR de Web Beans solicitar el contenedor EJB3 y descubrir cuáles EJB están instalados en su aplicación. En segundo lugar se necesita una actualización de JBoss EJB3."

#~ msgid "As Web Beans is a new piece of software, you need to update JBoss AS to run the Web Beans RI. Future versions of JBoss AS will include these updates, and this step won't be necessary."
#~ msgstr "Como Web Beans es una nueva parte de software, necesitaremos actualizar JBoss AS para ejecutar la IR de Web Beans. Versiones futuras de JBOSS AS incluirán dichas actualizaciones, y este paso no será necesario."
