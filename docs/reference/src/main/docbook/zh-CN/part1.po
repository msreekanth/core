# Language zh-CN translations for master.xml package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: master.xml\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2010-12-14T13:35:17\n"
"PO-Revision-Date: 2008-12-22 10:45+0800\n"
"Last-Translator: Sean Wu <alartin@gmail.com>\n"
"Language-Team: none\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#, fuzzy, no-c-format
msgid "The <ulink url=\"http://jcp.org/en/jsr/detail?id=299\">JSR-299</ulink> specification (CDI) defines a set of complementary services that help improve the structure of application code. CDI layers an enhanced lifecycle and interaction model over existing Java component types, including managed beans and Enterprise Java Beans. The CDI services provide:"
msgstr "The Web Beans (JSR-299)规范为Java EE环境定义了一套服务以便开发者能够更轻松地开发应用。Web Beans在现有的包括JavaBeans和企业JavaBeans在内的Java组件类型之上增强了生命周期和交互的模型层。作为传统的Java EE编程模型的补充，Web Beans服务提供了："

#. Tag: para
#, fuzzy, no-c-format
msgid "an improved lifecycle for stateful objects, bound to well-defined <emphasis>contexts</emphasis>,"
msgstr "一个为有状态组件而改良的并且绑定到定义明确的 <emphasis>上下文</emphasis>上的生命周期，"

#. Tag: para
#, no-c-format
msgid "a typesafe approach to <emphasis>dependency injection</emphasis>,"
msgstr "一个类型安全的<emphasis>依赖注入</emphasis>方法,"

#. Tag: para
#, fuzzy, no-c-format
msgid "object interaction via an <emphasis>event notification facility</emphasis>,"
msgstr "通过 <emphasis>事件通知</emphasis> 机制实现的交互，并且"

#. Tag: para
#, fuzzy, no-c-format
msgid "a better approach to binding <emphasis>interceptors</emphasis> to objects, along with a new kind of interceptor, called a <emphasis>decorator</emphasis>, that is more appropriate for use in solving business problems, and"
msgstr "一个更好的将<emphasis>拦截器</emphasis>绑定到组件上的方法，同时提供了一个名为<emphasis>装饰器(decorator)</emphasis>的新型拦截器，这种拦截器更加适合解决业务问题。"

#. Tag: para
#, no-c-format
msgid "an <emphasis>SPI</emphasis> for developing portable extensions to the container."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The CDI services are a core aspect of the Java EE platform and include full support for Java EE modularity and the Java EE component architecture. But the specification does not limit the use of CDI to the Java EE environment. In the Java SE environment, the services might be provided by a standalone CDI implementation like Weld (see <xref linkend=\"weld-se\" />), or even by a container that also implements the subset of EJB defined for embedded usage by the EJB 3.1 specification. CDI is especially useful in the context of web application development, but the problems it solves are general development concerns and it is therefore applicable to a wide variety of application."
msgstr ""

#. Tag: para
#, no-c-format
msgid "An object bound to a lifecycle context is called a bean. CDI includes built-in support for several different kinds of bean, including the following Java EE component types:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "managed beans, and"
msgstr ""

#. Tag: para
#, no-c-format
msgid "EJB session beans."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Both managed beans and EJB session beans may inject other beans. But some other objects, which are not themselves beans in the sense used here, may also have beans injected via CDI. In the Java EE platform, the following kinds of component may have beans injected:"
msgstr ""

#. Tag: para
#, no-c-format
msgid "message-driven beans,"
msgstr ""

#. Tag: para
#, no-c-format
msgid "interceptors,"
msgstr ""

#. Tag: para
#, no-c-format
msgid "servlets, servlet filters and servlet event listeners,"
msgstr ""

#. Tag: para
#, no-c-format
msgid "JAX-WS service endpoints and handlers, and"
msgstr ""

#. Tag: para
#, no-c-format
msgid "JSP tag handlers and tag library event listeners."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "CDI relieves the user of an unfamiliar API of the need to answer the following questions:"
msgstr "依赖注入和具备上下文的生命周期管理节省了开发者出于对接口的不熟悉而不得不处理下列问题所浪费时间："

#. Tag: para
#, fuzzy, no-c-format
msgid "What is the lifecycle of this object?"
msgstr "这个对象的生命周期是什么？"

#. Tag: para
#, fuzzy, no-c-format
msgid "How many simultaneous clients can it have?"
msgstr "它能够有多少个并发的客户端"

#. Tag: para
#, fuzzy, no-c-format
msgid "Is it multithreaded?"
msgstr "它是多线程的么？"

#. Tag: para
#, no-c-format
msgid "How do I get access to it from a client?"
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "Do I need to explicitly destroy it?"
msgstr "我需要显式地销毁它么？"

#. Tag: para
#, fuzzy, no-c-format
msgid "Where should I keep the reference to it when I&#39;m not currently using it?"
msgstr "当我不再直接使用它的时候，我需要将它的引用保存到哪里？"

#. Tag: para
#, fuzzy, no-c-format
msgid "How can I define an alternative implementation, so that the implementation can vary at deployment time?"
msgstr "我如何才能添加一个间接层，以便在部署的时候可以更换这个对象的不同实现？"

#. Tag: para
#, fuzzy, no-c-format
msgid "How should I go about sharing this object between other objects?"
msgstr "我应该如何在其他对象中共享这个对象？"

#. Tag: para
#, no-c-format
msgid "CDI is more than a framework. It&#39;s a whole, rich programming model. The <emphasis>theme</emphasis> of CDI is <emphasis>loose-coupling with strong typing</emphasis>. Let&#39;s study what that phrase means."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "A bean specifies only the type and semantics of other beans it depends upon. It need not be aware of the actual lifecycle, concrete implementation, threading model or other clients of any bean it interacts with. Even better, the concrete implementation, lifecycle and threading model of a bean may vary according to the deployment scenario, without affecting any client. This loose-coupling makes your code easier to maintain."
msgstr "一个Web Bean仅仅需要指定它所依赖的其他Web Bean的类型和语义。它不需要知道他所依赖的任何Web Bean的实际生命周期，具体的实现，线程模型或者这个Web Bean的其他客户端。更棒的是，它所依赖的Web Bean的具体实现和生命周期，线程模型可以根据部署场景而更改，却丝毫不影响任何客户端。"

#. Tag: para
#, fuzzy, no-c-format
msgid "Events, interceptors and decorators enhance the loose-coupling inherent in this model:"
msgstr "事件，拦截器和装饰器增强了这个模型固有的<emphasis>松耦合</emphasis>特性："

#. Tag: para
#, no-c-format
msgid "<emphasis>event notifications</emphasis> decouple event producers from event consumers,"
msgstr "<emphasis>事件通知</emphasis>将事件的消费者和事件的产生者解耦，"

#. Tag: para
#, no-c-format
msgid "<emphasis>interceptors</emphasis> decouple technical concerns from business logic, and"
msgstr "<emphasis>拦截器</emphasis>将技术关注点从业务逻辑中解耦，并且"

#. Tag: para
#, no-c-format
msgid "<emphasis>decorators</emphasis> allow business concerns to be compartmentalized."
msgstr "<emphasis>装饰器</emphasis>允许开发者划分业务关注点。"

#. Tag: para
#, fuzzy, no-c-format
msgid "What&#39;s even more powerful (and comforting) is that CDI provides all these facilities in a <emphasis>typesafe</emphasis> way. CDI never relies on string-based identifiers to determine how collaborating objects fit together. Instead, CDI uses the typing information that is already available in the Java object model, augmented using a new programming pattern, called <emphasis>qualifier annotations</emphasis>, to wire together beans, their dependencies, their interceptors and decorators, and their event consumers. Usage of XML descriptors is minimized to truly deployment-specific information."
msgstr "最重要的是，Web Beans以一种<emphasis>类型安全</emphasis>的方式提供所有的特性。Web Beans从来不使用基于字符串的标识符来决定交互的对象如何关联在一起。至于XML, 虽然它仍旧是一个选项，但也可以几乎不使用。取而代之，Web Bean使用Java对象模型的类型信息和一种新的<emphasis>绑定注释</emphasis>模式将Web Beans和它们的依赖以及拦截器，装饰器和事件消费者关联在一起。"

#. Tag: para
#, no-c-format
msgid "But CDI isn&#39;t a restrictive programming model. It doesn&#39;t tell you how you should to structure your application into layers, how you should handle persistence, or what web framework you have to use. You&#39;ll have to decide those kinds of things for yourself."
msgstr ""

#. Tag: para
#, fuzzy, no-c-format
msgid "CDI even provides a comprehensive SPI, allowing other kinds of object defined by future Java EE specifications or by third-party frameworks to be cleanly integrated with CDI, take advantage of the CDI services, and interact with any other kind of bean."
msgstr "Web Beans甚至提供了必要的整合点，以便未来的Java EE规范或者其他非标准的框架中的不同组件能够和Web Beans轻松整合，使用Web Beans服务以及和任何其他类型的Web Bean交互。"

#. Tag: para
#, fuzzy, no-c-format
msgid "CDI was influenced by a number of existing Java frameworks, including Seam, Guice and Spring. However, CDI has its own, very distinct, character: more typesafe than Seam, more stateful and less XML-centric than Spring, more web and enterprise-application capable than Guice. But it couldn&#39;t have been any of these without inspiration from the frameworks mentioned and <emphasis>lots</emphasis> of collaboration and hard work by the JSR-299 Expert Group (EG)."
msgstr "Web Beans受到了包括Seam, Guice和Spring在内的很多现有的Java框架的影响。然而，Web Beans具有自己鲜明的特性：在类型安全方面优于Seam，比Spring更加具备状态和使用更少的XML, 比Guice更加具备Web和企业应用的能力。"

#. Tag: para
#, no-c-format
msgid "Finally, CDI is a <ulink url=\"http://jcp.org\">Java Community Process</ulink> (JCP) standard. Java EE 6 requires that all compliant application servers provide support for JSR-299 (even in the web profile)."
msgstr ""

#~ msgid "where can I get one from?"
#~ msgstr "我能从哪里得到一个对象？"

#~ msgid "The Web Beans services are general and apply to the following types of components that exist in the Java EE environment:"
#~ msgstr "Web Beans服务是相当普遍的，可以应用在下列Java EE环境中的组件类型中："

#~ msgid "all JavaBeans,"
#~ msgstr "所有的JavaBeans,"

#~ msgid "all EJBs, and"
#~ msgstr "所有的EJB, 和"

#~ msgid "all Servlets."
#~ msgstr "所有的Servlet。"

#~ msgid "Most importantly, Web Beans is a JCP standard that integrates cleanly with Java EE, and with any Java SE environment where embeddable EJB Lite is available."
#~ msgstr "最重要的是，Web Beans是一个JCP标准，能够干净地整合到Java EE中。Web Beans也可以整合到任何使用轻量的内嵌EJB的Java SE环境中。"
